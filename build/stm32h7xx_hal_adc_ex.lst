ARM GAS  /tmp/cc2hwav8.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_adc_ex.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c"
  19              		.section	.text.LL_ADC_SetCalibrationOffsetFactor,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	LL_ADC_SetCalibrationOffsetFactor:
  26              	.LVL0:
  27              	.LFB151:
  28              		.file 2 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h"
   1:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @file    stm32h7xx_ll_adc.h
   4:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @attention
   8:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
   9:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
  12:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
  16:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  18:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  19:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #ifndef STM32H7xx_LL_ADC_H
  21:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define STM32H7xx_LL_ADC_H
  22:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  23:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
  26:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  27:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #include "stm32h7xx.h"
  29:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  30:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @addtogroup STM32H7xx_LL_Driver
ARM GAS  /tmp/cc2hwav8.s 			page 2


  31:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  32:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  33:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  34:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  35:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  36:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  38:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  39:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  40:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  43:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  46:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  47:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  48:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC calibration:                                         */
  49:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC calibration factors configuration */
  50:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  51:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_CALIB_OFFSET, LL_ADC_CALIB_LINEARITY, ...   */
  52:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* the relevant bits for:                                                     */
  53:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
  54:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration configuration: configuration before calibration start    */
  55:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration factors: register offset                                 */
  56:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_OFFSET_REGOFFSET    (0x00000000UL) /* Register CALFACT defined as referenc
  57:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_LINEARITY_REGOFFSET (0x00000001UL) /* Register CALFACT2 offset vs register
  58:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_REGOFFSET_MASK      (ADC_CALIB_FACTOR_OFFSET_REGOFFSET | ADC_CALIB_FACTOR_
  59:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_MODE_MASK                  (ADC_CR_ADCALLIN)
  60:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_MODE_BINARY_MASK           (ADC_CALIB_FACTOR_REGOFFSET_MASK) /* Mask to get binar
  61:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  62:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  63:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  64:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  65:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer register offset                                                */
  66:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  67:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  68:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  69:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  70:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  71:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  72:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  73:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  74:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  75:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET | ADC_SQR3_REGO
  76:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  77:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  78:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  79:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  80:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  81:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  82:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  83:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  84:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  85:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  86:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  87:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
ARM GAS  /tmp/cc2hwav8.s 			page 3


  88:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  89:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  90:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  91:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  92:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  93:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  94:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  95:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  96:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  97:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  98:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  99:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
 101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
 102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - data register offset                                                     */
 103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
 104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
 106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
 108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
 109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
 110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
 111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET | ADC_JDR3_REGO
 113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ1_Pos)
 119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ2_Pos)
 120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ3_Pos)
 121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ4_Pos)
 122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - regular trigger source                                                   */
 128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - regular trigger edge                                                     */
 129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
ARM GAS  /tmp/cc2hwav8.s 			page 4


 145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - injected trigger source                                                  */
 156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - injected trigger edge                                                    */
 157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL) << (4U 
 163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
ARM GAS  /tmp/cc2hwav8.s 			page 5


 202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
 218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR_AWD1CH
 220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR_AWD1CH
 221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR_AWD1CH
 222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR_AWD1CH
 223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_BITFIELD            (ADC_AWD2CR_AWD2CH_19)
 258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 6


 259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_SMP                 (ADC_SMPR2_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* the relevant bits for:                                                     */
 286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   selection on groups.                                                     */
 305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 7


 316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 thresholds registers */
 337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (Set separately as ADC_AWD_TRX_REGOFFSET to spare 32 bits space */
 338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR12_REGOFFSETGAP_VAL      (0x00000022UL)
 340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Legacy literals */
 342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD1_TR                      LL_ADC_AWD1
 343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD2_TR                      LL_ADC_AWD2
 344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD3_TR                      LL_ADC_AWD3
 345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET | ADC_OFR3_REGO
 353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC registers bits positions */
 356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         (ADC_CFGR_RES_Pos)
 357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (ADC_CFGR_AWD1SGL_Pos)
 358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (ADC_CFGR_AWD1EN_Pos)
 359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (ADC_CFGR_JAWD1EN_Pos)
 360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS_ADC3    (ADC3_CFGR_RES_Pos)
 362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC registers bits groups */
 366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC internal channels related definitions */
 370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
 372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x8fff810UL))  /* Internal voltage referen
ARM GAS  /tmp/cc2hwav8.s 			page 8


 373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                         /* Address related to STM32
 374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_90 || ADC_VER_V5_X */
 375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FF1E860UL)) /* Internal voltage referen
 376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_3 */
 377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3300UL)                     /* Analog voltage reference
 378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Temperature sensor */
 379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
 380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x8fff814UL))  /* Internal temperature sen
 381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x8fff818UL))  /* Internal temperature sen
 382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                         /* Addresses related to STM
 383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_90 || ADC_VER_V5_X */
 384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FF1E820UL)) /* Internal temperature sen
 385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FF1E840UL)) /* Internal temperature sen
 386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_3 */
 387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Internal temperature sen
 389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3300UL)                     /* Analog voltage reference
 391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Registers addresses with ADC linearity calibration content (programmed during device production,
 393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_1_ADDR ((uint32_t*) (0x1FF1EC00UL))
 394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_2_ADDR ((uint32_t*) (0x1FF1EC04UL))
 395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_3_ADDR ((uint32_t*) (0x1FF1EC08UL))
 396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_4_ADDR ((uint32_t*) (0x1FF1EC0CUL))
 397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_5_ADDR ((uint32_t*) (0x1FF1EC10UL))
 398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_6_ADDR ((uint32_t*) (0x1FF1EC14UL))
 399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_COUNT  (6UL)
 400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Alias_definition  ADC Alias definition
 405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SetChannelPreSelection  LL_ADC_SetChannelPreselection    /* Alias of LL_ADC_SetChann
 408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a register from a register basis from which an offset
 421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is applied.
 422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Pointer to register address
 425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/cc2hwav8.s 			page 9


 430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and multimode
 443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sharing the same ADC common instance):
 447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         disabled.
 449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC dual ADC mode DMA transfer data format: Each D
 466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
ARM GAS  /tmp/cc2hwav8.s 			page 10


 487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
 495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t LeftBitShift;                /*!< Configures the left shifting applied to the final resu
 505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LEFT_B
 506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions with prefix "REG").
 520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
 523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
 531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
ARM GAS  /tmp/cc2hwav8.s 			page 11


 544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t DataTransferMode;            /*!< Set ADC group regular conversion data transfer mode: n
 562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DA
 563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              data preserved or overwritten.
 568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions with prefix "INJ").
 580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
 583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
 591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 12


 601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_LDORDY                 ADC_ISR_LDORDY     /*!< ADC flag ADC LDO output voltage 
 649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
ARM GAS  /tmp/cc2hwav8.s 			page 13


 658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* DMA transfer.                                                              */
 699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
ARM GAS  /tmp/cc2hwav8.s 			page 14


 715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_BOOST_MODE ADC instance - Boost mode
 745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_6MHZ25   (0x00000000UL)                                            /*!< B
 748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_12MHZ5   (                                        ADC_CR_BOOST_0)  /*!< B
 749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_20MHZ    (                       ADC_CR_BOOST_1                 )  /*!< B
 750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_25MHZ    ((ADC_CR_BOOST_0 <<2) | ADC_CR_BOOST_1                 )  /*!< B
 751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_50MHZ    ((ADC_CR_BOOST_0 <<2) | ADC_CR_BOOST_1 | ADC_CR_BOOST_0)  /*!< B
 752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CALIBRATION_OFFSET_LINEARITY  ADC instance - Calibration mode for offset an
 757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_OFFSET                (ADC_CALIB_FACTOR_OFFSET_REGOFFSET)                     
 760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY             (ADC_CALIB_FACTOR_LINEARITY_REGOFFSET)                  
 761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_OFFSET_LINEARITY      (ADC_CALIB_FACTOR_LINEARITY_REGOFFSET | ADC_CR_ADCALLIN)
 762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CALIBRATION_LINEARITY_WORD  ADC instance - Calibration linearity words
 767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD1       (ADC_CR_LINCALRDYW1)    /*!< ADC calibration linearity w
 770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD2       (ADC_CR_LINCALRDYW2)    /*!< ADC calibration linearity w
 771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD3       (ADC_CR_LINCALRDYW3)    /*!< ADC calibration linearity w
ARM GAS  /tmp/cc2hwav8.s 			page 15


 772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD4       (ADC_CR_LINCALRDYW4)    /*!< ADC calibration linearity w
 773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD5       (ADC_CR_LINCALRDYW5)    /*!< ADC calibration linearity w
 774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD6       (ADC_CR_LINCALRDYW6)    /*!< ADC calibration linearity w
 775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_16B              (0x00000000UL)                                      /*!<
 783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_14B              (                                  ADC_CFGR_RES_0)  /*!<
 784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (                 ADC_CFGR_RES_1                 )  /*!<
 785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_1 | ADC_CFGR_RES_0)  /*!<
 786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_X)
 788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_14B_OPT          (ADC_CFGR_RES_2 |                  ADC_CFGR_RES_0)  /*!<
 789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B_OPT          (ADC_CFGR_RES_2 | ADC_CFGR_RES_1                 )  /*!<
 790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_3) || defined(ADC_VER_V5_V90)
 793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_2|ADC_CFGR_RES_1 | ADC_CFGR_RES_0) /*!< AD
 794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_2                                ) /*!< AD
 796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                             /*!< Th
 797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                                    
 798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                                    
 799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC3_CFGR_RES_1 | ADC3_CFGR_RES_0)   /*!< ADC resolutio
 802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC3_CFGR_ALIGN)       /*!< ADC conversion data alignme
 813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEFT_BIT_SHIFT   ADC left Shift
 820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_NONE  (0x00000000UL)                                                 
 823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_1     (ADC_CFGR2_LSHIFT_0)                                           
 824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_2     (ADC_CFGR2_LSHIFT_1)                                           
 825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_3     (ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0)                      
 826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_4     (ADC_CFGR2_LSHIFT_2)                                           
 827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_5     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_0)                      
 828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_6     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1)                      
ARM GAS  /tmp/cc2hwav8.s 			page 16


 829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_7     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0) 
 830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_8     (ADC_CFGR2_LSHIFT_3)                                           
 831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_9     (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_0)                      
 832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_10    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_1)                      
 833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_11    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0) 
 834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_12    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2)                      
 835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_13    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_0) 
 836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_14    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1) 
 837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_15    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1 |
 838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGNED_SATURATION ADC instance - Offset signed saturation mode
 863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE   (0x00000000UL)   /*!< ADC offset signed saturatio
 866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE    (ADC_OFR1_SSATE) /*!< ADC offset signed saturatio
 867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_RSHIFT ADC instance - Offset right shift
 872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_RSHIFT_DISABLE   (0x00000000UL)      /*!< ADC offset right shift is disabled 
 875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_RSHIFT_ENABLE    (ADC_CFGR2_RSHIFT1) /*!< ADC offset right shift is enabled (
 876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SATURATION ADC instance - Offset saturation mode
 881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_DISABLE   (0x00000000UL)           /*!< ADC offset saturation is d
 884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_ENABLE    (ADC3_OFR1_SATEN)        /*!< ADC offset saturation is e
 885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/cc2hwav8.s 			page 17


 886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC3_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among A
 894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGN ADC instance - Offset sign
 899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_NEGATIVE        (0x00000000UL)        /*!< ADC offset is negative (among
 902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_POSITIVE        (ADC3_OFR1_OFFSETPOS) /*!< ADC offset is positive (among
 903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_19                  (ADC_CHANNEL_19_NUMBER | ADC_CHANNEL_19_SMP | ADC_CHANNE
ARM GAS  /tmp/cc2hwav8.s 			page 18


 943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3)
 944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_19 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*!< Specific define for STM32H7A3xx and STM32HB3xx varieties of STM32H7XXX */
 955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_19 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(DAC2)
 962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*!< Specific define for STM32H7A3xx and STM32HB3xx varieties of STM32H7XXX */
 963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC2CH1_ADC2        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE          (0x00000000UL)                                           
 973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1      (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                          
 974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2      (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3      (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2      (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO     (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11   (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO     (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
 981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2    (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2    (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
 985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT
 986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO    (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG1    (ADC_CFGR_EXTSEL_4 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG3    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM1_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM2_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
 993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM3_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT
 994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (TIM23)
 995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM23_TRGO    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* TIM23 */
 997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (TIM24)
 998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM24_TRGO    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* TIM24 */
ARM GAS  /tmp/cc2hwav8.s 			page 19


1000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
1005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
1008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
1009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
1010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  /** @defgroup ADC_LL_EC_REG_SAMPLING_MODE  ADC group regular - Sampling mode
1015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_NORMAL               (0x00000000UL)        /*!< ADC conversions sa
1018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_BULB                 (ADC3_CFGR2_BULB)     /*!< ADC conversions sa
1019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Note: First conver
1020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED    (ADC3_CFGR2_SMPTRIG)  /*!< ADC conversions sa
1021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Trigger rising edg
1022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Trigger falling ed
1023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
1029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
1032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
1033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DATA_TRANSFER_MODE  ADC group regular - Data transfer mode of ADC conve
1038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DR_TRANSFER             (0x00000000UL)                        /*!< ADC conversio
1041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR_DMNGT_0) /*!< ADC conversio
1042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMNGT_1 | ADC_CFGR_DMNGT_0) /*!< ADC conversio
1043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER          (ADC_CFGR_DMNGT_1                   ) /*!< ADC conversio
1044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
1050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversi
1054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_LIMITED    (                  ADC3_CFGR_DMAEN)    /*!< ADC convers
1055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_UNLIMITED  (ADC3_CFGR_DMACFG | ADC3_CFGR_DMAEN)    /*!< ADC conver
1056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/cc2hwav8.s 			page 20


1057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
1062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
1065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
1066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
1074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
1075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
1076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
1077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
1078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
1079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
1080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
1082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
1083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
1084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
1085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
1086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
1087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
1088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
1097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
1098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
1099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
1100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
1102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
1103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
1104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
ARM GAS  /tmp/cc2hwav8.s 			page 21


1114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
1136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(HRTIM1)
1153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2     (ADC_JSQR_JEXTSEL_4 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* HRTIM1 */
1156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM23_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM24_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
ARM GAS  /tmp/cc2hwav8.s 			page 22


1171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
1179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
1180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
1188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
1189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
1190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2hwav8.s 			page 23


1228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                          
1229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (                                        ADC_SMPR2_SMP10
1230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_8CYCLES_5      (                    ADC_SMPR2_SMP10_1                  
1231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_16CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_32CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_64CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_387CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_810CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_2CYCLES_5      (0x00000000UL)                                     
1244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_6CYCLES_5      (                                        ADC_SMPR2_
1245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_12CYCLES_5     (                    ADC_SMPR2_SMP10_1             
1246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_
1247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_47CYCLES_5     (ADC_SMPR2_SMP10_2                                 
1248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_
1249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1             
1250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_
1251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
1255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /tmp/cc2hwav8.s 			page 24


1285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK)              
1341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_INJ          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /tmp/cc2hwav8.s 			page 25


1342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG_INJ      ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK)   
1353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK)   
1356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (0x1UL)                     /*!< ADC analog watchdog thr
1366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (0x0UL)                     /*!< ADC analog watchdog thr
1367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_FILTERING_CONFIG  Analog watchdog - filtering config
1372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_NONE          (0x00000000UL)                                          
1375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_2SAMPLES      (                                          ADC3_TR1_AWDF
1376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_3SAMPLES      (                     ADC3_TR1_AWDFILT_1                
1377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_4SAMPLES      (                     ADC3_TR1_AWDFILT_1 | ADC3_TR1_AWDF
1378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_5SAMPLES      (ADC3_TR1_AWDFILT_2                                     
1379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_6SAMPLES      (ADC3_TR1_AWDFILT_2 |                      ADC3_TR1_AWDF
1380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_7SAMPLES      (ADC3_TR1_AWDFILT_2 | ADC3_TR1_AWDFILT_1                
1381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_8SAMPLES      (ADC3_TR1_AWDFILT_2 | ADC3_TR1_AWDFILT_1 | ADC3_TR1_AWDF
1382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 26


1399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                        ADC3_CFGR2_OVSR
1413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                    ADC3_CFGR2_OVSR_1                  
1414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                    ADC3_CFGR2_OVSR_1 | ADC3_CFGR2_OVSR
1415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC3_CFGR2_OVSR_2                                      
1416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC3_CFGR2_OVSR_2                     | ADC3_CFGR2_OVSR
1417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC3_CFGR2_OVSR_2 | ADC3_CFGR2_OVSR_1                  
1418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC3_CFGR2_OVSR_2 | ADC3_CFGR2_OVSR_1 | ADC3_CFGR2_OVSR
1419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
1423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_9           (ADC_CFGR2_OVSS_3                                       
1437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_10          (ADC_CFGR2_OVSS_3                    | ADC_CFGR2_OVSS_1 
1438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_11          (ADC_CFGR2_OVSS_3                    | ADC_CFGR2_OVSS_1 
1439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc2hwav8.s 			page 27


1456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                      /*!< ADC multimode
1462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_RES_32_10B      (ADC_CCR_DAMDF_1                  ) /*!< ADC multimode
1463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_RES_8B          (ADC_CCR_DAMDF_1 | ADC_CCR_DAMDF_0) /*!< ADC multimode
1464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5           (0x00000000UL)                                
1472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5          (                                             
1473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5          (                                    ADC_CCR_D
1474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5          (                                    ADC_CCR_D
1475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS   (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5          (                  ADC_CCR_DELAY_2            
1477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS  (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES            (ADC_CCR_DELAY_3                              
1479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5          (                  ADC_CCR_DELAY_2            
1480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS  (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5          (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES            (ADC_CCR_DELAY_3                              
1483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES            (ADC_CCR_DELAY_3                              
1484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not timeout values.
1503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         above each literal definition.
1505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       not timeout values.                                                  */
1510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
ARM GAS  /tmp/cc2hwav8.s 			page 28


1513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       STM32 series:                                                         */
1515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 16384/fADC.                   */
1516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         cycles                                                             */
1522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         configuration.                                                     */
1524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 10UL)  /*!< Delay for ADC stabilization time (ADC vol
1531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "ts_vrefint").                                                   */
1535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       (5UL)  /*!< Delay for internal voltage reference stabili
1537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "tSTART_RUN").                                                   */
1541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    ( 26UL)  /*!< Delay for temperature sensor stabilization
1543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles            */
1546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (  4UL)  /*!< Delay required between ADC end of calibr
1552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Fixed timeout value for ADC linearity word bit set/clear delay.                         */
1554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Values defined to be higher than worst cases: low clock frequency,                      */
1555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* maximum prescalers.                                                                     */
1556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Ex of profile low frequency : f_ADC at 4,577 Khz (minimum value                         */
1557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* according to Data sheet), linearity set/clear bit delay MAX = 6 / f_ADC + 3 cycles AHB  */
1558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*           6 / 4577 = 1,311ms                                                            */
1559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* At maximum CPU speed (400 MHz), this means                                              */
1560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*    3.58 * 400 MHz = 524400 CPU cycles                                                   */
1561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEARITY_BIT_TOGGLE_TIMEOUT         (524400UL)      /*!< ADC linearity set/clear bit d
1562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2hwav8.s 			page 29


1570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Write a value in ADC register
1583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register to be written
1585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
1587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Read a value in ADC register
1592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register to be read
1594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Register value
1595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert the resolution defines to STM32H73x/2x ADC3 registers values
1608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the ADC3 resolution according to the STM32H73x/2x RefMan.
1609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The input can be a value from ADC3 resolution (12b, 10b, 8b,6b)
1610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg 0x00000000UL (value correspodning to ADC3 12 bits)
1617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg ADC_CFGR_RES_0 = 0x00000004  (value corresponding to ADC3 10 bits)
1618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg ADC_CFGR_RES_1 = 0x00000008 (value corresponding to ADC3 8 bits)
1619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg 0x0000001C (value corresponding to ADC3 6 bits)
1620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This helper macro is applicable for STM32H73x/2x devices only
1621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC12_RESOLUTION_TO_ADC3(__ADC_RESOLUTION__)                      \
1623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          (                                                                     \
1624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_12B)                     \
1625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             ?(0x00000000UL)                                                    \
1626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              :                                                                 \
ARM GAS  /tmp/cc2hwav8.s 			page 30


1627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_10B)                   \
1628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ?(ADC_CFGR_RES_0)                                               \
1629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                 :                                                              \
1630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                 ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_8B)                 \
1631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   ?(ADC_CFGR_RES_1)                                            \
1632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    :                                                           \
1633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_6B)              \
1634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                      ?((ADC_CFGR_RES_2|ADC_CFGR_RES_1 | ADC_CFGR_RES_0))       \
1635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                        :(0x00000000UL)                                         \
1636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          )
1637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Example:
1644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will return decimal number "4".
1646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number is returned, either defined with number
1648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
1680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL)                                 \
ARM GAS  /tmp/cc2hwav8.s 			page 31


1684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                                    \
1685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                    \
1687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                    \
1688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                                    \
1689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                    \
1691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from number in decimal format.
1696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Example:
1697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
1731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
1732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
1733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL)                                                                       
1737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                                            
1738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
ARM GAS  /tmp/cc2hwav8.s 			page 32


1741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                            
1742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                            
1743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                                            
1744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                            
1748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC internal channel:
1755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned from ADC registers,
1764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because internal and external channels share the same channel
1765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         parameters definitions of driver.
1767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
ARM GAS  /tmp/cc2hwav8.s 			page 33


1798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a value defined from parameter definition of
1814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC registers.
1817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
1848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
ARM GAS  /tmp/cc2hwav8.s 			page 34


1855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or a value from functions where a channel number is
1882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned from ADC registers,
1883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because internal and external channels share the same channel
1884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         parameters definitions of driver.
1886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
1896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3)
1900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC2)                                               \
1902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                       \
1904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                          \
1905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
1907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ||                                                                          \
1908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                       \
1911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                       \
ARM GAS  /tmp/cc2hwav8.s 			page 35


1912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
1915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
1917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC2)                                               \
1919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                       \
1921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2) ||                       \
1922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                       \
1923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                       \
1924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
1927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
1929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example:
1936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
ARM GAS  /tmp/cc2hwav8.s 			page 36


1969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
1970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
1971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
1972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
1981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
1984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
1987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
1990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
1993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
1996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
1999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
2000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
2001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
2002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
2003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
2004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
2005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
2006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
2007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
2008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
2016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
2020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
2025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
ARM GAS  /tmp/cc2hwav8.s 			page 37


2026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
2035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
2040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
2041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
2042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
2043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
2044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
2045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
2046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
2047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
2048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(1)
2049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
2050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
2051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)
2052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)
2053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)
2054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)
2055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)
2056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)
2057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
2058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.\n
2059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
2060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
2061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
2063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
2064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                 
2065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                            
2066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                       
2067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)             
2068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :                                                                                         
2069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD
2070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         different of 16 bits.
2076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDThresholds().
2077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
2078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog threshold high (on 18 bits):
2079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            (< ADCx param >,
2081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_1
2082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            );
ARM GAS  /tmp/cc2hwav8.s 			page 38


2083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         different of 16 bits.
2099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog threshold high (on 18 bits):
2102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           < threshold_value_18_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            );
2106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_16_BITS__ Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_16_BITS__) \
2116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__AWD_THRESHOLD_16_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationOffsetFactor().
2122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential ended to 0x2A:
2124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetCalibrationOffsetFactor(
2125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC1,
2126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
ARM GAS  /tmp/cc2hwav8.s 			page 39


2140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC common instance).
2154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         considered as master instances (do not depend to
2158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         any other ADC instance).
2159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     )?                                                                         \
2165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (ADC1)                                                                    \
2166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      :                                                                         \
2167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADCx__)                                                                \
2168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC common register instance
2179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3_COMMON)
2181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADCx__) == ADC1) || ((__ADCx__) == ADC2))                              \
2183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                        \
2184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC12_COMMON)                                                          \
2185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                        \
2187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                        \
2188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC3_COMMON)                                                           \
2189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)   (ADC12_COMMON)
2193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
ARM GAS  /tmp/cc2hwav8.s 			page 40


2197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC common instance are disabled.
2198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are disabled.
2209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled.
2211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3_COMMON)
2213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                        \
2216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                        \
2220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                        \
2221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC3))                                                \
2222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                         (LL_ADC_IsEnabled(ADC1) | LL_ADC_IsEnabled(ADC2))
2227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to reference manual).
2235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (0xFFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to reference manual).
2253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
ARM GAS  /tmp/cc2hwav8.s 			page 41


2254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: digital value of ADC conversion bit
2259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC3_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL)))
2262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
2263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a resolution to another resolution.
2266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_X) || defined(ADC_VER_V5_V90)
2284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__) \
2287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** ( (__ADC_RESOLUTION_CURRENT__ == LL_ADC_RESOLUTION_8B)                                             
2288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ?(                                                                                               
2289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << (((__ADC_RESOLUTION_CURRENT__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES_BITOF
2291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                          
2292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                                               
2293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   :                                                                                                
2294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (                                                                                               
2295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADC_RESOLUTION_TARGET__ == LL_ADC_RESOLUTION_8B) \
2296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? ( \
2297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__DATA__)                                                                             
2298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))               
2299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            >> (((__ADC_RESOLUTION_TARGET__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES
2300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            )                                                                                       
2301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :\
2302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           (\
2303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))                       
2305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                         
2306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      )                                                                                             
2307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )\
2308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  )
2309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 42


2311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* defined(ADC_VER_V5_3) */
2312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__) \
2315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** ( (__ADC_RESOLUTION_CURRENT__ == LL_ADC_RESOLUTION_8B)                                             
2316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ?(                                                                                               
2317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << (((__ADC_RESOLUTION_CURRENT__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES_BITOF
2319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                          
2320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                                               
2321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   :                                                                                                
2322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (                                                                                               
2323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADC_RESOLUTION_TARGET__ == LL_ADC_RESOLUTION_8B) \
2324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? ( \
2325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__DATA__)                                                                             
2326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))               
2327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            >> (((__ADC_RESOLUTION_TARGET__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES
2328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            )                                                                                       
2329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :\
2330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           (\
2331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))                       
2333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                         
2334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      )                                                                                             
2335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )\
2336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  )
2337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @brief  Helper macro to convert the ADC conversion data from
2343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         a resolution to another resolution.
2344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __DATA__ ADC conversion data to be converted
2345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         This parameter can be one of the following values:
2347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_12B
2348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_10B
2349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_8B
2350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_6B
2351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         This parameter can be one of the following values:
2353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_12B
2354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_10B
2355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_8B
2356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_6B
2357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @retval ADC conversion data to the requested resolution
2358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
2359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION_ADC3(__DATA__,\
2360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)            \
2362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__DATA__)                                                                 \
2363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL)))  \
2364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL))     \
2365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
2367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/cc2hwav8.s 			page 43


2368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 16 bits)
2375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                       (unit: digital value).
2376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                       __ADC_DATA__,\
2386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
2387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         reference VrefInt.
2395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         stored in system memory for each device during production.
2397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         connected to pin Vref+.
2399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 16 bits,
2403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion data to 16 bits.
2407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 16 bits)
2408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
2419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                 \
2421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                        (__ADC_RESOLUTION__),                   \
2422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                        LL_ADC_RESOLUTION_16B)                  \
2423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 44


2425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         stored in system memory for each device during production.
2430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calculation formula:
2431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  parameters are correct (address and data).
2443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  less accurate than calibrated values),
2446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponds to a resolution of 16 bits,
2454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor.
2456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion data to 16 bits.
2458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
2474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
2476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_16B)         \
2477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
2478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
2479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
ARM GAS  /tmp/cc2hwav8.s 			page 45


2482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
2483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to device datasheet).
2490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calculation formula:
2491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   (unit: digital value)
2495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  datasheet typical values.
2502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 16 bits
2512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 16 bits.
2514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                       On STM32H7, refer to device datasheet parameter "Avg_Slop
2516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                       On STM32H7, refer to device datasheet parameter "V30" (co
2518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
2536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((( (                                                                        \
2537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
ARM GAS  /tmp/cc2hwav8.s 			page 46


2539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                  * 1000UL)                                                     \
2540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        -                                                                       \
2541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                  * 1000UL)                                                     \
2543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                 \
2545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                     \
2546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example:
2576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
2593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC register address
2595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2hwav8.s 			page 47


2596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t data_reg_addr;
2599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Retrieve address of register DR */
2603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     data_reg_addr = (uint32_t) & (ADCx->DR);
2604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Retrieve address of register CDR */
2608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     data_reg_addr = (uint32_t) & ((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return data_reg_addr;
2612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must be respected.
2627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
2628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
ARM GAS  /tmp/cc2hwav8.s 			page 48


2653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
2691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor stabilization time.
2699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a sampling time minimum value is required.
2705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
ARM GAS  /tmp/cc2hwav8.s 			page 49


2710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Add paths to the current configuration.
2755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor stabilization time.
2762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For ADC conversion of internal channels,
ARM GAS  /tmp/cc2hwav8.s 			page 50


2767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a sampling time minimum value is required.
2768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN        LL_ADC_SetCommonPathInternalChAdd
2772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Remove paths to the current configuration.
2790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN        LL_ADC_SetCommonPathInternalChRem
2796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without having to perform a new calibration using
2823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
ARM GAS  /tmp/cc2hwav8.s 			page 51


2824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
2825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         requires their calibration).
2830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
2831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration factor can be specified only once).
2833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         To perform this processing, use helper macro
2837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
2842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationOffsetFactor\n
2843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationOffsetFactor
2844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationOffsetFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint
2853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
  29              		.loc 2 2853 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
2854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT_RES13,
2856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
  34              		.loc 2 2859 3 view .LVU1
  35 0000 D0F8C430 		ldr	r3, [r0, #196]
  36 0004 21F0F82C 		bic	ip, r1, #-134154240
  37 0008 23EA0C0C 		bic	ip, r3, ip
  38 000c C1F30A03 		ubfx	r3, r1, #0, #11
  39 0010 DB43     		mvns	r3, r3
  40 0012 03EA1133 		and	r3, r3, r1, lsr #12
  41 0016 03F01003 		and	r3, r3, #16
  42 001a 9A40     		lsls	r2, r2, r3
  43              	.LVL1:
  44              		.loc 2 2859 3 is_stmt 0 view .LVU2
  45 001c 4CEA0202 		orr	r2, ip, r2
  46 0020 C0F8C420 		str	r2, [r0, #196]
2860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
ARM GAS  /tmp/cc2hwav8.s 			page 52


2863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
  47              		.loc 2 2863 1 view .LVU3
  48 0024 7047     		bx	lr
  49              		.cfi_endproc
  50              	.LFE151:
  52              		.section	.text.LL_ADC_SetCalibrationLinearFactor,"ax",%progbits
  53              		.align	1
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	LL_ADC_SetCalibrationLinearFactor:
  59              	.LVL2:
  60              	.LFB153:
2864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
2871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
2874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationOffsetFactor\n
2876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationOffsetFactor
2877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationOffsetFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT_RES13, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) 
2891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((S
2893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
2894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC Linear calibration factor in the mode single-ended.
2898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function is intended to set linear calibration parameters
2899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without having to perform a new calibration using
2900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
2905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT2  LINCALFACT      LL_ADC_SetCalibrationLinearFactor\n
2906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT2  LINCALFACT      LL_ADC_SetCalibrationLinearFactor
2907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/cc2hwav8.s 			page 53


2908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LinearityWord This parameter can be one of the following values:
2909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD1
2910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD2
2911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD3
2912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD4
2913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD5
2914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD6
2915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x3FFFFFFF
2916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationLinearFactor(ADC_TypeDef *ADCx, uint32_t LinearityWord, u
2919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
  61              		.loc 2 2919 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
2920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
2922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
2924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
2925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     while ((READ_BIT(ADCx->CR, LinearityWord) == 0UL) && (timeout_cpu_cycles > 0UL))
2927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
2928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       timeout_cpu_cycles--;
2929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
2930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
  66              		.loc 2 2932 3 view .LVU5
2933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT2, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
  67              		.loc 2 2933 3 view .LVU6
  68 0000 D0F8C830 		ldr	r3, [r0, #200]
  69 0004 03F04043 		and	r3, r3, #-1073741824
  70 0008 1343     		orrs	r3, r3, r2
  71 000a C0F8C830 		str	r3, [r0, #200]
2934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
  72              		.loc 2 2934 3 view .LVU7
  73 000e 8368     		ldr	r3, [r0, #8]
  74 0010 23F48033 		bic	r3, r3, #65536
  75 0014 0B43     		orrs	r3, r3, r1
  76 0016 8360     		str	r3, [r0, #8]
2935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   while ((READ_BIT(ADCx->CR, LinearityWord) == 0UL) && (timeout_cpu_cycles > 0UL))
  77              		.loc 2 2935 3 view .LVU8
2932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT2, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
  78              		.loc 2 2932 12 is_stmt 0 view .LVU9
  79 0018 034B     		ldr	r3, .L6
  80              	.LVL3:
  81              	.L3:
  82              		.loc 2 2935 53 is_stmt 1 view .LVU10
  83              		.loc 2 2935 11 is_stmt 0 view .LVU11
  84 001a 8268     		ldr	r2, [r0, #8]
  85              		.loc 2 2935 53 view .LVU12
  86 001c 0A42     		tst	r2, r1
  87 001e 02D1     		bne	.L2
  88              		.loc 2 2935 53 discriminator 1 view .LVU13
ARM GAS  /tmp/cc2hwav8.s 			page 54


  89 0020 0BB1     		cbz	r3, .L2
2936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     timeout_cpu_cycles--;
  90              		.loc 2 2937 5 is_stmt 1 view .LVU14
  91              		.loc 2 2937 23 is_stmt 0 view .LVU15
  92 0022 013B     		subs	r3, r3, #1
  93              	.LVL4:
  94              		.loc 2 2937 23 view .LVU16
  95 0024 F9E7     		b	.L3
  96              	.L2:
2938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
2940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
  97              		.loc 2 2940 1 view .LVU17
  98 0026 7047     		bx	lr
  99              	.L7:
 100              		.align	2
 101              	.L6:
 102 0028 70000800 		.word	524400
 103              		.cfi_endproc
 104              	.LFE153:
 106              		.section	.text.LL_ADC_GetCalibrationLinearFactor,"ax",%progbits
 107              		.align	1
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	LL_ADC_GetCalibrationLinearFactor:
 113              	.LVL5:
 114              	.LFB154:
2941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC Linear calibration factor in the mode single-ended.
2944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT2  LINCALFACT      LL_ADC_GetCalibrationLinearFactor\n
2947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT2  LINCALFACT      LL_ADC_GetCalibrationLinearFactor
2948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LinearityWord This parameter can be one of the following values:
2950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD1
2951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD2
2952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD3
2953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD4
2954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD5
2955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD6
2956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3FFFFFFF
2957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationLinearFactor(ADC_TypeDef *ADCx, uint32_t LinearityWor
2959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 115              		.loc 2 2959 1 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
2960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
 120              		.loc 2 2960 3 view .LVU19
2961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, LinearityWord);
 121              		.loc 2 2961 3 view .LVU20
ARM GAS  /tmp/cc2hwav8.s 			page 55


 122 0000 8368     		ldr	r3, [r0, #8]
 123 0002 23EA0103 		bic	r3, r3, r1
 124 0006 8360     		str	r3, [r0, #8]
2962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   while ((READ_BIT(ADCx->CR, LinearityWord) != 0UL) && (timeout_cpu_cycles > 0UL))
 125              		.loc 2 2962 3 view .LVU21
2960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
 126              		.loc 2 2960 12 is_stmt 0 view .LVU22
 127 0008 054B     		ldr	r3, .L12
 128              	.LVL6:
 129              	.L9:
 130              		.loc 2 2962 53 is_stmt 1 view .LVU23
 131              		.loc 2 2962 11 is_stmt 0 view .LVU24
 132 000a 8268     		ldr	r2, [r0, #8]
 133              		.loc 2 2962 53 view .LVU25
 134 000c 0A42     		tst	r2, r1
 135 000e 02D0     		beq	.L10
 136              		.loc 2 2962 53 discriminator 1 view .LVU26
 137 0010 0BB1     		cbz	r3, .L10
2963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     timeout_cpu_cycles--;
 138              		.loc 2 2964 5 is_stmt 1 view .LVU27
 139              		.loc 2 2964 23 is_stmt 0 view .LVU28
 140 0012 013B     		subs	r3, r3, #1
 141              	.LVL7:
 142              		.loc 2 2964 23 view .LVU29
 143 0014 F9E7     		b	.L9
 144              	.L10:
2965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT));
2968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT2, ADC_CALFACT2_LINCALFACT));
 145              		.loc 2 2969 3 is_stmt 1 view .LVU30
 146              		.loc 2 2969 21 is_stmt 0 view .LVU31
 147 0016 D0F8C800 		ldr	r0, [r0, #200]
 148              	.LVL8:
2970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
2971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 149              		.loc 2 2971 1 view .LVU32
 150 001a 20F04040 		bic	r0, r0, #-1073741824
 151 001e 7047     		bx	lr
 152              	.L13:
 153              		.align	2
 154              	.L12:
 155 0020 70000800 		.word	524400
 156              		.cfi_endproc
 157              	.LFE154:
 159              		.section	.text.LL_ADC_SetChannelSamplingTime,"ax",%progbits
 160              		.align	1
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	LL_ADC_SetChannelSamplingTime:
 166              	.LVL9:
 167              	.LFB201:
2972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC resolution.
ARM GAS  /tmp/cc2hwav8.s 			page 56


2974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
2980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
2993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #elif defined(ADC_VER_V5_V90)
2997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
2998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC3_CFGR_RES, ((__LL_ADC12_RESOLUTION_TO_ADC3(Resolution)  & (ADC_CFGR_
3000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
3004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else /* Rev.V */
3008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if (LL_ADC_RESOLUTION_8B == Resolution)
3010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
3011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution | 0x0000000CUL);
3012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
3013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
3014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
3015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
3017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_V90 */
3020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
3021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Rev.V */
3025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (LL_ADC_RESOLUTION_8B == Resolution)
3027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution | 0x0000000CUL);
3029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
ARM GAS  /tmp/cc2hwav8.s 			page 57


3031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_X*/
3037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC resolution.
3041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
3044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B (1)
3047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
3048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B  (2)
3052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1): Specific to ADC instance: ADC1, ADC2
3053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2): Specific to ADC instance: ADC3
3054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
3056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_3)
3058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #elif defined(ADC_VER_V5_V90)
3062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC3_CFGR_RES));
3065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES)) == 0x0000001CUL)
3069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (LL_ADC_RESOLUTION_8B);
3071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else  /* ADC_VER_V5_V90 */
3079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
3080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Rev.V */
3084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES)) == 0x0000001CUL)
3086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (LL_ADC_RESOLUTION_8B);
ARM GAS  /tmp/cc2hwav8.s 			page 58


3088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_X */
3096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC low power mode.
3100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           in order to reduce power consumption.
3104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           has been retrieved by user software.
3108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           other conversion.
3110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           applications.
3114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           How to use this low power mode:
3115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC conversion start.
3126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of delay during which ADC was idle.
3135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
3138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
3143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
ARM GAS  /tmp/cc2hwav8.s 			page 59


3145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
3150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
3152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC low power mode:
3156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           in order to reduce power consumption.
3160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           has been retrieved by user software.
3164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           other conversion.
3166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           applications.
3170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           How to use this low power mode:
3171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC conversion start.
3182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of delay during which ADC was idle.
3191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
3194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
3201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc2hwav8.s 			page 60


3202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC selected Channel.
3207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the pre-selection of channel configuration.
3208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Channel selections is dependent to ADC instance and IP version:
3209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For STM32H72x/3x This is applicable only for ADC1/ADC2
3210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For Rest of STM32H7xxx This is applicable only all the ADCs instances.
3211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelPreselection(ADC_TypeDef *ADCx, uint32_t Channel)
3237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (ADCx != ADC3)
3240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       /* ADC channels preselection */
3242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       ADCx->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 0x1FUL));
3243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
3245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* ADC channels preselection */
3246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ADCx->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 0x1FUL));
3247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
3248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Gets ADC pre-selected Channel.
3252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function gets the pre-selected ADC channel.
3253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Channel selections is dependent to ADC instance and IP version:
3254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For STM32H72x/3x This is applicable only for ADC1/ADC2
3255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For Rest of STM32H7xxx This is applicable on all the ADCs instances.
3256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
ARM GAS  /tmp/cc2hwav8.s 			page 61


3259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval the preselection state of Channel (!= 0 : pre-selected, == 0 : not pre-selected)
3280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelPreselection(ADC_TypeDef *ADCx, uint32_t Channel)
3282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (ADCx != ADC3)
3285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Gets preselected ADC channel */
3287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->PCSEL_RES0, 1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 
3288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
3294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Gets preselected ADC channel */
3295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->PCSEL, 1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 0x1FU
3296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
3297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
3301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or group injected)
3305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           converted data).
3307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset has to be left-aligned on bit 15 (handling maximum ADC resolution 16 bit),
3309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the LSB (right bits) are set to 0.
3310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/cc2hwav8.s 			page 62


3316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
3319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
3340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
3361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
3362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
3363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
3364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
3366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
3367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
3368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
3369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
3370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
ARM GAS  /tmp/cc2hwav8.s 			page 63


3373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
3384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or group injected)
3396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
3404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
3406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
3408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
3421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  /tmp/cc2hwav8.s 			page 64


3430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
3442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
3443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
3444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
3445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
3447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
3448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
3449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
3450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
3451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
3452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         converted data).
3465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset has to be left-aligned on bit 15 (handling maximum ADC resolution 16 bit),
3467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the LSB (right bits) are set to 0.
3468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
3479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 65


3487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set data right shift for the ADC selected offset number 1, 2, 3 or 4:
3490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    RSHIFT          LL_ADC_SetDataRightShift\n
3492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  RigthShift This parameter can be one of the following values:
3499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
3500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
3501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned None
3502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t RigthSh
3504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 | ADC_CFGR2_RSHIFT2 | ADC_CFGR2_RSHIFT3 | ADC_CFGR2_RS
3506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get data right shift for the ADC selected offset number 1, 2, 3 or 4:
3510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    RSHIFT          LL_ADC_GetDataRightShift\n
3512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
3520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
3521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety)
3523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 << (Offsety & 0x1FUL)))) >> (Offsety 
3525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set signed saturation for the ADC selected offset number 1, 2, 3 or 4:
3529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SSATE          LL_ADC_SetOffsetSignedSaturation
3534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSignedSaturation This parameter can be one of the following values:
3541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
3542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
3543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned None
ARM GAS  /tmp/cc2hwav8.s 			page 66


3544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t
3546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
3557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get signed saturation for the ADC selected offset number 1, 2, 3 or 4:
3562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SSATE          LL_ADC_GetOffsetSignedSaturation
3567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
3575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
3576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC_OFR1_SSATE);
3590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         choose offset saturation mode.
3597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
ARM GAS  /tmp/cc2hwav8.s 			page 67


3601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_SetOffsetSaturation\n
3602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_SetOffsetSaturation\n
3603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_SetOffsetSaturation\n
3604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_SetOffsetSaturation
3605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSaturation This parameter can be one of the following values:
3612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Offse
3617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_SATEN,
3624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetSaturation);
3625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset saturation if enabled or disabled.
3631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_GetOffsetSaturation\n
3632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_GetOffsetSaturation\n
3633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_GetOffsetSaturation\n
3634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_GetOffsetSaturation
3635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_SATEN);
3652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }else
3653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 68


3658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         choose offset sign.
3661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_SetOffsetSign\n
3666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_SetOffsetSign\n
3667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_SetOffsetSign\n
3668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_SetOffsetSign
3669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSign This parameter can be one of the following values:
3676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
3681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSETPOS,
3688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetSign);
3689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset sign if positive or negative.
3695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_GetOffsetSign\n
3696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_GetOffsetSign\n
3697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_GetOffsetSign\n
3698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_GetOffsetSign
3699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety)
3710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 69


3715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_OFFSETPOS);
3716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         force offset state disable or enable
3726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN,
3756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetState);
3757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_SSATE,
3762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetState);
3763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset state disabled or enabled.
3769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
ARM GAS  /tmp/cc2hwav8.s 			page 70


3772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_OFFSET1_EN);
3789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC_OFR1_SSATE);
3793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
3800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
3804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
3810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
ARM GAS  /tmp/cc2hwav8.s 			page 71


3829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_OUT
3846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_OUT
3847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM3_OUT
3848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
3859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (equivalent to
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
ARM GAS  /tmp/cc2hwav8.s 			page 72


3886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_OUT
3891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_OUT
3892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM3_OUT
3893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((TriggerSource
3905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          );
3908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or external.
3913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc2hwav8.s 			page 73


3943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC sampling mode.
3964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the ADC conversion sampling mode
3965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This mode applies to regular group only.
3966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Set sampling mode is applied to all conversion of regular group.
3967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_SetSamplingMode\n
3972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_SetSamplingMode
3973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SamplingMode This parameter can be one of the following values:
3975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSamplingMode(ADC_TypeDef *ADCx, uint32_t SamplingMode)
3981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
3983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR2, ADC3_CFGR2_BULB | ADC3_CFGR2_SMPTRIG, SamplingMode);
3989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are configurable.
ARM GAS  /tmp/cc2hwav8.s 			page 74


4000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function performs configuration of:
4001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
4005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are defined by channel number.
4010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function performs configuration of:
4011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             highest channel number).
4018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
4019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
4027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
4050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
4054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
ARM GAS  /tmp/cc2hwav8.s 			page 75


4057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are configurable.
4059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function retrieves:
4060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
4064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are defined by channel number.
4069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function retrieves:
4070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             highest channel number).
4077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
4078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
4082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
4102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
4104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
4108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
4113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
ARM GAS  /tmp/cc2hwav8.s 			page 76


4114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
4119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
4120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
4136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
4140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
4143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
4144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
4157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
4159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
4163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         scan sequence rank.
4164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function performs configuration of:
4165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
4167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         affectation to a channel are configurable.
4170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
ARM GAS  /tmp/cc2hwav8.s 			page 77


4171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
4176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
4183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
4187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
4189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
4195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /tmp/cc2hwav8.s 			page 78


4228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
4246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
4252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
4255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
4257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         scan sequence rank.
4264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         affectation to a channel are configurable.
4267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
4278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
4280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
ARM GAS  /tmp/cc2hwav8.s 			page 79


4285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
ARM GAS  /tmp/cc2hwav8.s 			page 80


4342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
4346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
4347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
4348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
4353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
4358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           conversions launched successively automatically.
4366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           conversions launched successively automatically.
4390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
4397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
ARM GAS  /tmp/cc2hwav8.s 			page 81


4399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC data transfer mode
4402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion data can be either:
4403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Available in Data Register
4404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in one shot mode
4405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in circular mode
4406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred to DFSDM data register
4407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMNGT           LL_ADC_REG_SetDataTransferMode
4408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  DataTransferMode Select Data Management configuration
4410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDataTransferMode(ADC_TypeDef *ADCx, uint32_t DataTransferMode)
4413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMNGT, DataTransferMode);
4415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
4418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable DMA requests for ADC3.
4420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDMAReq (ADC_TypeDef *ADCx)
4425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN);
4427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDMAReq(ADC_TypeDef *ADCx)
4430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT (ADCx->CFGR, ADC3_CFGR_DMAEN);
4432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabledDMAReq (ADC_TypeDef *ADCx)
4435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN) == (ADC3_CFGR_DMAEN)) ? 1UL : 0UL);
4437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode:
4443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
4446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
4450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
4453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
ARM GAS  /tmp/cc2hwav8.s 			page 82


4456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransferMode\n
4465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransferMode
4466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_NONE
4469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_LIMITED
4470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_UNLIMITED
4471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransferMode(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
4476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
4477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC3_CFGR_DMAEN | ADC3_CFGR_DMACFG, DMATransfer);
4478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode:
4486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
4489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
4493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
4496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_NONE
4508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_LIMITED
4509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_UNLIMITED
4510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransferMode(ADC_TypeDef *ADCx)
4512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc2hwav8.s 			page 83


4513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
4514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
4515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN | ADC3_CFGR_DMACFG));
4516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    else
4518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
4519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
4520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
4524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC data transfer mode
4527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion data can be either:
4528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Available in Data Register
4529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in one shot mode
4530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in circular mode
4531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred to DFSDM data register
4532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMNGT           LL_ADC_REG_GetDataTransferMode
4533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DR_TRANSFER
4536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER
4539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDataTransferMode(ADC_TypeDef *ADCx)
4541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMNGT));
4543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         data preserved or overwritten.
4549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         other devices without this feature have a behavior
4551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         equivalent to data overwritten.
4552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 84


4570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         data preserved or overwritten.
4574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
4581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
4587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
4591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
4597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
4601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
ARM GAS  /tmp/cc2hwav8.s 			page 85


4627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
4633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
4634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
4635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
4646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (equivalent to
4650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
4678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
4679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
4680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
4682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
ARM GAS  /tmp/cc2hwav8.s 			page 86


4684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
4688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((TriggerSource
4692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
4693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
4694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          );
4695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             or external
4700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
4709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
ARM GAS  /tmp/cc2hwav8.s 			page 87


4741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function performs configuration of:
4751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function retrieves:
4777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
ARM GAS  /tmp/cc2hwav8.s 			page 88


4798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence rank.
4831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
4836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
4838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
4839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
ARM GAS  /tmp/cc2hwav8.s 			page 89


4855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
4884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence rank.
4900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
4910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
ARM GAS  /tmp/cc2hwav8.s 			page 90


4912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
4954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
4955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
4956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <<
4962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
4964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent or from ADC group regular.
ARM GAS  /tmp/cc2hwav8.s 			page 91


4969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC group injected.
4975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent trigger.
4978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC group regular.
4983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
5003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent or from ADC group regular.
5004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
5005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
5011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
5013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
5017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - group injected trigger
5019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer length
5020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer ranks
5021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If contexts queue is disabled:
5022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - only 1 sequence can be configured
5023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           and is active perpetually.
5024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If contexts queue is enabled:
5025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - up to 2 contexts can be queued
ARM GAS  /tmp/cc2hwav8.s 			page 92


5026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
5027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
5028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
5029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
5030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
5031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
5032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
5033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
5034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
5035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           into the queue).
5036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
5037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
5038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
5039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
5040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
5042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
5043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
5048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
5049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
5051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
5057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
5059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
5063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
5064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
5065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
5072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
5074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
5078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         contexts queue.
5079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - group injected trigger
5081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer length
5082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer ranks
ARM GAS  /tmp/cc2hwav8.s 			page 93


5083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
5084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
5085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
5086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         cannot be used):
5087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
5088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
5089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
5090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
5091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
5092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
5093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
5094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
5096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
5098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
5099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
5103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
5104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
5105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
5106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
5107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
5108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
5109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
5110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
5117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
5118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
5119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
5120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
5121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
5123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
5124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
5125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
5126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
5127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
5128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
5129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
5130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
5131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
5132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
5133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
5134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
ARM GAS  /tmp/cc2hwav8.s 			page 94


5140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
ARM GAS  /tmp/cc2hwav8.s 			page 95


5197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /tmp/cc2hwav8.s 			page 96


5254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JL,
5296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)        |
5297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SequencerNbRanks
5303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             );
5304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
5308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
ARM GAS  /tmp/cc2hwav8.s 			page 97


5311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
5312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         converted:
5321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         setting).
5324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TS_temp, ...).
5326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is required.
5335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
5336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
ARM GAS  /tmp/cc2hwav8.s 			page 98


5368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
5393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_8CYCLES_5
5395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_16CYCLES_5
5396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_32CYCLES_5
5397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_64CYCLES_5
5398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
5399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
5400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 168              		.loc 2 5403 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173              		.loc 2 5403 1 is_stmt 0 view .LVU34
 174 0000 10B4     		push	{r4}
 175              	.LCFI0:
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 4, -4
5404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
 178              		.loc 2 5408 3 is_stmt 1 view .LVU35
 179              		.loc 2 5408 25 is_stmt 0 view .LVU36
 180 0002 1430     		adds	r0, r0, #20
 181              	.LVL10:
 182              		.loc 2 5408 25 view .LVU37
 183 0004 4B0E     		lsrs	r3, r1, #25
ARM GAS  /tmp/cc2hwav8.s 			page 99


 184 0006 9B00     		lsls	r3, r3, #2
 185 0008 03F00403 		and	r3, r3, #4
 186              	.LVL11:
5409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
 187              		.loc 2 5410 3 is_stmt 1 view .LVU38
 188 000c C458     		ldr	r4, [r0, r3]
 189 000e C1F30451 		ubfx	r1, r1, #20, #5
 190              	.LVL12:
 191              		.loc 2 5410 3 is_stmt 0 view .LVU39
 192 0012 4FF0070C 		mov	ip, #7
 193 0016 0CFA01FC 		lsl	ip, ip, r1
 194 001a 24EA0C0C 		bic	ip, r4, ip
 195 001e 8A40     		lsls	r2, r2, r1
 196              	.LVL13:
 197              		.loc 2 5410 3 view .LVU40
 198 0020 4CEA0202 		orr	r2, ip, r2
 199 0024 C250     		str	r2, [r0, r3]
5411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 200              		.loc 2 5413 1 view .LVU41
 201 0026 5DF8044B 		ldr	r4, [sp], #4
 202              	.LCFI1:
 203              		.cfi_restore 4
 204              		.cfi_def_cfa_offset 0
 205 002a 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE201:
 209              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
 210              		.align	1
 211              		.global	HAL_ADCEx_Calibration_Start
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 216              	HAL_ADCEx_Calibration_Start:
 217              	.LVL14:
 218              	.LFB335:
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @file    stm32h7xx_hal_adc_ex.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           + Peripheral Control functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          "stm32h7xx_hal_adc.c".
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ******************************************************************************
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @attention
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * All rights reserved.
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * in the root directory of this software component.
ARM GAS  /tmp/cc2hwav8.s 			page 100


  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ******************************************************************************
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   @verbatim
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   [..]
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       available in file of generic functions "stm32h7xx_hal_adc.c".
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   [..]
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   @endverbatim
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ******************************************************************************
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #include "stm32h7xx_hal.h"
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @addtogroup STM32H7xx_HAL_Driver
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #define ADC_JSQR_FIELDS  ((ADC_JSQR_JL | ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN |\
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                            ADC_JSQR_JSQ1  | ADC_JSQR_JSQ2 |\
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                            ADC_JSQR_JSQ3 | ADC_JSQR_JSQ4 ))  /*!< ADC_JSQR fields of parameters tha
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                                                   once the ADC is enabled */
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                     */
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: low clock frequency,         */
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* maximum prescalers.                                                        */
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Ex of profile low frequency : f_ADC at 0.125 Mhz (minimum value              */
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* according to Data sheet), calibration_time MAX = 165010 / f_ADC              */
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /*           165010 / 125000 = 1.32s                                            */
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* At maximum CPU speed (480 MHz), this means                                   */
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /*    1.32 * 480 MHz = 633600000 CPU cycles                                     */
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         (633600000U)   /*!< ADC calibration time-out value */
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @}
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/cc2hwav8.s 			page 101


  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @verbatim
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       ##### IO operation functions #####
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected.
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected.
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Poll for conversion complete on ADC group injected.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Get result of ADC group injected channel conversion.
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected and enable interruptions.
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected and disable interruptions.
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) When multimode feature is available, start multimode and enable DMA transfer.
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @endverbatim
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc       ADC handle
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** * @param  CalibrationMode       Selection of calibration offset or
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         linear calibration offset.
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg ADC_CALIB_OFFSET       Channel in mode calibration offset
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg ADC_CALIB_OFFSET_LINEARITY Channel in mode linear calibration offset
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  SingleDiff Selection of single-ended or differential input
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         This parameter can be one of the following values:
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef *hadc, uint32_t CalibrationMode, ui
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 219              		.loc 1 127 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 8
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		.loc 1 127 1 is_stmt 0 view .LVU43
 224 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/cc2hwav8.s 			page 102


 225              	.LCFI2:
 226              		.cfi_def_cfa_offset 16
 227              		.cfi_offset 4, -16
 228              		.cfi_offset 5, -12
 229              		.cfi_offset 6, -8
 230              		.cfi_offset 14, -4
 231 0002 82B0     		sub	sp, sp, #8
 232              	.LCFI3:
 233              		.cfi_def_cfa_offset 24
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 234              		.loc 1 128 3 is_stmt 1 view .LVU44
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0UL;
 235              		.loc 1 129 3 view .LVU45
 236              		.loc 1 129 17 is_stmt 0 view .LVU46
 237 0004 0023     		movs	r3, #0
 238 0006 0193     		str	r3, [sp, #4]
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 239              		.loc 1 132 3 is_stmt 1 view .LVU47
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 240              		.loc 1 133 3 view .LVU48
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 241              		.loc 1 136 3 view .LVU49
 242              		.loc 1 136 3 view .LVU50
 243 0008 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 244 000c 012B     		cmp	r3, #1
 245 000e 43D0     		beq	.L23
 246 0010 0446     		mov	r4, r0
 247 0012 0D46     		mov	r5, r1
 248 0014 1646     		mov	r6, r2
 249              		.loc 1 136 3 discriminator 2 view .LVU51
 250 0016 0123     		movs	r3, #1
 251 0018 80F85030 		strb	r3, [r0, #80]
 252              		.loc 1 136 3 discriminator 2 view .LVU52
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
 253              		.loc 1 141 3 view .LVU53
 254              		.loc 1 141 20 is_stmt 0 view .LVU54
 255 001c FFF7FEFF 		bl	ADC_Disable
 256              	.LVL15:
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 257              		.loc 1 144 3 is_stmt 1 view .LVU55
 258              		.loc 1 144 6 is_stmt 0 view .LVU56
 259 0020 0028     		cmp	r0, #0
 260 0022 30D1     		bne	.L18
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set ADC state */
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 261              		.loc 1 147 5 is_stmt 1 view .LVU57
ARM GAS  /tmp/cc2hwav8.s 			page 103


 262 0024 626D     		ldr	r2, [r4, #84]
 263 0026 1D4B     		ldr	r3, .L26
 264 0028 1340     		ands	r3, r3, r2
 265 002a 43F00203 		orr	r3, r3, #2
 266 002e 6365     		str	r3, [r4, #84]
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start ADC calibration in mode single-ended or differential */
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_StartCalibration(hadc->Instance, CalibrationMode, SingleDiff);
 267              		.loc 1 152 5 view .LVU58
 268 0030 2168     		ldr	r1, [r4]
 269              	.LVL16:
 270              	.LBB307:
 271              	.LBI307:
5414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /tmp/cc2hwav8.s 			page 104


5456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
5479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_8CYCLES_5
5481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_16CYCLES_5
5482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_32CYCLES_5
5483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_64CYCLES_5
5484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
5485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
5486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
5488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
5493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
5495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
5500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC group regular or injected.
5502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         available in differential mode.
5508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not available in differential mode.
5510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some channels are internally fixed to single-ended inputs
ARM GAS  /tmp/cc2hwav8.s 			page 105


5513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configuration:
5514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC1: Channels 0, 6, 7, 8, 9, 13, 14, 15, 17, and 19
5515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC2: Channels 0, 6, 7, 8, 9, 13, 14, 15 and 19
5516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC3: Channels 0, 6, 7, 8, 9, 12, 16, 17, and 19
5517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
5523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
5524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
5551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
5555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->LTR2_DIFSEL,
5557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SI
5559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
5561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->DIFSEL_RES12,
5563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SI
5565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else  /* ADC_VER_V5_V90 */
5567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
ARM GAS  /tmp/cc2hwav8.s 			page 106


5570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
5571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
5573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
5574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
5579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         available in differential mode.
5587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not available in differential mode.
5589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some channels are internally fixed to single-ended inputs
5592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configuration:
5593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC1: Channels 0, 6, 7, 8, 9, 13, 14, 15, 17, and 19
5594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC2: Channels 0, 6, 7, 8, 9, 13, 14, 15 and 19
5595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC3: Channels 0, 6, 7, 8, 9, 12, 16, 17, and 19
5596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
5620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
5622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL_RES12, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
5624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
5626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 107


5627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
5630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
5634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled.
5642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
ARM GAS  /tmp/cc2hwav8.s 			page 108


5684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
ARM GAS  /tmp/cc2hwav8.s 			page 109


5741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
5744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
5750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
5751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
5752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(1)
5753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
5754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
5755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)
5756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)
5757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)
5758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)
5759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)
5760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)
5761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.\n
5763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
5765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
5775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
5777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
5791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
5793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           one channel.
5796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
ARM GAS  /tmp/cc2hwav8.s 			page 110


5798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             by bitfield.
5838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
ARM GAS  /tmp/cc2hwav8.s 			page 111


5855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
5901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.
5905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MA
5910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
ARM GAS  /tmp/cc2hwav8.s 			page 112


5912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* or a single channel.                                                     */
5917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
5921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  )
5927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
5931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a single channel */
5933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
5938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
5939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
5940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
5948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a single channel */
5950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
5957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return AnalogWDMonitChannels;
5960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         high or low.
5965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
ARM GAS  /tmp/cc2hwav8.s 			page 113


5969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done
5991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on oversampling intermediate computation (after ratio, before shift
5992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         application): intermediate register bitfield [32:7]
5993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (26 most significant bits).
5994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
6000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
6004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
6013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* position in register and register position depending on parameters       */
6022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* "AWDThresholdsHighLow" and "AWDy".                                       */
6023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* containing other bits reserved for other purpose.                        */
6025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)
ARM GAS  /tmp/cc2hwav8.s 			page 114


6026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
6028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                AWDThresholdsHighLow,
6029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_
6030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* position in register and register position depending on parameters       */
6035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* "AWDThresholdsHighLow" and "AWDy".                                       */
6036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* containing other bits reserved for other purpose.                        */
6038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK
6039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) 
6040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + (AWDThresholdsHighLow));
6041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdValue);
6043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
6045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> A
6051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) * 
6052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + (AWDThresholdsHighLow));
6053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdValue);
6055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
6056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         concatenated.
6062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
6068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
6080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
6081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
6082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc2hwav8.s 			page 115


6083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_
6085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MA
6086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + (AWDThresholdsHighLow));
6087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg, ADC_LTR_LT));
6089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
6090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
6091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                    + ((AWDy & ADC_AWD_TR12_REGOFFSE
6092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                    + (AWDThresholdsHighLow));
6093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg, ADC_LTR_LT));
6095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
6102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         high and low. Applicable for devices STM32H72xx and STM32H73xx.
6103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
6104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
6105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
6110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
6115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
6120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
6123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
6129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
6133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
ARM GAS  /tmp/cc2hwav8.s 			page 116


6140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "AWDy".                                                                  */
6149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     uint32_t __IO *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)
6154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
6156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_TR1_HT1 | ADC3_TR1_LT1,
6157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (AWDThresholdHighValue << ADC3_TR1_HT1_Pos) | AWDThresholdLowValue);
6158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK
6162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) 
6163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + (LL_ADC_AWD_THRESHOLD_LOW));
6164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg2 = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
6165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                          + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK)
6166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                          + (LL_ADC_AWD_THRESHOLD_HIGH));
6167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdLowValue);
6169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg2, ADC_HTR_HT, AWDThresholdHighValue);
6170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog filtering configuration
6176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable on ADC3 of devices STM32H72xx and STM32H73xx.
6181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *  @note  On this STM32 series, this feature is only available on first
6182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog (AWD1)
6183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_SetAWDFilteringConfiguration
6184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  FilteringConfig This parameter can be one of the following values:
6188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cc2hwav8.s 			page 117


6197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t
6199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Prevent unused argument(s) compilation warning */
6203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (void)(AWDy);
6204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->LTR1_TR1, ADC3_TR1_AWDFILT, FilteringConfig);
6205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog filtering configuration
6210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *  @note  On this STM32 series, this feature is only available on first
6211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog (AWD1)
6212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable on ADC3 of devices STM32H72xx and STM32H73xx.
6213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_GetAWDFilteringConfiguration
6214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be:
6218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy)
6228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Prevent unused argument(s) compilation warning */
6232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (void)(AWDy);
6233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->LTR1_TR1, ADC3_TR1_AWDFILT));
6234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance, return 0 */
6238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
6239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
ARM GAS  /tmp/cc2hwav8.s 			page 118


6254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (oversampler buffer reset).
6259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (oversampler buffer reset).
6289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
6301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on the selected ADC group.
6308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are done from 1 trigger)
ARM GAS  /tmp/cc2hwav8.s 			page 119


6311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           needs a trigger)
6313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
6317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on the selected ADC group.
6335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are done from 1 trigger)
6338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           needs a trigger)
6340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
6347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling
6353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ratio
6356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - shift
6357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Ratio This parameter can be in the range from 1 to 1024.
6365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In the case of ADC3 can be one of the following values:
6366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
ARM GAS  /tmp/cc2hwav8.s 			page 120


6368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_9
6385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_10
6386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_11
6387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if(ADCx==ADC3)
6393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC3_CFGR2_OVSR), (Shift | Ratio));
6395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | (((Ratio - 1UL) << ADC_CFGR
6399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
6401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | (((Ratio - 1UL) << ADC_CFGR2_
6403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Ratio This parameter can be in the from 1 to 1024.
6413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In the case of ADC3 can be one of the following values:
6414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
6423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
6424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc2hwav8.s 			page 121


6425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if(ADCx==ADC3)
6427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC3_CFGR2_OVSR));
6429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (((uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR)) + (1UL << ADC_CFGR2_OVSR_Pos)) >> AD
6433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
6435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (((uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR)) + (1UL << ADC_CFGR2_OVSR_Pos)) >> ADC_
6437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_9
6457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_10
6458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_11
6459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
6460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
6461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC boost mode.
6474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC boost must be configured, without calibration on going, without conversion
6477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR  BOOST      LL_ADC_SetBoostMode
6479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  BoostMode This parameter can be one of the following values:
6481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_6MHZ25
ARM GAS  /tmp/cc2hwav8.s 			page 122


6482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_12MHZ5
6483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_20MHZ
6484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_25MHZ
6485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_50MHZ
6486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetBoostMode(ADC_TypeDef *ADCx, uint32_t BoostMode)
6489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
6492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST, (BoostMode & ADC_CR_BOOST));
6494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else   /* ADC_VER_V5_V90 */
6496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Cut 1.x */
6497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST_0, (BoostMode >> 2UL));
6499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Cut 2.x */
6501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST, (BoostMode & ADC_CR_BOOST));
6503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC boost mode.
6510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC boost must be configured, without calibration on going, without conversion
6513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
6514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR  BOOST      LL_ADC_GetBoostMode
6515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: Boost disabled 1: Boost enabled
6517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetBoostMode(ADC_TypeDef *ADCx)
6519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Cut 1.x */
6521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)READ_BIT(ADCx->CR, ADC_CR_BOOST_0);
6523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Cut 2.x */
6525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return ((READ_BIT(ADCx->CR, ADC_CR_BOOST) == (ADC_CR_BOOST)) ? 1UL : 0UL);
6527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         either master or slave depending on hardware.
6535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
6536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
ARM GAS  /tmp/cc2hwav8.s 			page 123


6539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro
6541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
6559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         either master or slave depending on hardware.
6566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
6567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
6581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
6583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or transfer by DMA.
6588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         DMA transfer settings.
6591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
ARM GAS  /tmp/cc2hwav8.s 			page 124


6596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
6597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
6601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
6604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DAMDF          LL_ADC_GetMultiDMATransfer\n
6620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
6623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_32_10B
6625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_8B
6626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DAMDF, MultiDMATransfer);
6631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or transfer by DMA.
6636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         DMA transfer settings.
6639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
6645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
6649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
6652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
ARM GAS  /tmp/cc2hwav8.s 			page 125


6653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DAMDF          LL_ADC_GetMultiDMATransfer\n
6664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_32_10B
6669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_8B
6670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
6672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DAMDF));
6674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
6690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
6693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5
6694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5
6695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5
6696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5 (1)
6697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS
6698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5 (2)
6699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS
6700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (3)
6701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5 (4)
6702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS
6703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5 (5)
6704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (6)
6705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (7)
6706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
6707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 16, 14, 12 or 10 bits.
6708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 16, 14 or 12  bits.
6709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 10 or 8 bits.
ARM GAS  /tmp/cc2hwav8.s 			page 126


6710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (4) Parameter available only if ADC resolution is 16 or 14 bits.
6711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (5) Parameter available only if ADC resolution is 16 bits.
6712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (6) Parameter available only if ADC resolution is 12 bits.
6713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (7) Parameter available only if ADC resolution is 16 or 14 bits.
6714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5
6728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5
6729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5
6730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5 (1)
6731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS
6732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5 (2)
6733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS
6734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (3)
6735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5 (4)
6736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS
6737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5 (5)
6738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (6)
6739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (7)
6740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
6741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 16, 14, 12 or 10 bits.
6742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 16, 14 or 12  bits.
6743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 10 or 8 bits.
6744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (4) Parameter available only if ADC resolution is 16 or 14 bits.
6745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (5) Parameter available only if ADC resolution is 16 bits.
6746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (6) Parameter available only if ADC resolution is 12 bits.
6747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (7) Parameter available only if ADC resolution is 16 or 14 bits.
6748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
6750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
6752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
ARM GAS  /tmp/cc2hwav8.s 			page 127


6767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
6812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
6814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /tmp/cc2hwav8.s 			page 128


6824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADVREGEN);
6838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
6861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
6863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion start.
6870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2hwav8.s 			page 129


6881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADEN);
6889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADDIS);
6909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
ARM GAS  /tmp/cc2hwav8.s 			page 130


6938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration duration:
6943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Calibration of offset: 520 ADC clock cycles
6944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Calibration of linearity: 131072 ADC clock cycles
6945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
6946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         requires their calibration).
6951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
6952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
6953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration run can be performed only once).
6954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration\n
6959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CR       ADCALLIN       LL_ADC_StartCalibration
6960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationMode This parameter can be one of the following values:
6962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_OFFSET
6963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_OFFSET_LINEARITY
6964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t CalibrationMode, uint32_t 
 272              		.loc 2 6969 22 view .LVU59
 273              	.LBB308:
6970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 274              		.loc 2 6974 3 view .LVU60
 275 0032 8A68     		ldr	r2, [r1, #8]
 276 0034 1A4B     		ldr	r3, .L26+4
 277 0036 1340     		ands	r3, r3, r2
 278 0038 05F48035 		and	r5, r5, #65536
 279              	.LVL17:
 280              		.loc 2 6974 3 is_stmt 0 view .LVU61
 281 003c 06F08046 		and	r6, r6, #1073741824
 282              	.LVL18:
 283              		.loc 2 6974 3 view .LVU62
 284 0040 45EA0602 		orr	r2, r5, r6
 285 0044 1343     		orrs	r3, r3, r2
 286 0046 43F00043 		orr	r3, r3, #-2147483648
 287 004a 8B60     		str	r3, [r1, #8]
 288              	.LVL19:
 289              		.loc 2 6974 3 view .LVU63
 290              	.LBE308:
 291              	.LBE307:
ARM GAS  /tmp/cc2hwav8.s 			page 131


 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Wait for calibration completion */
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while (LL_ADC_IsCalibrationOnGoing(hadc->Instance) != 0UL)
 292              		.loc 1 155 5 is_stmt 1 view .LVU64
 293              	.L19:
 294              		.loc 1 155 56 view .LVU65
 295              		.loc 1 155 12 is_stmt 0 view .LVU66
 296 004c 2368     		ldr	r3, [r4]
 297              	.LVL20:
 298              	.LBB309:
 299              	.LBI309:
6975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADCALLIN | ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADCAL | (CalibrationMode & ADC_CALIB_MODE_MASK) | (SingleDiff & ADC_SINGLEDIFF_
6977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
 300              		.loc 2 6985 26 is_stmt 1 view .LVU67
 301              	.LBB310:
6986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 302              		.loc 2 6987 3 view .LVU68
 303              		.loc 2 6987 12 is_stmt 0 view .LVU69
 304 004e 9B68     		ldr	r3, [r3, #8]
 305              	.LVL21:
 306              		.loc 2 6987 70 view .LVU70
 307 0050 002B     		cmp	r3, #0
 308 0052 06DB     		blt	.L25
 309              	.LVL22:
 310              		.loc 2 6987 70 view .LVU71
 311              	.LBE310:
 312              	.LBE309:
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       wait_loop_index++;
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Process unlocked */
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         return HAL_ERROR;
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set ADC state */
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 313              		.loc 1 173 5 is_stmt 1 view .LVU72
 314 0054 636D     		ldr	r3, [r4, #84]
ARM GAS  /tmp/cc2hwav8.s 			page 132


 315 0056 23F00303 		bic	r3, r3, #3
 316 005a 43F00103 		orr	r3, r3, #1
 317 005e 6365     		str	r3, [r4, #84]
 318 0060 15E0     		b	.L22
 319              	.LVL23:
 320              	.L25:
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 321              		.loc 1 157 7 view .LVU73
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 322              		.loc 1 157 22 is_stmt 0 view .LVU74
 323 0062 019B     		ldr	r3, [sp, #4]
 324 0064 0133     		adds	r3, r3, #1
 325 0066 0193     		str	r3, [sp, #4]
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 326              		.loc 1 158 7 is_stmt 1 view .LVU75
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 327              		.loc 1 158 27 is_stmt 0 view .LVU76
 328 0068 019A     		ldr	r2, [sp, #4]
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 329              		.loc 1 158 10 view .LVU77
 330 006a 0E4B     		ldr	r3, .L26+8
 331 006c 9A42     		cmp	r2, r3
 332 006e EDD3     		bcc	.L19
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 333              		.loc 1 161 9 is_stmt 1 view .LVU78
 334 0070 636D     		ldr	r3, [r4, #84]
 335 0072 23F01203 		bic	r3, r3, #18
 336 0076 43F01003 		orr	r3, r3, #16
 337 007a 6365     		str	r3, [r4, #84]
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 338              		.loc 1 166 9 view .LVU79
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 339              		.loc 1 166 9 view .LVU80
 340 007c 0023     		movs	r3, #0
 341 007e 84F85030 		strb	r3, [r4, #80]
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 342              		.loc 1 166 9 view .LVU81
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 343              		.loc 1 168 9 view .LVU82
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 344              		.loc 1 168 16 is_stmt 0 view .LVU83
 345 0082 0120     		movs	r0, #1
 346              	.LVL24:
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 347              		.loc 1 168 16 view .LVU84
 348 0084 06E0     		b	.L17
 349              	.LVL25:
 350              	.L18:
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 351              		.loc 1 179 5 is_stmt 1 view .LVU85
 352 0086 636D     		ldr	r3, [r4, #84]
 353 0088 43F01003 		orr	r3, r3, #16
ARM GAS  /tmp/cc2hwav8.s 			page 133


 354 008c 6365     		str	r3, [r4, #84]
 355              	.LVL26:
 356              	.L22:
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 357              		.loc 1 186 3 view .LVU86
 358              		.loc 1 186 3 view .LVU87
 359 008e 0023     		movs	r3, #0
 360 0090 84F85030 		strb	r3, [r4, #80]
 361              		.loc 1 186 3 view .LVU88
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 362              		.loc 1 189 3 view .LVU89
 363              	.LVL27:
 364              	.L17:
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 365              		.loc 1 190 1 is_stmt 0 view .LVU90
 366 0094 02B0     		add	sp, sp, #8
 367              	.LCFI4:
 368              		.cfi_remember_state
 369              		.cfi_def_cfa_offset 16
 370              		@ sp needed
 371 0096 70BD     		pop	{r4, r5, r6, pc}
 372              	.LVL28:
 373              	.L23:
 374              	.LCFI5:
 375              		.cfi_restore_state
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 376              		.loc 1 136 3 discriminator 1 view .LVU91
 377 0098 0220     		movs	r0, #2
 378              	.LVL29:
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 379              		.loc 1 136 3 discriminator 1 view .LVU92
 380 009a FBE7     		b	.L17
 381              	.L27:
 382              		.align	2
 383              	.L26:
 384 009c FDEEFFFF 		.word	-4355
 385 00a0 C0FFFE3F 		.word	1073676224
 386 00a4 00F8C325 		.word	633600000
 387              		.cfi_endproc
 388              	.LFE335:
 390              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 391              		.align	1
 392              		.global	HAL_ADCEx_Calibration_GetValue
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 397              	HAL_ADCEx_Calibration_GetValue:
 398              	.LVL30:
 399              	.LFB336:
ARM GAS  /tmp/cc2hwav8.s 			page 134


 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Get the calibration factor.
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval Calibration value.
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 400              		.loc 1 201 1 is_stmt 1 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 405              		.loc 1 203 3 view .LVU94
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 406              		.loc 1 204 3 view .LVU95
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return LL_ADC_GetCalibrationOffsetFactor(hadc->Instance, SingleDiff);
 407              		.loc 1 207 3 view .LVU96
 408              		.loc 1 207 10 is_stmt 0 view .LVU97
 409 0000 0368     		ldr	r3, [r0]
 410              	.LVL31:
 411              	.LBB311:
 412              	.LBI311:
2883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 413              		.loc 2 2883 26 is_stmt 1 view .LVU98
 414              	.LBB312:
2892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 415              		.loc 2 2892 3 view .LVU99
2892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 416              		.loc 2 2892 21 is_stmt 0 view .LVU100
 417 0002 D3F8C400 		ldr	r0, [r3, #196]
 418              	.LVL32:
2892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 419              		.loc 2 2892 21 view .LVU101
 420 0006 0840     		ands	r0, r0, r1
 421 0008 20F0F820 		bic	r0, r0, #-134154240
2892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 422              		.loc 2 2892 147 view .LVU102
 423 000c 090B     		lsrs	r1, r1, #12
 424              	.LVL33:
2892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 425              		.loc 2 2892 147 view .LVU103
 426 000e 01F01001 		and	r1, r1, #16
 427              	.LVL34:
2892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 428              		.loc 2 2892 147 view .LVU104
 429              	.LBE312:
 430              	.LBE311:
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 431              		.loc 1 208 1 view .LVU105
ARM GAS  /tmp/cc2hwav8.s 			page 135


 432 0012 C840     		lsrs	r0, r0, r1
 433 0014 7047     		bx	lr
 434              		.cfi_endproc
 435              	.LFE336:
 437              		.section	.text.HAL_ADCEx_LinearCalibration_GetValue,"ax",%progbits
 438              		.align	1
 439              		.global	HAL_ADCEx_LinearCalibration_GetValue
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 444              	HAL_ADCEx_LinearCalibration_GetValue:
 445              	.LVL35:
 446              	.LFB337:
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Get the calibration factor from automatic conversion result
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  LinearCalib_Buffer: Linear calibration factor
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_LinearCalibration_GetValue(ADC_HandleTypeDef *hadc, uint32_t *LinearCal
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 447              		.loc 1 217 1 is_stmt 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		.loc 1 217 1 is_stmt 0 view .LVU107
 452 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 453              	.LCFI6:
 454              		.cfi_def_cfa_offset 32
 455              		.cfi_offset 3, -32
 456              		.cfi_offset 4, -28
 457              		.cfi_offset 5, -24
 458              		.cfi_offset 6, -20
 459              		.cfi_offset 7, -16
 460              		.cfi_offset 8, -12
 461              		.cfi_offset 9, -8
 462              		.cfi_offset 14, -4
 463 0004 0646     		mov	r6, r0
 464 0006 0F46     		mov	r7, r1
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t cnt;
 465              		.loc 1 218 3 is_stmt 1 view .LVU108
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 466              		.loc 1 219 3 view .LVU109
 467              	.LVL36:
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t temp_REG_IsConversionOngoing = 0UL;
 468              		.loc 1 220 3 view .LVU110
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 469              		.loc 1 223 3 view .LVU111
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Enable the ADC ADEN = 1 to be able to read the linear calibration factor */
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 470              		.loc 1 226 3 view .LVU112
 471              		.loc 1 226 7 is_stmt 0 view .LVU113
 472 0008 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc2hwav8.s 			page 136


 473              	.LVL37:
 474              	.LBB313:
 475              	.LBI313:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 476              		.loc 2 6920 26 is_stmt 1 view .LVU114
 477              	.LBB314:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 478              		.loc 2 6922 3 view .LVU115
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 479              		.loc 2 6922 12 is_stmt 0 view .LVU116
 480 000a 9B68     		ldr	r3, [r3, #8]
 481              	.LVL38:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 482              		.loc 2 6922 68 view .LVU117
 483 000c 13F0010F 		tst	r3, #1
 484 0010 14D1     		bne	.L35
 485              	.LVL39:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 486              		.loc 2 6922 68 view .LVU118
 487              	.LBE314:
 488              	.LBE313:
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 489              		.loc 1 228 5 is_stmt 1 view .LVU119
 490              		.loc 1 228 22 is_stmt 0 view .LVU120
 491 0012 FFF7FEFF 		bl	ADC_Enable
 492              	.LVL40:
 493              		.loc 1 228 22 view .LVU121
 494 0016 8046     		mov	r8, r0
 495              	.LVL41:
 496              	.L30:
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 497              		.loc 1 231 3 is_stmt 1 view .LVU122
 498              		.loc 1 231 6 is_stmt 0 view .LVU123
 499 0018 B8F1000F 		cmp	r8, #0
 500 001c 2BD1     		bne	.L31
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 501              		.loc 1 233 5 is_stmt 1 view .LVU124
 502              		.loc 1 233 9 is_stmt 0 view .LVU125
 503 001e 3368     		ldr	r3, [r6]
 504              	.LVL42:
 505              	.LBB315:
 506              	.LBI315:
6988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/cc2hwav8.s 			page 137


6999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
7000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           starts immediately.
7004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           following the ADC start conversion command.
7007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
7010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
7011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
7013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
7017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADSTART);
7024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
7028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
7031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
7033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
7037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADSTP);
7044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
7048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
7049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
7051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 507              		.loc 2 7052 26 is_stmt 1 view .LVU126
 508              	.LBB316:
7053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc2hwav8.s 			page 138


7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 509              		.loc 2 7054 3 view .LVU127
 510              		.loc 2 7054 12 is_stmt 0 view .LVU128
 511 0020 9A68     		ldr	r2, [r3, #8]
 512              		.loc 2 7054 74 view .LVU129
 513 0022 12F00409 		ands	r9, r2, #4
 514 0026 07D0     		beq	.L32
 515              	.LVL43:
 516              		.loc 2 7054 74 view .LVU130
 517              	.LBE316:
 518              	.LBE315:
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
 519              		.loc 1 235 7 is_stmt 1 view .LVU131
 520              	.LBB317:
 521              	.LBI317:
7036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 522              		.loc 2 7036 22 view .LVU132
 523              	.LBB318:
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 524              		.loc 2 7041 3 view .LVU133
 525 0028 9968     		ldr	r1, [r3, #8]
 526 002a 144A     		ldr	r2, .L37
 527 002c 0A40     		ands	r2, r2, r1
 528 002e 42F01002 		orr	r2, r2, #16
 529 0032 9A60     		str	r2, [r3, #8]
 530              	.LVL44:
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 531              		.loc 2 7041 3 is_stmt 0 view .LVU134
 532              	.LBE318:
 533              	.LBE317:
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       temp_REG_IsConversionOngoing = 1UL;
 534              		.loc 1 236 7 is_stmt 1 view .LVU135
 535              		.loc 1 236 36 is_stmt 0 view .LVU136
 536 0034 4FF00109 		mov	r9, #1
 537              	.LVL45:
 538              	.L32:
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     for (cnt = ADC_LINEAR_CALIB_REG_COUNT; cnt > 0UL; cnt--)
 539              		.loc 1 238 5 is_stmt 1 view .LVU137
 540              		.loc 1 238 14 is_stmt 0 view .LVU138
 541 0038 0624     		movs	r4, #6
 542              		.loc 1 238 5 view .LVU139
 543 003a 10E0     		b	.L33
 544              	.LVL46:
 545              	.L35:
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t temp_REG_IsConversionOngoing = 0UL;
 546              		.loc 1 219 21 view .LVU140
 547 003c 4FF00008 		mov	r8, #0
 548 0040 EAE7     		b	.L30
 549              	.LVL47:
 550              	.L34:
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LinearCalib_Buffer[cnt - 1U] = LL_ADC_GetCalibrationLinearFactor(hadc->Instance, ADC_CR_LINCA
 551              		.loc 1 240 7 is_stmt 1 view .LVU141
 552              		.loc 1 240 138 is_stmt 0 view .LVU142
 553 0042 C4F10603 		rsb	r3, r4, #6
ARM GAS  /tmp/cc2hwav8.s 			page 139


 554              		.loc 1 240 25 view .LVU143
 555 0046 6FF04045 		mvn	r5, #-1073741824
 556 004a 2544     		add	r5, r5, r4
 557              		.loc 1 240 38 view .LVU144
 558 004c 4FF00061 		mov	r1, #134217728
 559 0050 D940     		lsrs	r1, r1, r3
 560 0052 3068     		ldr	r0, [r6]
 561 0054 FFF7FEFF 		bl	LL_ADC_GetCalibrationLinearFactor
 562              	.LVL48:
 563              		.loc 1 240 36 discriminator 1 view .LVU145
 564 0058 47F82500 		str	r0, [r7, r5, lsl #2]
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 565              		.loc 1 238 58 is_stmt 1 discriminator 3 view .LVU146
 566 005c 013C     		subs	r4, r4, #1
 567              	.LVL49:
 568              	.L33:
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 569              		.loc 1 238 48 discriminator 1 view .LVU147
 570 005e 002C     		cmp	r4, #0
 571 0060 EFD1     		bne	.L34
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (temp_REG_IsConversionOngoing != 0UL)
 572              		.loc 1 242 5 view .LVU148
 573              		.loc 1 242 8 is_stmt 0 view .LVU149
 574 0062 B9F1000F 		cmp	r9, #0
 575 0066 06D0     		beq	.L31
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
 576              		.loc 1 244 7 is_stmt 1 view .LVU150
 577 0068 3268     		ldr	r2, [r6]
 578              	.LVL50:
 579              	.LBB319:
 580              	.LBI319:
7016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 581              		.loc 2 7016 22 view .LVU151
 582              	.LBB320:
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 583              		.loc 2 7021 3 view .LVU152
 584 006a 9168     		ldr	r1, [r2, #8]
 585 006c 034B     		ldr	r3, .L37
 586 006e 0B40     		ands	r3, r3, r1
 587 0070 43F00403 		orr	r3, r3, #4
 588 0074 9360     		str	r3, [r2, #8]
 589              	.LVL51:
 590              	.L31:
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 591              		.loc 2 7021 3 is_stmt 0 view .LVU153
 592              	.LBE320:
 593              	.LBE319:
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 594              		.loc 1 248 3 is_stmt 1 view .LVU154
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 595              		.loc 1 249 1 is_stmt 0 view .LVU155
 596 0076 4046     		mov	r0, r8
ARM GAS  /tmp/cc2hwav8.s 			page 140


 597 0078 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 598              	.LVL52:
 599              	.L38:
 600              		.loc 1 249 1 view .LVU156
 601              		.align	2
 602              	.L37:
 603 007c C0FFFF7F 		.word	2147483584
 604              		.cfi_endproc
 605              	.LFE337:
 607              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 608              		.align	1
 609              		.global	HAL_ADCEx_Calibration_SetValue
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 614              	HAL_ADCEx_Calibration_SetValue:
 615              	.LVL53:
 616              	.LFB338:
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result.
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC must be enabled and no conversion is ongoing.
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param CalibrationFactor Calibration factor (coded on 7 bits maximum)
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff, uint
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 617              		.loc 1 262 1 is_stmt 1 view -0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		.loc 1 262 1 is_stmt 0 view .LVU158
 622 0000 38B5     		push	{r3, r4, r5, lr}
 623              	.LCFI7:
 624              		.cfi_def_cfa_offset 16
 625              		.cfi_offset 3, -16
 626              		.cfi_offset 4, -12
 627              		.cfi_offset 5, -8
 628              		.cfi_offset 14, -4
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 629              		.loc 1 263 3 is_stmt 1 view .LVU159
 630              	.LVL54:
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 631              		.loc 1 264 3 view .LVU160
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 632              		.loc 1 265 3 view .LVU161
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 633              		.loc 1 268 3 view .LVU162
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 634              		.loc 1 269 3 view .LVU163
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
ARM GAS  /tmp/cc2hwav8.s 			page 141


 635              		.loc 1 270 3 view .LVU164
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 636              		.loc 1 273 3 view .LVU165
 637              		.loc 1 273 3 view .LVU166
 638 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 639 0006 012B     		cmp	r3, #1
 640 0008 27D0     		beq	.L45
 641 000a 0446     		mov	r4, r0
 642              		.loc 1 273 3 discriminator 2 view .LVU167
 643 000c 0123     		movs	r3, #1
 644 000e 80F85030 		strb	r3, [r0, #80]
 645              		.loc 1 273 3 discriminator 2 view .LVU168
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 646              		.loc 1 277 3 view .LVU169
 647              		.loc 1 277 44 is_stmt 0 view .LVU170
 648 0012 0068     		ldr	r0, [r0]
 649              	.LVL55:
 650              	.LBB321:
 651              	.LBI321:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 652              		.loc 2 7052 26 is_stmt 1 view .LVU171
 653              	.LBB322:
 654              		.loc 2 7054 3 view .LVU172
 655              		.loc 2 7054 12 is_stmt 0 view .LVU173
 656 0014 8368     		ldr	r3, [r0, #8]
 657              		.loc 2 7054 74 view .LVU174
 658 0016 13F0040C 		ands	ip, r3, #4
 659 001a 01D0     		beq	.L41
 660              		.loc 2 7054 74 discriminator 1 view .LVU175
 661 001c 4FF0010C 		mov	ip, #1
 662              	.L41:
 663              	.LVL56:
 664              		.loc 2 7054 74 discriminator 1 view .LVU176
 665              	.LBE322:
 666              	.LBE321:
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 667              		.loc 1 278 3 is_stmt 1 view .LVU177
 668              	.LBB323:
 669              	.LBI323:
7055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
7059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
7060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
7062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
7064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
7066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 142


7068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all oversampling increased data width (for devices
7072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with feature oversampling).
7073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
7074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
7078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 16 bits.
7085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData16
7089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
7091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData16(ADC_TypeDef *ADCx)
7093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 14 bits.
7100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData14
7104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3FF
7106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData14(ADC_TypeDef *ADCx)
7108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 12 bits.
7115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
7119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
7123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
ARM GAS  /tmp/cc2hwav8.s 			page 143


7125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 10 bits.
7130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
7134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
7138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 8 bits.
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
7149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
7153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
7158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
7159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
7160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a macro is available to get the conversion data of
7161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
7162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
7163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
7164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
7165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
7166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         separately).
7167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
7168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
7169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
7172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
7173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
7174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
7175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
7178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
7180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ConversionData)
7181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
ARM GAS  /tmp/cc2hwav8.s 			page 144


7182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
7187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
7190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
7191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
7195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           starts immediately.
7199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           following the ADC start conversion command.
7202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
7205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
7206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
7208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
7212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_JADSTART);
7219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
7223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
7226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
7228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_JADSTP);
ARM GAS  /tmp/cc2hwav8.s 			page 145


7239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
 670              		.loc 2 7247 26 view .LVU178
 671              	.LBB324:
7248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 672              		.loc 2 7249 3 view .LVU179
 673              		.loc 2 7249 12 is_stmt 0 view .LVU180
 674 0020 8368     		ldr	r3, [r0, #8]
 675              		.loc 2 7249 76 view .LVU181
 676 0022 13F00803 		ands	r3, r3, #8
 677 0026 00D0     		beq	.L42
 678              		.loc 2 7249 76 discriminator 1 view .LVU182
 679 0028 0123     		movs	r3, #1
 680              	.L42:
 681              	.LVL57:
 682              		.loc 2 7249 76 discriminator 1 view .LVU183
 683              	.LBE324:
 684              	.LBE323:
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 685              		.loc 1 280 3 is_stmt 1 view .LVU184
 686              	.LBB325:
 687              	.LBI325:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 688              		.loc 2 6920 26 view .LVU185
 689              	.LBB326:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 690              		.loc 2 6922 3 view .LVU186
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 691              		.loc 2 6922 12 is_stmt 0 view .LVU187
 692 002a 8568     		ldr	r5, [r0, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 693              		.loc 2 6922 68 view .LVU188
 694 002c 15F0010F 		tst	r5, #1
 695 0030 02D0     		beq	.L43
 696              	.LVL58:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 697              		.loc 2 6922 68 view .LVU189
 698              	.LBE326:
 699              	.LBE325:
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 700              		.loc 1 282 7 view .LVU190
 701 0032 53EA0C03 		orrs	r3, r3, ip
 702              	.LVL59:
 703              		.loc 1 282 7 view .LVU191
 704 0036 0CD0     		beq	.L47
 705              	.L43:
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      )
ARM GAS  /tmp/cc2hwav8.s 			page 146


 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_SetCalibrationOffsetFactor(hadc->Instance, SingleDiff, CalibrationFactor);
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine */
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 706              		.loc 1 291 5 is_stmt 1 view .LVU192
 707 0038 636D     		ldr	r3, [r4, #84]
 708 003a 43F02003 		orr	r3, r3, #32
 709 003e 6365     		str	r3, [r4, #84]
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC error code */
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 710              		.loc 1 293 5 view .LVU193
 711 0040 A36D     		ldr	r3, [r4, #88]
 712 0042 43F00103 		orr	r3, r3, #1
 713 0046 A365     		str	r3, [r4, #88]
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 714              		.loc 1 296 5 view .LVU194
 715              	.LVL60:
 716              		.loc 1 296 20 is_stmt 0 view .LVU195
 717 0048 0120     		movs	r0, #1
 718              	.LVL61:
 719              	.L44:
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 720              		.loc 1 300 3 is_stmt 1 view .LVU196
 721              		.loc 1 300 3 view .LVU197
 722 004a 0023     		movs	r3, #0
 723 004c 84F85030 		strb	r3, [r4, #80]
 724              		.loc 1 300 3 view .LVU198
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 725              		.loc 1 303 3 view .LVU199
 726              	.LVL62:
 727              	.L40:
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 728              		.loc 1 304 1 is_stmt 0 view .LVU200
 729 0050 38BD     		pop	{r3, r4, r5, pc}
 730              	.LVL63:
 731              	.L47:
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 732              		.loc 1 286 5 is_stmt 1 view .LVU201
 733 0052 FFF7FEFF 		bl	LL_ADC_SetCalibrationOffsetFactor
 734              	.LVL64:
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 735              		.loc 1 263 21 is_stmt 0 view .LVU202
 736 0056 0020     		movs	r0, #0
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 737              		.loc 1 286 5 view .LVU203
 738 0058 F7E7     		b	.L44
ARM GAS  /tmp/cc2hwav8.s 			page 147


 739              	.LVL65:
 740              	.L45:
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 741              		.loc 1 273 3 discriminator 1 view .LVU204
 742 005a 0220     		movs	r0, #2
 743              	.LVL66:
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 744              		.loc 1 273 3 discriminator 1 view .LVU205
 745 005c F8E7     		b	.L40
 746              		.cfi_endproc
 747              	.LFE338:
 749              		.section	.text.HAL_ADCEx_LinearCalibration_SetValue,"ax",%progbits
 750              		.align	1
 751              		.global	HAL_ADCEx_LinearCalibration_SetValue
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 756              	HAL_ADCEx_LinearCalibration_SetValue:
 757              	.LVL67:
 758              	.LFB339:
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Set the linear calibration factor
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  LinearCalib_Buffer: Linear calibration factor
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_LinearCalibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t *LinearCal
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 759              		.loc 1 313 1 is_stmt 1 view -0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 8
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              		.loc 1 313 1 is_stmt 0 view .LVU207
 764 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 765              	.LCFI8:
 766              		.cfi_def_cfa_offset 20
 767              		.cfi_offset 4, -20
 768              		.cfi_offset 5, -16
 769              		.cfi_offset 6, -12
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 83B0     		sub	sp, sp, #12
 773              	.LCFI9:
 774              		.cfi_def_cfa_offset 32
 775 0004 0446     		mov	r4, r0
 776 0006 0E46     		mov	r6, r1
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t cnt;
 777              		.loc 1 314 3 is_stmt 1 view .LVU208
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 778              		.loc 1 315 3 view .LVU209
 779              		.loc 1 315 17 is_stmt 0 view .LVU210
 780 0008 0023     		movs	r3, #0
 781 000a 0193     		str	r3, [sp, #4]
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t temp_REG_IsConversionOngoing = 0UL;
 782              		.loc 1 316 3 is_stmt 1 view .LVU211
 783              	.LVL68:
ARM GAS  /tmp/cc2hwav8.s 			page 148


 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 784              		.loc 1 319 3 view .LVU212
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  Exit deep power down mode if still in that state                        */
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_DEEPPWD))
 785              		.loc 1 323 3 view .LVU213
 786              		.loc 1 323 7 is_stmt 0 view .LVU214
 787 000c 0368     		ldr	r3, [r0]
 788 000e 9A68     		ldr	r2, [r3, #8]
 789              		.loc 1 323 6 view .LVU215
 790 0010 12F0005F 		tst	r2, #536870912
 791 0014 03D0     		beq	.L49
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Exit deep power down mode */
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 792              		.loc 1 326 5 is_stmt 1 view .LVU216
 793 0016 9A68     		ldr	r2, [r3, #8]
 794 0018 22F00052 		bic	r2, r2, #536870912
 795 001c 9A60     		str	r2, [r3, #8]
 796              	.L49:
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* System was in deep power down mode, calibration must
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        be relaunched or a previously saved calibration factor
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        re-applied once the ADC voltage regulator is enabled */
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 797              		.loc 1 334 3 view .LVU217
 798              		.loc 1 334 7 is_stmt 0 view .LVU218
 799 001e 2368     		ldr	r3, [r4]
 800 0020 9A68     		ldr	r2, [r3, #8]
 801              		.loc 1 334 6 view .LVU219
 802 0022 12F0805F 		tst	r2, #268435456
 803 0026 13D1     		bne	.L50
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable ADC internal voltage regulator                                  */
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN);
 804              		.loc 1 337 5 is_stmt 1 view .LVU220
 805 0028 9A68     		ldr	r2, [r3, #8]
 806 002a 42F08052 		orr	r2, r2, #268435456
 807 002e 9A60     		str	r2, [r3, #8]
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Delay for ADC stabilization time                                       */
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Wait loop initialization and execution                                 */
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: Variable divided by 2 to compensate partially                    */
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*       CPU processing cycles.                                           */
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     wait_loop_index = ((ADC_STAB_DELAY_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 808              		.loc 1 342 5 view .LVU221
 809              		.loc 1 342 71 is_stmt 0 view .LVU222
 810 0030 374B     		ldr	r3, .L66
 811 0032 1B68     		ldr	r3, [r3]
 812 0034 9B09     		lsrs	r3, r3, #6
 813 0036 374A     		ldr	r2, .L66+4
 814 0038 A2FB0323 		umull	r2, r3, r2, r3
ARM GAS  /tmp/cc2hwav8.s 			page 149


 815 003c 9B09     		lsrs	r3, r3, #6
 816              		.loc 1 342 51 view .LVU223
 817 003e 0133     		adds	r3, r3, #1
 818              		.loc 1 342 21 view .LVU224
 819 0040 0193     		str	r3, [sp, #4]
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while (wait_loop_index != 0UL)
 820              		.loc 1 343 5 is_stmt 1 view .LVU225
 821              		.loc 1 343 11 is_stmt 0 view .LVU226
 822 0042 02E0     		b	.L51
 823              	.L52:
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       wait_loop_index--;
 824              		.loc 1 345 7 is_stmt 1 view .LVU227
 825              		.loc 1 345 22 is_stmt 0 view .LVU228
 826 0044 019B     		ldr	r3, [sp, #4]
 827 0046 013B     		subs	r3, r3, #1
 828 0048 0193     		str	r3, [sp, #4]
 829              	.L51:
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while (wait_loop_index != 0UL)
 830              		.loc 1 343 28 is_stmt 1 view .LVU229
 831 004a 019B     		ldr	r3, [sp, #4]
 832 004c 002B     		cmp	r3, #0
 833 004e F9D1     		bne	.L52
 834              	.L50:
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* clocking, voltage regulator would not be enabled).                       */
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 835              		.loc 1 353 3 view .LVU230
 836              		.loc 1 353 7 is_stmt 0 view .LVU231
 837 0050 2368     		ldr	r3, [r4]
 838 0052 9A68     		ldr	r2, [r3, #8]
 839              		.loc 1 353 6 view .LVU232
 840 0054 12F0805F 		tst	r2, #268435456
 841 0058 09D0     		beq	.L65
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set ADC error code to ADC peripheral internal error */
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return  HAL_ERROR;
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL) /* Enable the ADC if it is disabled */
 842              		.loc 1 364 3 is_stmt 1 view .LVU233
 843              	.LVL69:
 844              	.LBB327:
 845              	.LBI327:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 846              		.loc 2 6920 26 view .LVU234
 847              	.LBB328:
ARM GAS  /tmp/cc2hwav8.s 			page 150


6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 848              		.loc 2 6922 3 view .LVU235
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 849              		.loc 2 6922 12 is_stmt 0 view .LVU236
 850 005a 9A68     		ldr	r2, [r3, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 851              		.loc 2 6922 68 view .LVU237
 852 005c 12F0010F 		tst	r2, #1
 853 0060 11D0     		beq	.L55
 854              	.LVL70:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 855              		.loc 2 6922 68 view .LVU238
 856              	.LBE328:
 857              	.LBE327:
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (ADC_Enable(hadc) != HAL_OK)
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return  HAL_ERROR;
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       for (cnt = ADC_LINEAR_CALIB_REG_COUNT; cnt > 0UL ; cnt--)
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         LL_ADC_SetCalibrationLinearFactor(hadc->Instance, ADC_CR_LINCALRDYW6 >> (ADC_LINEAR_CALIB_R
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (void)ADC_Disable(hadc);
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else  /* ADC is already enabled, so no need to enable it but need to stop conversion */
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 858              		.loc 1 381 5 is_stmt 1 view .LVU239
 859              	.LBB329:
 860              	.LBI329:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 861              		.loc 2 7052 26 view .LVU240
 862              	.LBB330:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 863              		.loc 2 7054 3 view .LVU241
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 864              		.loc 2 7054 12 is_stmt 0 view .LVU242
 865 0062 9F68     		ldr	r7, [r3, #8]
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 866              		.loc 2 7054 74 view .LVU243
 867 0064 17F00407 		ands	r7, r7, #4
 868 0068 2AD1     		bne	.L56
 869              	.LVL71:
 870              	.L57:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 871              		.loc 2 7054 74 view .LVU244
 872              	.LBE330:
 873              	.LBE329:
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       temp_REG_IsConversionOngoing = 1UL;
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     for (cnt = ADC_LINEAR_CALIB_REG_COUNT; cnt > 0UL ; cnt--)
ARM GAS  /tmp/cc2hwav8.s 			page 151


 874              		.loc 1 386 5 is_stmt 1 view .LVU245
 875              		.loc 1 386 14 is_stmt 0 view .LVU246
 876 006a 0625     		movs	r5, #6
 877              		.loc 1 386 5 view .LVU247
 878 006c 3FE0     		b	.L60
 879              	.LVL72:
 880              	.L65:
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 881              		.loc 1 356 5 is_stmt 1 view .LVU248
 882 006e 636D     		ldr	r3, [r4, #84]
 883 0070 43F01003 		orr	r3, r3, #16
 884 0074 6365     		str	r3, [r4, #84]
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 885              		.loc 1 359 5 view .LVU249
 886 0076 A36D     		ldr	r3, [r4, #88]
 887 0078 43F00103 		orr	r3, r3, #1
 888 007c A365     		str	r3, [r4, #88]
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 889              		.loc 1 361 5 view .LVU250
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 890              		.loc 1 361 13 is_stmt 0 view .LVU251
 891 007e 0127     		movs	r7, #1
 892              	.LVL73:
 893              	.L54:
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_SetCalibrationLinearFactor(hadc->Instance, ADC_CR_LINCALRDYW6 >> (ADC_LINEAR_CALIB_REG
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (temp_REG_IsConversionOngoing != 0UL)
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return HAL_OK;
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 894              		.loc 1 396 1 view .LVU252
 895 0080 3846     		mov	r0, r7
 896 0082 03B0     		add	sp, sp, #12
 897              	.LCFI10:
 898              		.cfi_remember_state
 899              		.cfi_def_cfa_offset 20
 900              		@ sp needed
 901 0084 F0BD     		pop	{r4, r5, r6, r7, pc}
 902              	.LVL74:
 903              	.L55:
 904              	.LCFI11:
 905              		.cfi_restore_state
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 906              		.loc 1 366 5 is_stmt 1 view .LVU253
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 907              		.loc 1 366 9 is_stmt 0 view .LVU254
 908 0086 2046     		mov	r0, r4
 909              	.LVL75:
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 910              		.loc 1 366 9 view .LVU255
 911 0088 FFF7FEFF 		bl	ADC_Enable
 912              	.LVL76:
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/cc2hwav8.s 			page 152


 913              		.loc 1 366 8 discriminator 1 view .LVU256
 914 008c 0746     		mov	r7, r0
 915 008e 0028     		cmp	r0, #0
 916 0090 39D1     		bne	.L62
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 917              		.loc 1 372 16 view .LVU257
 918 0092 0625     		movs	r5, #6
 919 0094 0EE0     		b	.L58
 920              	.LVL77:
 921              	.L59:
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 922              		.loc 1 374 9 is_stmt 1 view .LVU258
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 923              		.loc 1 374 109 is_stmt 0 view .LVU259
 924 0096 C5F10601 		rsb	r1, r5, #6
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 925              		.loc 1 374 135 view .LVU260
 926 009a 6FF04043 		mvn	r3, #-1073741824
 927 009e 2B44     		add	r3, r3, r5
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 928              		.loc 1 374 9 view .LVU261
 929 00a0 56F82320 		ldr	r2, [r6, r3, lsl #2]
 930 00a4 4FF00063 		mov	r3, #134217728
 931 00a8 23FA01F1 		lsr	r1, r3, r1
 932 00ac 2068     		ldr	r0, [r4]
 933 00ae FFF7FEFF 		bl	LL_ADC_SetCalibrationLinearFactor
 934              	.LVL78:
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 935              		.loc 1 372 61 is_stmt 1 discriminator 3 view .LVU262
 936 00b2 013D     		subs	r5, r5, #1
 937              	.LVL79:
 938              	.L58:
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 939              		.loc 1 372 50 discriminator 1 view .LVU263
 940 00b4 002D     		cmp	r5, #0
 941 00b6 EED1     		bne	.L59
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 942              		.loc 1 376 7 view .LVU264
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 943              		.loc 1 376 13 is_stmt 0 view .LVU265
 944 00b8 2046     		mov	r0, r4
 945 00ba FFF7FEFF 		bl	ADC_Disable
 946              	.LVL80:
 947 00be DFE7     		b	.L54
 948              	.LVL81:
 949              	.L56:
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       temp_REG_IsConversionOngoing = 1UL;
 950              		.loc 1 383 7 is_stmt 1 view .LVU266
 951              	.LBB331:
 952              	.LBI331:
7036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 953              		.loc 2 7036 22 view .LVU267
 954              	.LBB332:
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 955              		.loc 2 7041 3 view .LVU268
 956 00c0 9968     		ldr	r1, [r3, #8]
 957              	.LVL82:
ARM GAS  /tmp/cc2hwav8.s 			page 153


7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 958              		.loc 2 7041 3 is_stmt 0 view .LVU269
 959 00c2 154A     		ldr	r2, .L66+8
 960 00c4 0A40     		ands	r2, r2, r1
 961 00c6 42F01002 		orr	r2, r2, #16
 962 00ca 9A60     		str	r2, [r3, #8]
 963              	.LVL83:
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 964              		.loc 2 7041 3 view .LVU270
 965              	.LBE332:
 966              	.LBE331:
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 967              		.loc 1 384 7 is_stmt 1 view .LVU271
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 968              		.loc 1 384 36 is_stmt 0 view .LVU272
 969 00cc 0127     		movs	r7, #1
 970 00ce CCE7     		b	.L57
 971              	.LVL84:
 972              	.L61:
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 973              		.loc 1 388 7 is_stmt 1 view .LVU273
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 974              		.loc 1 388 107 is_stmt 0 view .LVU274
 975 00d0 C5F10601 		rsb	r1, r5, #6
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 976              		.loc 1 388 133 view .LVU275
 977 00d4 6FF04043 		mvn	r3, #-1073741824
 978 00d8 2B44     		add	r3, r3, r5
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 979              		.loc 1 388 7 view .LVU276
 980 00da 56F82320 		ldr	r2, [r6, r3, lsl #2]
 981 00de 4FF00063 		mov	r3, #134217728
 982 00e2 23FA01F1 		lsr	r1, r3, r1
 983 00e6 2068     		ldr	r0, [r4]
 984 00e8 FFF7FEFF 		bl	LL_ADC_SetCalibrationLinearFactor
 985              	.LVL85:
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 986              		.loc 1 386 59 is_stmt 1 discriminator 3 view .LVU277
 987 00ec 013D     		subs	r5, r5, #1
 988              	.LVL86:
 989              	.L60:
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 990              		.loc 1 386 48 discriminator 1 view .LVU278
 991 00ee 002D     		cmp	r5, #0
 992 00f0 EED1     		bne	.L61
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 993              		.loc 1 390 5 view .LVU279
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 994              		.loc 1 390 8 is_stmt 0 view .LVU280
 995 00f2 57B1     		cbz	r7, .L63
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 996              		.loc 1 392 7 is_stmt 1 view .LVU281
 997 00f4 2268     		ldr	r2, [r4]
 998              	.LVL87:
 999              	.LBB333:
 1000              	.LBI333:
7016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/cc2hwav8.s 			page 154


 1001              		.loc 2 7016 22 view .LVU282
 1002              	.LBB334:
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1003              		.loc 2 7021 3 view .LVU283
 1004 00f6 9168     		ldr	r1, [r2, #8]
 1005 00f8 074B     		ldr	r3, .L66+8
 1006 00fa 0B40     		ands	r3, r3, r1
 1007 00fc 43F00403 		orr	r3, r3, #4
 1008 0100 9360     		str	r3, [r2, #8]
 1009              	.LVL88:
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1010              		.loc 2 7021 3 is_stmt 0 view .LVU284
 1011              	.LBE334:
 1012              	.LBE333:
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1013              		.loc 1 395 10 view .LVU285
 1014 0102 0027     		movs	r7, #0
 1015              	.LVL89:
 1016              	.LBB336:
 1017              	.LBB335:
7024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1018              		.loc 2 7024 1 view .LVU286
 1019 0104 BCE7     		b	.L54
 1020              	.LVL90:
 1021              	.L62:
7024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1022              		.loc 2 7024 1 view .LVU287
 1023              	.LBE335:
 1024              	.LBE336:
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1025              		.loc 1 368 15 view .LVU288
 1026 0106 0127     		movs	r7, #1
 1027 0108 BAE7     		b	.L54
 1028              	.LVL91:
 1029              	.L63:
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1030              		.loc 1 395 10 view .LVU289
 1031 010a 0027     		movs	r7, #0
 1032              	.LVL92:
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1033              		.loc 1 395 10 view .LVU290
 1034 010c B8E7     		b	.L54
 1035              	.L67:
 1036 010e 00BF     		.align	2
 1037              	.L66:
 1038 0110 00000000 		.word	SystemCoreClock
 1039 0114 632D3E05 		.word	87960931
 1040 0118 C0FFFF7F 		.word	2147483584
 1041              		.cfi_endproc
 1042              	.LFE339:
 1044              		.section	.text.HAL_ADCEx_LinearCalibration_FactorLoad,"ax",%progbits
 1045              		.align	1
 1046              		.global	HAL_ADCEx_LinearCalibration_FactorLoad
 1047              		.syntax unified
 1048              		.thumb
 1049              		.thumb_func
 1051              	HAL_ADCEx_LinearCalibration_FactorLoad:
ARM GAS  /tmp/cc2hwav8.s 			page 155


 1052              	.LVL93:
 1053              	.LFB340:
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Load the calibration factor from engi bytes
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_LinearCalibration_FactorLoad(ADC_HandleTypeDef *hadc)
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1054              		.loc 1 404 1 is_stmt 1 view -0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 24
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              		.loc 1 404 1 is_stmt 0 view .LVU292
 1059 0000 00B5     		push	{lr}
 1060              	.LCFI12:
 1061              		.cfi_def_cfa_offset 4
 1062              		.cfi_offset 14, -4
 1063 0002 87B0     		sub	sp, sp, #28
 1064              	.LCFI13:
 1065              		.cfi_def_cfa_offset 32
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1066              		.loc 1 405 3 is_stmt 1 view .LVU293
 1067              	.LVL94:
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t cnt, FactorOffset;
 1068              		.loc 1 406 3 view .LVU294
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t LinearCalib_Buffer[ADC_LINEAR_CALIB_REG_COUNT];
 1069              		.loc 1 407 3 view .LVU295
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Linearity calibration is retrieved from engi bytes
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      read values from registers and put them to the CALFACT2 register */
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* If needed linearity calibration can be done in runtime using
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      LL_ADC_GetCalibrationLinearFactor()                             */
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Instance == ADC1)
 1070              		.loc 1 413 3 view .LVU296
 1071              		.loc 1 413 11 is_stmt 0 view .LVU297
 1072 0004 0368     		ldr	r3, [r0]
 1073              		.loc 1 413 6 view .LVU298
 1074 0006 134A     		ldr	r2, .L78
 1075 0008 9342     		cmp	r3, r2
 1076 000a 0AD0     		beq	.L73
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     FactorOffset = 0UL;
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else if (hadc->Instance == ADC2)
 1077              		.loc 1 417 8 is_stmt 1 view .LVU299
 1078              		.loc 1 417 11 is_stmt 0 view .LVU300
 1079 000c 02F58072 		add	r2, r2, #256
 1080 0010 9342     		cmp	r3, r2
 1081 0012 03D0     		beq	.L77
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     FactorOffset = 8UL;
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else   /*Case ADC3*/
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     FactorOffset = 16UL;
ARM GAS  /tmp/cc2hwav8.s 			page 156


 1082              		.loc 1 423 18 view .LVU301
 1083 0014 4FF0100C 		mov	ip, #16
 1084              	.L69:
 1085              	.LVL95:
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   for (cnt = 0UL; cnt < ADC_LINEAR_CALIB_REG_COUNT; cnt++)
 1086              		.loc 1 426 3 is_stmt 1 view .LVU302
 1087              		.loc 1 426 12 is_stmt 0 view .LVU303
 1088 0018 0023     		movs	r3, #0
 1089              		.loc 1 426 3 view .LVU304
 1090 001a 10E0     		b	.L70
 1091              	.LVL96:
 1092              	.L77:
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1093              		.loc 1 419 18 view .LVU305
 1094 001c 4FF0080C 		mov	ip, #8
 1095 0020 FAE7     		b	.L69
 1096              	.L73:
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1097              		.loc 1 415 18 view .LVU306
 1098 0022 4FF0000C 		mov	ip, #0
 1099 0026 F7E7     		b	.L69
 1100              	.LVL97:
 1101              	.L71:
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LinearCalib_Buffer[cnt] = *(uint32_t *)(ADC_LINEAR_CALIB_REG_1_ADDR + FactorOffset + cnt);
 1102              		.loc 1 428 5 is_stmt 1 view .LVU307
 1103              		.loc 1 428 88 is_stmt 0 view .LVU308
 1104 0028 03EB0C01 		add	r1, r3, ip
 1105              		.loc 1 428 32 view .LVU309
 1106 002c 0A4A     		ldr	r2, .L78+4
 1107              		.loc 1 428 31 view .LVU310
 1108 002e 52F82110 		ldr	r1, [r2, r1, lsl #2]
 1109              		.loc 1 428 29 view .LVU311
 1110 0032 06AA     		add	r2, sp, #24
 1111 0034 02EB8302 		add	r2, r2, r3, lsl #2
 1112 0038 42F8181C 		str	r1, [r2, #-24]
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 1113              		.loc 1 426 56 is_stmt 1 discriminator 3 view .LVU312
 1114 003c 0133     		adds	r3, r3, #1
 1115              	.LVL98:
 1116              	.L70:
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 1117              		.loc 1 426 23 discriminator 1 view .LVU313
 1118 003e 052B     		cmp	r3, #5
 1119 0040 F2D9     		bls	.L71
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (HAL_ADCEx_LinearCalibration_SetValue(hadc, (uint32_t *)LinearCalib_Buffer) != HAL_OK)
 1120              		.loc 1 430 3 view .LVU314
 1121              		.loc 1 430 7 is_stmt 0 view .LVU315
 1122 0042 6946     		mov	r1, sp
 1123 0044 FFF7FEFF 		bl	HAL_ADCEx_LinearCalibration_SetValue
 1124              	.LVL99:
 1125              		.loc 1 430 6 discriminator 1 view .LVU316
 1126 0048 00B1     		cbz	r0, .L72
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/cc2hwav8.s 			page 157


 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 1127              		.loc 1 432 20 view .LVU317
 1128 004a 0120     		movs	r0, #1
 1129              	.L72:
 1130              	.LVL100:
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 1131              		.loc 1 435 3 is_stmt 1 view .LVU318
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1132              		.loc 1 436 1 is_stmt 0 view .LVU319
 1133 004c 07B0     		add	sp, sp, #28
 1134              	.LCFI14:
 1135              		.cfi_def_cfa_offset 4
 1136              		@ sp needed
 1137 004e 5DF804FB 		ldr	pc, [sp], #4
 1138              	.L79:
 1139 0052 00BF     		.align	2
 1140              	.L78:
 1141 0054 00200240 		.word	1073881088
 1142 0058 00ECF11F 		.word	535948288
 1143              		.cfi_endproc
 1144              	.LFE340:
 1146              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 1147              		.align	1
 1148              		.global	HAL_ADCEx_InjectedStart
 1149              		.syntax unified
 1150              		.thumb
 1151              		.thumb_func
 1153              	HAL_ADCEx_InjectedStart:
 1154              	.LVL101:
 1155              	.LFB341:
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group.
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function: None.
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Case of multimode enabled when multimode feature is available:
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart() API must be called for ADC slave first,
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         then for ADC master.
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef *hadc)
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1156              		.loc 1 450 1 is_stmt 1 view -0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 0
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160              		.loc 1 450 1 is_stmt 0 view .LVU321
 1161 0000 38B5     		push	{r3, r4, r5, lr}
 1162              	.LCFI15:
 1163              		.cfi_def_cfa_offset 16
 1164              		.cfi_offset 3, -16
 1165              		.cfi_offset 4, -12
 1166              		.cfi_offset 5, -8
ARM GAS  /tmp/cc2hwav8.s 			page 158


 1167              		.cfi_offset 14, -4
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1168              		.loc 1 451 3 is_stmt 1 view .LVU322
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 1169              		.loc 1 452 3 view .LVU323
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 1170              		.loc 1 453 3 view .LVU324
 1171              	.LVL102:
 1172              	.LBB337:
 1173              	.LBI337:
6580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1174              		.loc 2 6580 26 view .LVU325
 1175              	.LBB338:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1176              		.loc 2 6582 3 view .LVU326
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1177              		.loc 2 6582 21 is_stmt 0 view .LVU327
 1178 0002 394B     		ldr	r3, .L101
 1179 0004 9D68     		ldr	r5, [r3, #8]
 1180              	.LVL103:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1181              		.loc 2 6582 21 view .LVU328
 1182              	.LBE338:
 1183              	.LBE337:
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1184              		.loc 1 456 3 is_stmt 1 view .LVU329
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 1185              		.loc 1 458 3 view .LVU330
 1186              		.loc 1 458 7 is_stmt 0 view .LVU331
 1187 0006 0368     		ldr	r3, [r0]
 1188              	.LVL104:
 1189              	.LBB339:
 1190              	.LBI339:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1191              		.loc 2 7247 26 is_stmt 1 view .LVU332
 1192              	.LBB340:
 1193              		.loc 2 7249 3 view .LVU333
 1194              		.loc 2 7249 12 is_stmt 0 view .LVU334
 1195 0008 9A68     		ldr	r2, [r3, #8]
 1196              		.loc 2 7249 76 view .LVU335
 1197 000a 12F0080F 		tst	r2, #8
 1198 000e 66D1     		bne	.L93
 1199 0010 0446     		mov	r4, r0
 1200 0012 05F01F05 		and	r5, r5, #31
 1201              	.LVL105:
 1202              		.loc 2 7249 76 view .LVU336
 1203              	.LBE340:
 1204              	.LBE339:
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_BUSY;
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
ARM GAS  /tmp/cc2hwav8.s 			page 159


 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          the queue is empty */
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 1205              		.loc 1 471 5 is_stmt 1 view .LVU337
 1206              		.loc 1 471 33 is_stmt 0 view .LVU338
 1207 0016 DA68     		ldr	r2, [r3, #12]
 1208              	.LVL106:
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 1209              		.loc 1 473 5 is_stmt 1 view .LVU339
 1210              		.loc 1 473 10 is_stmt 0 view .LVU340
 1211 0018 DB6C     		ldr	r3, [r3, #76]
 1212              		.loc 1 473 8 view .LVU341
 1213 001a 13F4C07F 		tst	r3, #384
 1214 001e 01D1     		bne	.L82
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 1215              		.loc 1 474 9 view .LVU342
 1216 0020 002A     		cmp	r2, #0
 1217 0022 3EDA     		bge	.L98
 1218              	.L82:
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        )
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process locked */
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1219              		.loc 1 482 5 is_stmt 1 view .LVU343
 1220              		.loc 1 482 5 view .LVU344
 1221 0024 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 1222 0028 012B     		cmp	r3, #1
 1223 002a 5AD0     		beq	.L94
 1224              		.loc 1 482 5 discriminator 2 view .LVU345
 1225 002c 0123     		movs	r3, #1
 1226 002e 84F85030 		strb	r3, [r4, #80]
 1227              		.loc 1 482 5 discriminator 2 view .LVU346
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 1228              		.loc 1 485 5 view .LVU347
 1229              		.loc 1 485 22 is_stmt 0 view .LVU348
 1230 0032 2046     		mov	r0, r4
 1231              	.LVL107:
 1232              		.loc 1 485 22 view .LVU349
 1233 0034 FFF7FEFF 		bl	ADC_Enable
 1234              	.LVL108:
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1235              		.loc 1 488 5 is_stmt 1 view .LVU350
 1236              		.loc 1 488 8 is_stmt 0 view .LVU351
 1237 0038 0028     		cmp	r0, #0
ARM GAS  /tmp/cc2hwav8.s 			page 160


 1238 003a 4CD1     		bne	.L83
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 1239              		.loc 1 491 7 is_stmt 1 view .LVU352
 1240              		.loc 1 491 16 is_stmt 0 view .LVU353
 1241 003c 636D     		ldr	r3, [r4, #84]
 1242              		.loc 1 491 10 view .LVU354
 1243 003e 13F4807F 		tst	r3, #256
 1244 0042 34D0     		beq	.L84
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 1245              		.loc 1 494 9 is_stmt 1 view .LVU355
 1246 0044 A36D     		ldr	r3, [r4, #88]
 1247 0046 23F00803 		bic	r3, r3, #8
 1248 004a A365     		str	r3, [r4, #88]
 1249              	.L85:
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1250              		.loc 1 505 7 view .LVU356
 1251 004c 626D     		ldr	r2, [r4, #84]
 1252 004e 274B     		ldr	r3, .L101+4
 1253 0050 1340     		ands	r3, r3, r2
 1254 0052 43F48053 		orr	r3, r3, #4096
 1255 0056 6365     		str	r3, [r4, #84]
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1256              		.loc 1 512 7 view .LVU357
 1257              		.loc 1 512 12 is_stmt 0 view .LVU358
 1258 0058 2368     		ldr	r3, [r4]
 1259 005a 254A     		ldr	r2, .L101+8
 1260 005c 9342     		cmp	r3, r2
 1261 005e 29D0     		beq	.L99
 1262              		.loc 1 512 12 discriminator 1 view .LVU359
 1263 0060 1A46     		mov	r2, r3
 1264              	.L86:
 1265              		.loc 1 512 10 discriminator 4 view .LVU360
 1266 0062 9342     		cmp	r3, r2
 1267 0064 00D0     		beq	.L87
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1268              		.loc 1 513 11 view .LVU361
 1269 0066 1DB9     		cbnz	r5, .L88
ARM GAS  /tmp/cc2hwav8.s 			page 161


 1270              	.L87:
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          )
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1271              		.loc 1 516 9 is_stmt 1 view .LVU362
 1272 0068 626D     		ldr	r2, [r4, #84]
 1273 006a 22F48012 		bic	r2, r2, #1048576
 1274 006e 6265     		str	r2, [r4, #84]
 1275              	.L88:
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 1276              		.loc 1 521 7 view .LVU363
 1277 0070 6022     		movs	r2, #96
 1278 0072 1A60     		str	r2, [r3]
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1279              		.loc 1 526 7 view .LVU364
 1280              		.loc 1 526 7 view .LVU365
 1281 0074 0023     		movs	r3, #0
 1282 0076 84F85030 		strb	r3, [r4, #80]
 1283              		.loc 1 526 7 view .LVU366
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1284              		.loc 1 540 7 view .LVU367
 1285              		.loc 1 540 12 is_stmt 0 view .LVU368
 1286 007a 2368     		ldr	r3, [r4]
 1287 007c 1C4A     		ldr	r2, .L101+8
 1288 007e 9342     		cmp	r3, r2
 1289 0080 1BD0     		beq	.L100
 1290              		.loc 1 540 12 discriminator 1 view .LVU369
 1291 0082 1A46     		mov	r2, r3
 1292              	.L89:
 1293              		.loc 1 540 10 discriminator 4 view .LVU370
 1294 0084 9342     		cmp	r3, r2
 1295 0086 1BD0     		beq	.L90
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 1296              		.loc 1 542 36 view .LVU371
 1297 0088 062D     		cmp	r5, #6
ARM GAS  /tmp/cc2hwav8.s 			page 162


 1298 008a 14BF     		ite	ne
 1299 008c 0022     		movne	r2, #0
 1300 008e 0122     		moveq	r2, #1
 1301              		.loc 1 542 11 view .LVU372
 1302 0090 B5B1     		cbz	r5, .L90
 1303 0092 AAB9     		cbnz	r2, .L90
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1304              		.loc 1 543 11 view .LVU373
 1305 0094 072D     		cmp	r5, #7
 1306 0096 13D0     		beq	.L90
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          )
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1307              		.loc 1 555 9 is_stmt 1 view .LVU374
 1308 0098 636D     		ldr	r3, [r4, #84]
 1309 009a 43F48013 		orr	r3, r3, #1048576
 1310 009e 6365     		str	r3, [r4, #84]
 1311 00a0 1EE0     		b	.L81
 1312              	.LVL109:
 1313              	.L98:
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 1314              		.loc 1 477 7 view .LVU375
 1315 00a2 436D     		ldr	r3, [r0, #84]
 1316 00a4 43F02003 		orr	r3, r3, #32
 1317 00a8 4365     		str	r3, [r0, #84]
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1318              		.loc 1 478 7 view .LVU376
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1319              		.loc 1 478 14 is_stmt 0 view .LVU377
 1320 00aa 0120     		movs	r0, #1
 1321              	.LVL110:
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1322              		.loc 1 478 14 view .LVU378
 1323 00ac 18E0     		b	.L81
 1324              	.LVL111:
 1325              	.L84:
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 1326              		.loc 1 499 9 is_stmt 1 view .LVU379
 1327 00ae 0023     		movs	r3, #0
 1328 00b0 A365     		str	r3, [r4, #88]
 1329 00b2 CBE7     		b	.L85
 1330              	.L99:
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1331              		.loc 1 512 12 is_stmt 0 discriminator 2 view .LVU380
 1332 00b4 A2F58072 		sub	r2, r2, #256
 1333 00b8 D3E7     		b	.L86
 1334              	.L100:
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
ARM GAS  /tmp/cc2hwav8.s 			page 163


 1335              		.loc 1 540 12 discriminator 2 view .LVU381
 1336 00ba A2F58072 		sub	r2, r2, #256
 1337 00be E1E7     		b	.L89
 1338              	.L90:
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 1339              		.loc 1 547 9 is_stmt 1 view .LVU382
 1340              	.LVL112:
 1341              	.LBB341:
 1342              	.LBI341:
5010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1343              		.loc 2 5010 26 view .LVU383
 1344              	.LBB342:
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1345              		.loc 2 5012 3 view .LVU384
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1346              		.loc 2 5012 21 is_stmt 0 view .LVU385
 1347 00c0 DA68     		ldr	r2, [r3, #12]
 1348              	.LVL113:
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1349              		.loc 2 5012 21 view .LVU386
 1350              	.LBE342:
 1351              	.LBE341:
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 1352              		.loc 1 547 12 discriminator 1 view .LVU387
 1353 00c2 12F0007F 		tst	r2, #33554432
 1354 00c6 0BD1     		bne	.L81
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 1355              		.loc 1 549 11 is_stmt 1 view .LVU388
 1356              	.LVL114:
 1357              	.LBB343:
 1358              	.LBI343:
7211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1359              		.loc 2 7211 22 view .LVU389
 1360              	.LBB344:
7216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1361              		.loc 2 7216 3 view .LVU390
 1362 00c8 9968     		ldr	r1, [r3, #8]
 1363 00ca 0A4A     		ldr	r2, .L101+12
 1364 00cc 0A40     		ands	r2, r2, r1
 1365 00ce 42F00802 		orr	r2, r2, #8
 1366 00d2 9A60     		str	r2, [r3, #8]
 1367              	.LVL115:
7219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1368              		.loc 2 7219 1 is_stmt 0 view .LVU391
 1369 00d4 04E0     		b	.L81
 1370              	.L83:
7219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1371              		.loc 2 7219 1 view .LVU392
 1372              	.LBE344:
 1373              	.LBE343:
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
ARM GAS  /tmp/cc2hwav8.s 			page 164


 1374              		.loc 1 562 7 is_stmt 1 view .LVU393
 1375              		.loc 1 562 7 view .LVU394
 1376 00d6 0023     		movs	r3, #0
 1377 00d8 84F85030 		strb	r3, [r4, #80]
 1378              		.loc 1 562 7 discriminator 1 view .LVU395
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Return function status */
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return tmp_hal_status;
 1379              		.loc 1 566 5 view .LVU396
 1380              		.loc 1 566 12 is_stmt 0 view .LVU397
 1381 00dc 00E0     		b	.L81
 1382              	.LVL116:
 1383              	.L93:
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1384              		.loc 1 460 12 view .LVU398
 1385 00de 0220     		movs	r0, #2
 1386              	.LVL117:
 1387              	.L81:
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1388              		.loc 1 568 1 view .LVU399
 1389 00e0 38BD     		pop	{r3, r4, r5, pc}
 1390              	.LVL118:
 1391              	.L94:
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1392              		.loc 1 482 5 discriminator 1 view .LVU400
 1393 00e2 0220     		movs	r0, #2
 1394              	.LVL119:
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1395              		.loc 1 482 5 discriminator 1 view .LVU401
 1396 00e4 FCE7     		b	.L81
 1397              	.L102:
 1398 00e6 00BF     		.align	2
 1399              	.L101:
 1400 00e8 00230240 		.word	1073881856
 1401 00ec FECFFFFF 		.word	-12290
 1402 00f0 00210240 		.word	1073881344
 1403 00f4 C0FFFF7F 		.word	2147483584
 1404              		.cfi_endproc
 1405              	.LFE341:
 1407              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 1408              		.align	1
 1409              		.global	HAL_ADCEx_InjectedStop
 1410              		.syntax unified
 1411              		.thumb
 1412              		.thumb_func
 1414              	HAL_ADCEx_InjectedStop:
 1415              	.LVL120:
 1416              	.LFB342:
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
ARM GAS  /tmp/cc2hwav8.s 			page 165


 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of multimode enabled (when multimode feature is available),
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop() must be called for ADC master first, then for ADC slave.
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef *hadc)
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1417              		.loc 1 587 1 is_stmt 1 view -0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 0
 1420              		@ frame_needed = 0, uses_anonymous_args = 0
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1421              		.loc 1 588 3 view .LVU403
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1422              		.loc 1 591 3 view .LVU404
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1423              		.loc 1 594 3 view .LVU405
 1424              		.loc 1 594 3 view .LVU406
 1425 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1426 0004 012B     		cmp	r3, #1
 1427 0006 21D0     		beq	.L107
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1428              		.loc 1 587 1 is_stmt 0 view .LVU407
 1429 0008 10B5     		push	{r4, lr}
 1430              	.LCFI16:
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 4, -8
 1433              		.cfi_offset 14, -4
 1434 000a 0446     		mov	r4, r0
 1435              		.loc 1 594 3 is_stmt 1 discriminator 2 view .LVU408
 1436 000c 0123     		movs	r3, #1
 1437 000e 80F85030 		strb	r3, [r0, #80]
 1438              		.loc 1 594 3 discriminator 2 view .LVU409
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 1439              		.loc 1 597 3 view .LVU410
 1440              		.loc 1 597 20 is_stmt 0 view .LVU411
 1441 0012 0221     		movs	r1, #2
 1442 0014 FFF7FEFF 		bl	ADC_ConversionStop
 1443              	.LVL121:
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* and if no conversion on regular group is on-going                       */
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1444              		.loc 1 601 3 is_stmt 1 view .LVU412
 1445              		.loc 1 601 6 is_stmt 0 view .LVU413
 1446 0018 40B9     		cbnz	r0, .L105
ARM GAS  /tmp/cc2hwav8.s 			page 166


 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 1447              		.loc 1 603 5 is_stmt 1 view .LVU414
 1448              		.loc 1 603 9 is_stmt 0 view .LVU415
 1449 001a 2368     		ldr	r3, [r4]
 1450              	.LVL122:
 1451              	.LBB345:
 1452              	.LBI345:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1453              		.loc 2 7052 26 is_stmt 1 view .LVU416
 1454              	.LBB346:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1455              		.loc 2 7054 3 view .LVU417
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1456              		.loc 2 7054 12 is_stmt 0 view .LVU418
 1457 001c 9B68     		ldr	r3, [r3, #8]
 1458              	.LVL123:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1459              		.loc 2 7054 74 view .LVU419
 1460 001e 13F0040F 		tst	r3, #4
 1461 0022 07D0     		beq	.L106
 1462              	.LVL124:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1463              		.loc 2 7054 74 view .LVU420
 1464              	.LBE346:
 1465              	.LBE345:
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state */
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1466              		.loc 1 622 7 is_stmt 1 view .LVU421
 1467 0024 636D     		ldr	r3, [r4, #84]
 1468 0026 23F48053 		bic	r3, r3, #4096
 1469 002a 6365     		str	r3, [r4, #84]
 1470              	.L105:
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1471              		.loc 1 627 3 view .LVU422
 1472              		.loc 1 627 3 view .LVU423
ARM GAS  /tmp/cc2hwav8.s 			page 167


 1473 002c 0023     		movs	r3, #0
 1474 002e 84F85030 		strb	r3, [r4, #80]
 1475              		.loc 1 627 3 view .LVU424
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 1476              		.loc 1 630 3 view .LVU425
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1477              		.loc 1 631 1 is_stmt 0 view .LVU426
 1478 0032 10BD     		pop	{r4, pc}
 1479              	.LVL125:
 1480              	.L106:
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1481              		.loc 1 606 7 is_stmt 1 view .LVU427
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1482              		.loc 1 606 24 is_stmt 0 view .LVU428
 1483 0034 2046     		mov	r0, r4
 1484              	.LVL126:
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1485              		.loc 1 606 24 view .LVU429
 1486 0036 FFF7FEFF 		bl	ADC_Disable
 1487              	.LVL127:
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 1488              		.loc 1 609 7 is_stmt 1 view .LVU430
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 1489              		.loc 1 609 10 is_stmt 0 view .LVU431
 1490 003a 0028     		cmp	r0, #0
 1491 003c F6D1     		bne	.L105
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1492              		.loc 1 612 9 is_stmt 1 view .LVU432
 1493 003e 626D     		ldr	r2, [r4, #84]
 1494 0040 034B     		ldr	r3, .L112
 1495 0042 1340     		ands	r3, r3, r2
 1496 0044 43F00103 		orr	r3, r3, #1
 1497 0048 6365     		str	r3, [r4, #84]
 1498 004a EFE7     		b	.L105
 1499              	.LVL128:
 1500              	.L107:
 1501              	.LCFI17:
 1502              		.cfi_def_cfa_offset 0
 1503              		.cfi_restore 4
 1504              		.cfi_restore 14
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1505              		.loc 1 594 3 is_stmt 0 discriminator 1 view .LVU433
 1506 004c 0220     		movs	r0, #2
 1507              	.LVL129:
 1508              		.loc 1 631 1 view .LVU434
 1509 004e 7047     		bx	lr
 1510              	.L113:
 1511              		.align	2
 1512              	.L112:
 1513 0050 FEEEFFFF 		.word	-4354
 1514              		.cfi_endproc
 1515              	.LFE342:
 1517              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 1518              		.align	1
 1519              		.global	HAL_ADCEx_InjectedPollForConversion
ARM GAS  /tmp/cc2hwav8.s 			page 168


 1520              		.syntax unified
 1521              		.thumb
 1522              		.thumb_func
 1524              	HAL_ADCEx_InjectedPollForConversion:
 1525              	.LVL130:
 1526              	.LFB343:
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param Timeout Timeout value in millisecond.
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Depending on hadc->Init.EOCSelection, JEOS or JEOC is
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         checked and cleared depending on AUTDLY bit status.
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1527              		.loc 1 642 1 is_stmt 1 view -0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 0
 1530              		@ frame_needed = 0, uses_anonymous_args = 0
 1531              		.loc 1 642 1 is_stmt 0 view .LVU436
 1532 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1533              	.LCFI18:
 1534              		.cfi_def_cfa_offset 24
 1535              		.cfi_offset 4, -24
 1536              		.cfi_offset 5, -20
 1537              		.cfi_offset 6, -16
 1538              		.cfi_offset 7, -12
 1539              		.cfi_offset 8, -8
 1540              		.cfi_offset 14, -4
 1541 0004 0446     		mov	r4, r0
 1542 0006 0D46     		mov	r5, r1
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tickstart;
 1543              		.loc 1 643 3 is_stmt 1 view .LVU437
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_Flag_End;
 1544              		.loc 1 644 3 view .LVU438
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1545              		.loc 1 645 3 view .LVU439
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 1546              		.loc 1 646 3 view .LVU440
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_cfgr;
 1547              		.loc 1 647 3 view .LVU441
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   const ADC_TypeDef *tmpADC_Master;
 1548              		.loc 1 648 3 view .LVU442
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 1549              		.loc 1 649 3 view .LVU443
 1550              	.LVL131:
 1551              	.LBB347:
 1552              	.LBI347:
6580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1553              		.loc 2 6580 26 view .LVU444
 1554              	.LBB348:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1555              		.loc 2 6582 3 view .LVU445
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1556              		.loc 2 6582 21 is_stmt 0 view .LVU446
ARM GAS  /tmp/cc2hwav8.s 			page 169


 1557 0008 3C4B     		ldr	r3, .L140
 1558 000a 9F68     		ldr	r7, [r3, #8]
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1559              		.loc 2 6582 10 view .LVU447
 1560 000c 07F01F07 		and	r7, r7, #31
 1561              	.LVL132:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1562              		.loc 2 6582 10 view .LVU448
 1563              	.LBE348:
 1564              	.LBE347:
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1565              		.loc 1 652 3 is_stmt 1 view .LVU449
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* If end of sequence selected */
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 1566              		.loc 1 655 3 view .LVU450
 1567              		.loc 1 655 17 is_stmt 0 view .LVU451
 1568 0010 0369     		ldr	r3, [r0, #16]
 1569              		.loc 1 655 6 view .LVU452
 1570 0012 082B     		cmp	r3, #8
 1571 0014 1FD0     		beq	.L136
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOS;
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else /* end of conversion selected */
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOC;
 1572              		.loc 1 661 18 view .LVU453
 1573 0016 2026     		movs	r6, #32
 1574              	.L115:
 1575              	.LVL133:
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Get timeout */
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
 1576              		.loc 1 665 3 is_stmt 1 view .LVU454
 1577              		.loc 1 665 15 is_stmt 0 view .LVU455
 1578 0018 FFF7FEFF 		bl	HAL_GetTick
 1579              	.LVL134:
 1580              		.loc 1 665 15 view .LVU456
 1581 001c 8046     		mov	r8, r0
 1582              	.LVL135:
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Wait until End of Conversion or Sequence flag is raised */
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 1583              		.loc 1 668 3 is_stmt 1 view .LVU457
 1584              	.L117:
 1585              		.loc 1 668 47 view .LVU458
 1586              		.loc 1 668 15 is_stmt 0 view .LVU459
 1587 001e 2368     		ldr	r3, [r4]
 1588              		.loc 1 668 25 view .LVU460
 1589 0020 1A68     		ldr	r2, [r3]
 1590              		.loc 1 668 47 view .LVU461
 1591 0022 3242     		tst	r2, r6
 1592 0024 19D1     		bne	.L137
ARM GAS  /tmp/cc2hwav8.s 			page 170


 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 1593              		.loc 1 671 5 is_stmt 1 view .LVU462
 1594              		.loc 1 671 8 is_stmt 0 view .LVU463
 1595 0026 B5F1FF3F 		cmp	r5, #-1
 1596 002a F8D0     		beq	.L117
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 1597              		.loc 1 673 7 is_stmt 1 view .LVU464
 1598              		.loc 1 673 13 is_stmt 0 view .LVU465
 1599 002c FFF7FEFF 		bl	HAL_GetTick
 1600              	.LVL136:
 1601              		.loc 1 673 27 discriminator 1 view .LVU466
 1602 0030 A0EB0800 		sub	r0, r0, r8
 1603              		.loc 1 673 10 discriminator 1 view .LVU467
 1604 0034 A842     		cmp	r0, r5
 1605 0036 01D8     		bhi	.L118
 1606              		.loc 1 673 51 discriminator 1 view .LVU468
 1607 0038 002D     		cmp	r5, #0
 1608 003a F0D1     		bne	.L117
 1609              	.L118:
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 1610              		.loc 1 675 9 is_stmt 1 view .LVU469
 1611              		.loc 1 675 17 is_stmt 0 view .LVU470
 1612 003c 2368     		ldr	r3, [r4]
 1613              		.loc 1 675 27 view .LVU471
 1614 003e 1B68     		ldr	r3, [r3]
 1615              		.loc 1 675 11 view .LVU472
 1616 0040 3342     		tst	r3, r6
 1617 0042 ECD1     		bne	.L117
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1618              		.loc 1 678 11 is_stmt 1 view .LVU473
 1619 0044 636D     		ldr	r3, [r4, #84]
 1620 0046 43F00403 		orr	r3, r3, #4
 1621 004a 6365     		str	r3, [r4, #84]
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Process unlocked */
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 1622              		.loc 1 681 11 view .LVU474
 1623              		.loc 1 681 11 view .LVU475
 1624 004c 0023     		movs	r3, #0
 1625 004e 84F85030 		strb	r3, [r4, #80]
 1626              		.loc 1 681 11 view .LVU476
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 1627              		.loc 1 683 11 view .LVU477
 1628              		.loc 1 683 18 is_stmt 0 view .LVU478
 1629 0052 0320     		movs	r0, #3
 1630 0054 47E0     		b	.L119
 1631              	.LVL137:
 1632              	.L136:
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1633              		.loc 1 657 18 view .LVU479
ARM GAS  /tmp/cc2hwav8.s 			page 171


 1634 0056 4026     		movs	r6, #64
 1635 0058 DEE7     		b	.L115
 1636              	.LVL138:
 1637              	.L137:
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Retrieve ADC configuration */
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
 1638              		.loc 1 690 3 is_stmt 1 view .LVU480
 1639              	.LBB349:
 1640              	.LBI349:
4708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1641              		.loc 2 4708 26 view .LVU481
 1642              	.LBB350:
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1643              		.loc 2 4710 3 view .LVU482
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1644              		.loc 2 4710 12 is_stmt 0 view .LVU483
 1645 005a DA6C     		ldr	r2, [r3, #76]
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1646              		.loc 2 4710 105 view .LVU484
 1647 005c 12F4C07F 		tst	r2, #384
 1648 0060 15D1     		bne	.L131
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1649              		.loc 2 4710 105 discriminator 1 view .LVU485
 1650 0062 0120     		movs	r0, #1
 1651              	.L121:
 1652              	.LVL139:
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1653              		.loc 2 4710 105 discriminator 1 view .LVU486
 1654              	.LBE350:
 1655              	.LBE349:
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1656              		.loc 1 691 3 is_stmt 1 view .LVU487
 1657              	.LBB352:
 1658              	.LBI352:
3921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1659              		.loc 2 3921 26 view .LVU488
 1660              	.LBB353:
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1661              		.loc 2 3923 3 view .LVU489
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1662              		.loc 2 3923 12 is_stmt 0 view .LVU490
 1663 0064 DA68     		ldr	r2, [r3, #12]
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1664              		.loc 2 3923 103 view .LVU491
 1665 0066 12F4406F 		tst	r2, #3072
 1666 006a 12D1     		bne	.L132
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1667              		.loc 2 3923 103 discriminator 1 view .LVU492
 1668 006c 0125     		movs	r5, #1
 1669              	.LVL140:
 1670              	.L122:
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 172


 1671              		.loc 2 3923 103 discriminator 1 view .LVU493
 1672              	.LBE353:
 1673              	.LBE352:
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode         */
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* available).                                                        */
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1674              		.loc 1 695 3 is_stmt 1 view .LVU494
 1675              		.loc 1 695 8 is_stmt 0 view .LVU495
 1676 006e 244A     		ldr	r2, .L140+4
 1677 0070 9342     		cmp	r3, r2
 1678 0072 10D0     		beq	.L138
 1679              		.loc 1 695 8 discriminator 1 view .LVU496
 1680 0074 1A46     		mov	r2, r3
 1681              	.L123:
 1682              		.loc 1 695 6 discriminator 4 view .LVU497
 1683 0076 9342     		cmp	r3, r2
 1684 0078 10D0     		beq	.L124
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 1685              		.loc 1 697 32 view .LVU498
 1686 007a 062F     		cmp	r7, #6
 1687 007c 14BF     		ite	ne
 1688 007e 0021     		movne	r1, #0
 1689 0080 0121     		moveq	r1, #1
 1690              		.loc 1 697 7 view .LVU499
 1691 0082 5FB1     		cbz	r7, .L124
 1692 0084 51B9     		cbnz	r1, .L124
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1693              		.loc 1 698 7 view .LVU500
 1694 0086 072F     		cmp	r7, #7
 1695 0088 08D0     		beq	.L124
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      )
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 1696              		.loc 1 705 5 is_stmt 1 view .LVU501
 1697              	.LVL141:
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1698              		.loc 1 706 5 view .LVU502
 1699              		.loc 1 706 14 is_stmt 0 view .LVU503
 1700 008a D168     		ldr	r1, [r2, #12]
 1701              	.LVL142:
 1702              		.loc 1 706 14 view .LVU504
 1703 008c 07E0     		b	.L126
 1704              	.LVL143:
 1705              	.L131:
 1706              	.LBB355:
 1707              	.LBB351:
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1708              		.loc 2 4710 105 discriminator 2 view .LVU505
 1709 008e 0020     		movs	r0, #0
 1710 0090 E8E7     		b	.L121
 1711              	.LVL144:
ARM GAS  /tmp/cc2hwav8.s 			page 173


 1712              	.L132:
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1713              		.loc 2 4710 105 discriminator 2 view .LVU506
 1714              	.LBE351:
 1715              	.LBE355:
 1716              	.LBB356:
 1717              	.LBB354:
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1718              		.loc 2 3923 103 discriminator 2 view .LVU507
 1719 0092 0025     		movs	r5, #0
 1720              	.LVL145:
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1721              		.loc 2 3923 103 discriminator 2 view .LVU508
 1722 0094 EBE7     		b	.L122
 1723              	.LVL146:
 1724              	.L138:
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1725              		.loc 2 3923 103 discriminator 2 view .LVU509
 1726              	.LBE354:
 1727              	.LBE356:
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1728              		.loc 1 695 8 discriminator 2 view .LVU510
 1729 0096 A2F58072 		sub	r2, r2, #256
 1730 009a ECE7     		b	.L123
 1731              	.L124:
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1732              		.loc 1 701 5 is_stmt 1 view .LVU511
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1733              		.loc 1 701 14 is_stmt 0 view .LVU512
 1734 009c D968     		ldr	r1, [r3, #12]
 1735              	.LVL147:
 1736              	.L126:
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Update ADC state machine */
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 1737              		.loc 1 710 3 is_stmt 1 view .LVU513
 1738 009e 626D     		ldr	r2, [r4, #84]
 1739 00a0 42F40052 		orr	r2, r2, #8192
 1740 00a4 6265     		str	r2, [r4, #84]
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* from group regular.                                                      */
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
 1741              		.loc 1 715 3 view .LVU514
 1742              		.loc 1 715 6 is_stmt 0 view .LVU515
 1743 00a6 30B9     		cbnz	r0, .L127
 1744              		.loc 1 715 66 discriminator 1 view .LVU516
 1745 00a8 11F0007F 		tst	r1, #33554432
 1746 00ac 16D1     		bne	.L128
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 1747              		.loc 1 716 57 view .LVU517
 1748 00ae ADB1     		cbz	r5, .L128
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
 1749              		.loc 1 717 58 view .LVU518
 1750 00b0 11F4005F 		tst	r1, #8192
ARM GAS  /tmp/cc2hwav8.s 			page 174


 1751 00b4 12D1     		bne	.L128
 1752              	.L127:
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check whether end of sequence is reached */
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
 1753              		.loc 1 721 5 is_stmt 1 view .LVU519
 1754              		.loc 1 721 9 is_stmt 0 view .LVU520
 1755 00b6 1A68     		ldr	r2, [r3]
 1756              		.loc 1 721 8 view .LVU521
 1757 00b8 12F0400F 		tst	r2, #64
 1758 00bc 0ED0     		beq	.L128
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Particular case if injected contexts queue is enabled:             */
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* when the last context has been fully processed, JSQR is reset      */
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* by the hardware. Even if no injected conversion is planned to come */
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* (queue empty, triggers are ignored), it can start again            */
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* immediately after setting a new context (JADSTART is still set).   */
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Therefore, state of HAL ADC injected group is kept to busy.        */
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
 1759              		.loc 1 729 7 is_stmt 1 view .LVU522
 1760              		.loc 1 729 10 is_stmt 0 view .LVU523
 1761 00be 11F4001F 		tst	r1, #2097152
 1762 00c2 0BD1     		bne	.L128
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1763              		.loc 1 732 9 is_stmt 1 view .LVU524
 1764 00c4 626D     		ldr	r2, [r4, #84]
 1765 00c6 22F48052 		bic	r2, r2, #4096
 1766 00ca 6265     		str	r2, [r4, #84]
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
 1767              		.loc 1 734 9 view .LVU525
 1768              		.loc 1 734 18 is_stmt 0 view .LVU526
 1769 00cc 626D     		ldr	r2, [r4, #84]
 1770              		.loc 1 734 12 view .LVU527
 1771 00ce 12F4807F 		tst	r2, #256
 1772 00d2 03D1     		bne	.L128
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1773              		.loc 1 736 11 is_stmt 1 view .LVU528
 1774 00d4 626D     		ldr	r2, [r4, #84]
 1775 00d6 42F00102 		orr	r2, r2, #1
 1776 00da 6265     		str	r2, [r4, #84]
 1777              	.L128:
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Clear polled flag */
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_Flag_End == ADC_FLAG_JEOS)
 1778              		.loc 1 743 3 view .LVU529
 1779              		.loc 1 743 6 is_stmt 0 view .LVU530
 1780 00dc 402E     		cmp	r6, #64
 1781 00de 04D0     		beq	.L139
ARM GAS  /tmp/cc2hwav8.s 			page 175


 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear end of sequence JEOS flag of injected group if low power feature */
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature.   */
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* For injected groups, no new conversion will start before JEOS is       */
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* cleared.                                                               */
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 1782              		.loc 1 756 5 is_stmt 1 view .LVU531
 1783 00e0 2022     		movs	r2, #32
 1784 00e2 1A60     		str	r2, [r3]
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return API HAL status */
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return HAL_OK;
 1785              		.loc 1 760 10 is_stmt 0 view .LVU532
 1786 00e4 0020     		movs	r0, #0
 1787              	.LVL148:
 1788              	.L119:
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1789              		.loc 1 761 1 view .LVU533
 1790 00e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1791              	.LVL149:
 1792              	.L139:
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 1793              		.loc 1 749 5 is_stmt 1 view .LVU534
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 1794              		.loc 1 749 8 is_stmt 0 view .LVU535
 1795 00ea 11F4804F 		tst	r1, #16384
 1796 00ee 03D1     		bne	.L134
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1797              		.loc 1 751 7 is_stmt 1 view .LVU536
 1798 00f0 6022     		movs	r2, #96
 1799 00f2 1A60     		str	r2, [r3]
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1800              		.loc 1 760 10 is_stmt 0 view .LVU537
 1801 00f4 0020     		movs	r0, #0
 1802              	.LVL150:
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1803              		.loc 1 760 10 view .LVU538
 1804 00f6 F6E7     		b	.L119
 1805              	.LVL151:
 1806              	.L134:
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1807              		.loc 1 760 10 view .LVU539
 1808 00f8 0020     		movs	r0, #0
 1809              	.LVL152:
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1810              		.loc 1 760 10 view .LVU540
 1811 00fa F4E7     		b	.L119
 1812              	.L141:
 1813              		.align	2
ARM GAS  /tmp/cc2hwav8.s 			page 176


 1814              	.L140:
 1815 00fc 00230240 		.word	1073881856
 1816 0100 00210240 		.word	1073881344
 1817              		.cfi_endproc
 1818              	.LFE343:
 1820              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 1821              		.align	1
 1822              		.global	HAL_ADCEx_InjectedStart_IT
 1823              		.syntax unified
 1824              		.thumb
 1825              		.thumb_func
 1827              	HAL_ADCEx_InjectedStart_IT:
 1828              	.LVL153:
 1829              	.LFB344:
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group with interruption.
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function according to initialization
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         setting : JEOC (end of conversion) or JEOS (end of sequence)
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is enabled):
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart_IT() API must be called for ADC slave first,
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         then for ADC master.
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef *hadc)
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1830              		.loc 1 776 1 is_stmt 1 view -0
 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 0
 1833              		@ frame_needed = 0, uses_anonymous_args = 0
 1834              		.loc 1 776 1 is_stmt 0 view .LVU542
 1835 0000 38B5     		push	{r3, r4, r5, lr}
 1836              	.LCFI19:
 1837              		.cfi_def_cfa_offset 16
 1838              		.cfi_offset 3, -16
 1839              		.cfi_offset 4, -12
 1840              		.cfi_offset 5, -8
 1841              		.cfi_offset 14, -4
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1842              		.loc 1 777 3 is_stmt 1 view .LVU543
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 1843              		.loc 1 778 3 view .LVU544
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 1844              		.loc 1 779 3 view .LVU545
 1845              	.LVL154:
 1846              	.LBB357:
 1847              	.LBI357:
6580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1848              		.loc 2 6580 26 view .LVU546
 1849              	.LBB358:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1850              		.loc 2 6582 3 view .LVU547
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1851              		.loc 2 6582 21 is_stmt 0 view .LVU548
ARM GAS  /tmp/cc2hwav8.s 			page 177


 1852 0002 4A4B     		ldr	r3, .L167
 1853 0004 9D68     		ldr	r5, [r3, #8]
 1854              	.LVL155:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1855              		.loc 2 6582 21 view .LVU549
 1856              	.LBE358:
 1857              	.LBE357:
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1858              		.loc 1 782 3 is_stmt 1 view .LVU550
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 1859              		.loc 1 784 3 view .LVU551
 1860              		.loc 1 784 7 is_stmt 0 view .LVU552
 1861 0006 0368     		ldr	r3, [r0]
 1862              	.LVL156:
 1863              	.LBB359:
 1864              	.LBI359:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1865              		.loc 2 7247 26 is_stmt 1 view .LVU553
 1866              	.LBB360:
 1867              		.loc 2 7249 3 view .LVU554
 1868              		.loc 2 7249 12 is_stmt 0 view .LVU555
 1869 0008 9A68     		ldr	r2, [r3, #8]
 1870              		.loc 2 7249 76 view .LVU556
 1871 000a 12F0080F 		tst	r2, #8
 1872 000e 40F08880 		bne	.L158
 1873 0012 0446     		mov	r4, r0
 1874 0014 05F01F05 		and	r5, r5, #31
 1875              	.LVL157:
 1876              		.loc 2 7249 76 view .LVU557
 1877              	.LBE360:
 1878              	.LBE359:
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_BUSY;
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          the queue is empty */
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 1879              		.loc 1 797 5 is_stmt 1 view .LVU558
 1880              		.loc 1 797 33 is_stmt 0 view .LVU559
 1881 0018 DA68     		ldr	r2, [r3, #12]
 1882              	.LVL158:
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 1883              		.loc 1 799 5 is_stmt 1 view .LVU560
 1884              		.loc 1 799 10 is_stmt 0 view .LVU561
 1885 001a DB6C     		ldr	r3, [r3, #76]
 1886              		.loc 1 799 8 view .LVU562
ARM GAS  /tmp/cc2hwav8.s 			page 178


 1887 001c 13F4C07F 		tst	r3, #384
 1888 0020 01D1     		bne	.L144
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 1889              		.loc 1 800 9 view .LVU563
 1890 0022 002A     		cmp	r2, #0
 1891 0024 54DA     		bge	.L163
 1892              	.L144:
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        )
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process locked */
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1893              		.loc 1 808 5 is_stmt 1 view .LVU564
 1894              		.loc 1 808 5 view .LVU565
 1895 0026 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 1896 002a 012B     		cmp	r3, #1
 1897 002c 7BD0     		beq	.L159
 1898              		.loc 1 808 5 discriminator 2 view .LVU566
 1899 002e 0123     		movs	r3, #1
 1900 0030 84F85030 		strb	r3, [r4, #80]
 1901              		.loc 1 808 5 discriminator 2 view .LVU567
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 1902              		.loc 1 811 5 view .LVU568
 1903              		.loc 1 811 22 is_stmt 0 view .LVU569
 1904 0034 2046     		mov	r0, r4
 1905              	.LVL159:
 1906              		.loc 1 811 22 view .LVU570
 1907 0036 FFF7FEFF 		bl	ADC_Enable
 1908              	.LVL160:
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1909              		.loc 1 814 5 is_stmt 1 view .LVU571
 1910              		.loc 1 814 8 is_stmt 0 view .LVU572
 1911 003a 0028     		cmp	r0, #0
 1912 003c 6DD1     		bne	.L145
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 1913              		.loc 1 817 7 is_stmt 1 view .LVU573
 1914              		.loc 1 817 16 is_stmt 0 view .LVU574
 1915 003e 636D     		ldr	r3, [r4, #84]
 1916              		.loc 1 817 10 view .LVU575
 1917 0040 13F4807F 		tst	r3, #256
 1918 0044 4AD0     		beq	.L146
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 1919              		.loc 1 820 9 is_stmt 1 view .LVU576
 1920 0046 A36D     		ldr	r3, [r4, #88]
 1921 0048 23F00803 		bic	r3, r3, #8
 1922 004c A365     		str	r3, [r4, #88]
ARM GAS  /tmp/cc2hwav8.s 			page 179


 1923              	.L147:
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1924              		.loc 1 831 7 view .LVU577
 1925 004e 626D     		ldr	r2, [r4, #84]
 1926 0050 374B     		ldr	r3, .L167+4
 1927 0052 1340     		ands	r3, r3, r2
 1928 0054 43F48053 		orr	r3, r3, #4096
 1929 0058 6365     		str	r3, [r4, #84]
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1930              		.loc 1 838 7 view .LVU578
 1931              		.loc 1 838 12 is_stmt 0 view .LVU579
 1932 005a 2368     		ldr	r3, [r4]
 1933 005c 354A     		ldr	r2, .L167+8
 1934 005e 9342     		cmp	r3, r2
 1935 0060 3FD0     		beq	.L164
 1936              		.loc 1 838 12 discriminator 1 view .LVU580
 1937 0062 1A46     		mov	r2, r3
 1938              	.L148:
 1939              		.loc 1 838 10 discriminator 4 view .LVU581
 1940 0064 9342     		cmp	r3, r2
 1941 0066 00D0     		beq	.L149
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1942              		.loc 1 839 11 view .LVU582
 1943 0068 1DB9     		cbnz	r5, .L150
 1944              	.L149:
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          )
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1945              		.loc 1 842 9 is_stmt 1 view .LVU583
 1946 006a 626D     		ldr	r2, [r4, #84]
 1947 006c 22F48012 		bic	r2, r2, #1048576
 1948 0070 6265     		str	r2, [r4, #84]
 1949              	.L150:
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 1950              		.loc 1 847 7 view .LVU584
 1951 0072 6022     		movs	r2, #96
 1952 0074 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc2hwav8.s 			page 180


 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1953              		.loc 1 852 7 view .LVU585
 1954              		.loc 1 852 7 view .LVU586
 1955 0076 0023     		movs	r3, #0
 1956 0078 84F85030 		strb	r3, [r4, #80]
 1957              		.loc 1 852 7 view .LVU587
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature   */
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* is enabled.                                                            */
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != 0UL)
 1958              		.loc 1 856 7 view .LVU588
 1959              		.loc 1 856 16 is_stmt 0 view .LVU589
 1960 007c 2368     		ldr	r3, [r4]
 1961              		.loc 1 856 26 view .LVU590
 1962 007e DA68     		ldr	r2, [r3, #12]
 1963              		.loc 1 856 10 view .LVU591
 1964 0080 12F4001F 		tst	r2, #2097152
 1965 0084 03D0     		beq	.L151
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
 1966              		.loc 1 858 9 is_stmt 1 view .LVU592
 1967 0086 5A68     		ldr	r2, [r3, #4]
 1968 0088 42F48062 		orr	r2, r2, #1024
 1969 008c 5A60     		str	r2, [r3, #4]
 1970              	.L151:
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       switch (hadc->Init.EOCSelection)
 1971              		.loc 1 862 7 view .LVU593
 1972              		.loc 1 862 25 is_stmt 0 view .LVU594
 1973 008e 2369     		ldr	r3, [r4, #16]
 1974              		.loc 1 862 7 view .LVU595
 1975 0090 082B     		cmp	r3, #8
 1976 0092 29D0     		beq	.L165
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV:
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           break;
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         default:
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 1977              		.loc 1 870 11 is_stmt 1 view .LVU596
 1978 0094 2268     		ldr	r2, [r4]
 1979 0096 5368     		ldr	r3, [r2, #4]
 1980 0098 23F04003 		bic	r3, r3, #64
 1981 009c 5360     		str	r3, [r2, #4]
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 1982              		.loc 1 871 11 view .LVU597
 1983 009e 2268     		ldr	r2, [r4]
 1984 00a0 5368     		ldr	r3, [r2, #4]
 1985 00a2 43F02003 		orr	r3, r3, #32
ARM GAS  /tmp/cc2hwav8.s 			page 181


 1986 00a6 5360     		str	r3, [r2, #4]
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           break;
 1987              		.loc 1 872 11 view .LVU598
 1988              	.L153:
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1989              		.loc 1 887 7 view .LVU599
 1990              		.loc 1 887 12 is_stmt 0 view .LVU600
 1991 00a8 2368     		ldr	r3, [r4]
 1992 00aa 224A     		ldr	r2, .L167+8
 1993 00ac 9342     		cmp	r3, r2
 1994 00ae 26D0     		beq	.L166
 1995              		.loc 1 887 12 discriminator 1 view .LVU601
 1996 00b0 1A46     		mov	r2, r3
 1997              	.L154:
 1998              		.loc 1 887 10 discriminator 4 view .LVU602
 1999 00b2 9342     		cmp	r3, r2
 2000 00b4 26D0     		beq	.L155
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 2001              		.loc 1 889 36 view .LVU603
 2002 00b6 062D     		cmp	r5, #6
 2003 00b8 14BF     		ite	ne
 2004 00ba 0022     		movne	r2, #0
 2005 00bc 0122     		moveq	r2, #1
 2006              		.loc 1 889 11 view .LVU604
 2007 00be 0DB3     		cbz	r5, .L155
 2008 00c0 02BB     		cbnz	r2, .L155
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 2009              		.loc 1 890 11 view .LVU605
 2010 00c2 072D     		cmp	r5, #7
 2011 00c4 1ED0     		beq	.L155
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          )
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
ARM GAS  /tmp/cc2hwav8.s 			page 182


 2012              		.loc 1 902 9 is_stmt 1 view .LVU606
 2013 00c6 636D     		ldr	r3, [r4, #84]
 2014 00c8 43F48013 		orr	r3, r3, #1048576
 2015 00cc 6365     		str	r3, [r4, #84]
 2016 00ce 29E0     		b	.L143
 2017              	.LVL161:
 2018              	.L163:
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 2019              		.loc 1 803 7 view .LVU607
 2020 00d0 436D     		ldr	r3, [r0, #84]
 2021 00d2 43F02003 		orr	r3, r3, #32
 2022 00d6 4365     		str	r3, [r0, #84]
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2023              		.loc 1 804 7 view .LVU608
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2024              		.loc 1 804 14 is_stmt 0 view .LVU609
 2025 00d8 0120     		movs	r0, #1
 2026              	.LVL162:
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2027              		.loc 1 804 14 view .LVU610
 2028 00da 23E0     		b	.L143
 2029              	.LVL163:
 2030              	.L146:
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2031              		.loc 1 825 9 is_stmt 1 view .LVU611
 2032 00dc 0023     		movs	r3, #0
 2033 00de A365     		str	r3, [r4, #88]
 2034 00e0 B5E7     		b	.L147
 2035              	.L164:
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 2036              		.loc 1 838 12 is_stmt 0 discriminator 2 view .LVU612
 2037 00e2 A2F58072 		sub	r2, r2, #256
 2038 00e6 BDE7     		b	.L148
 2039              	.L165:
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 2040              		.loc 1 865 11 is_stmt 1 view .LVU613
 2041 00e8 2268     		ldr	r2, [r4]
 2042 00ea 5368     		ldr	r3, [r2, #4]
 2043 00ec 23F02003 		bic	r3, r3, #32
 2044 00f0 5360     		str	r3, [r2, #4]
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           break;
 2045              		.loc 1 866 11 view .LVU614
 2046 00f2 2268     		ldr	r2, [r4]
 2047 00f4 5368     		ldr	r3, [r2, #4]
 2048 00f6 43F04003 		orr	r3, r3, #64
 2049 00fa 5360     		str	r3, [r2, #4]
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 2050              		.loc 1 867 11 view .LVU615
 2051 00fc D4E7     		b	.L153
 2052              	.L166:
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 2053              		.loc 1 887 12 is_stmt 0 discriminator 2 view .LVU616
 2054 00fe A2F58072 		sub	r2, r2, #256
 2055 0102 D6E7     		b	.L154
 2056              	.L155:
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 2057              		.loc 1 894 9 is_stmt 1 view .LVU617
ARM GAS  /tmp/cc2hwav8.s 			page 183


 2058              	.LVL164:
 2059              	.LBB361:
 2060              	.LBI361:
5010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2061              		.loc 2 5010 26 view .LVU618
 2062              	.LBB362:
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2063              		.loc 2 5012 3 view .LVU619
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2064              		.loc 2 5012 21 is_stmt 0 view .LVU620
 2065 0104 DA68     		ldr	r2, [r3, #12]
 2066              	.LVL165:
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2067              		.loc 2 5012 21 view .LVU621
 2068              	.LBE362:
 2069              	.LBE361:
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 2070              		.loc 1 894 12 discriminator 1 view .LVU622
 2071 0106 12F0007F 		tst	r2, #33554432
 2072 010a 0BD1     		bne	.L143
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 2073              		.loc 1 896 11 is_stmt 1 view .LVU623
 2074              	.LVL166:
 2075              	.LBB363:
 2076              	.LBI363:
7211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2077              		.loc 2 7211 22 view .LVU624
 2078              	.LBB364:
7216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2079              		.loc 2 7216 3 view .LVU625
 2080 010c 9968     		ldr	r1, [r3, #8]
 2081 010e 0A4A     		ldr	r2, .L167+12
 2082 0110 0A40     		ands	r2, r2, r1
 2083 0112 42F00802 		orr	r2, r2, #8
 2084 0116 9A60     		str	r2, [r3, #8]
 2085              	.LVL167:
7219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2086              		.loc 2 7219 1 is_stmt 0 view .LVU626
 2087 0118 04E0     		b	.L143
 2088              	.L145:
7219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2089              		.loc 2 7219 1 view .LVU627
 2090              	.LBE364:
 2091              	.LBE363:
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 2092              		.loc 1 909 7 is_stmt 1 view .LVU628
 2093              		.loc 1 909 7 view .LVU629
 2094 011a 0023     		movs	r3, #0
 2095 011c 84F85030 		strb	r3, [r4, #80]
 2096              		.loc 1 909 7 discriminator 1 view .LVU630
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/cc2hwav8.s 			page 184


 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Return function status */
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return tmp_hal_status;
 2097              		.loc 1 913 5 view .LVU631
 2098              		.loc 1 913 12 is_stmt 0 view .LVU632
 2099 0120 00E0     		b	.L143
 2100              	.LVL168:
 2101              	.L158:
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 2102              		.loc 1 786 12 view .LVU633
 2103 0122 0220     		movs	r0, #2
 2104              	.LVL169:
 2105              	.L143:
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2106              		.loc 1 915 1 view .LVU634
 2107 0124 38BD     		pop	{r3, r4, r5, pc}
 2108              	.LVL170:
 2109              	.L159:
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2110              		.loc 1 808 5 discriminator 1 view .LVU635
 2111 0126 0220     		movs	r0, #2
 2112              	.LVL171:
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2113              		.loc 1 808 5 discriminator 1 view .LVU636
 2114 0128 FCE7     		b	.L143
 2115              	.L168:
 2116 012a 00BF     		.align	2
 2117              	.L167:
 2118 012c 00230240 		.word	1073881856
 2119 0130 FECFFFFF 		.word	-12290
 2120 0134 00210240 		.word	1073881344
 2121 0138 C0FFFF7F 		.word	2147483584
 2122              		.cfi_endproc
 2123              	.LFE344:
 2125              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 2126              		.align	1
 2127              		.global	HAL_ADCEx_InjectedStop_IT
 2128              		.syntax unified
 2129              		.thumb
 2130              		.thumb_func
 2132              	HAL_ADCEx_InjectedStop_IT:
 2133              	.LVL172:
 2134              	.LFB345:
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         is on going.
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is available):
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop_IT() API must be called for ADC master first,
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         then for ADC slave.
ARM GAS  /tmp/cc2hwav8.s 			page 185


 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop() must be used.
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef *hadc)
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2135              		.loc 1 937 1 is_stmt 1 view -0
 2136              		.cfi_startproc
 2137              		@ args = 0, pretend = 0, frame = 0
 2138              		@ frame_needed = 0, uses_anonymous_args = 0
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2139              		.loc 1 938 3 view .LVU638
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2140              		.loc 1 941 3 view .LVU639
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2141              		.loc 1 944 3 view .LVU640
 2142              		.loc 1 944 3 view .LVU641
 2143 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2144 0004 012B     		cmp	r3, #1
 2145 0006 26D0     		beq	.L173
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2146              		.loc 1 937 1 is_stmt 0 view .LVU642
 2147 0008 10B5     		push	{r4, lr}
 2148              	.LCFI20:
 2149              		.cfi_def_cfa_offset 8
 2150              		.cfi_offset 4, -8
 2151              		.cfi_offset 14, -4
 2152 000a 0446     		mov	r4, r0
 2153              		.loc 1 944 3 is_stmt 1 discriminator 2 view .LVU643
 2154 000c 0123     		movs	r3, #1
 2155 000e 80F85030 		strb	r3, [r0, #80]
 2156              		.loc 1 944 3 discriminator 2 view .LVU644
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 2157              		.loc 1 947 3 view .LVU645
 2158              		.loc 1 947 20 is_stmt 0 view .LVU646
 2159 0012 0221     		movs	r1, #2
 2160 0014 FFF7FEFF 		bl	ADC_ConversionStop
 2161              	.LVL173:
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* and if no conversion on the other group (regular group) is intended to   */
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* continue.                                                                */
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2162              		.loc 1 952 3 is_stmt 1 view .LVU647
 2163              		.loc 1 952 6 is_stmt 0 view .LVU648
 2164 0018 68B9     		cbnz	r0, .L171
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for injected channels */
ARM GAS  /tmp/cc2hwav8.s 			page 186


 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_FLAG_JQOVF));
 2165              		.loc 1 955 5 is_stmt 1 view .LVU649
 2166 001a 2268     		ldr	r2, [r4]
 2167 001c 5368     		ldr	r3, [r2, #4]
 2168 001e 23F48C63 		bic	r3, r3, #1120
 2169 0022 5360     		str	r3, [r2, #4]
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 2170              		.loc 1 957 5 view .LVU650
 2171              		.loc 1 957 9 is_stmt 0 view .LVU651
 2172 0024 2368     		ldr	r3, [r4]
 2173              	.LVL174:
 2174              	.LBB365:
 2175              	.LBI365:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2176              		.loc 2 7052 26 is_stmt 1 view .LVU652
 2177              	.LBB366:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2178              		.loc 2 7054 3 view .LVU653
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2179              		.loc 2 7054 12 is_stmt 0 view .LVU654
 2180 0026 9B68     		ldr	r3, [r3, #8]
 2181              	.LVL175:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2182              		.loc 2 7054 74 view .LVU655
 2183 0028 13F0040F 		tst	r3, #4
 2184 002c 07D0     		beq	.L172
 2185              	.LVL176:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2186              		.loc 2 7054 74 view .LVU656
 2187              	.LBE366:
 2188              	.LBE365:
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state */
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 2189              		.loc 1 976 7 is_stmt 1 view .LVU657
 2190 002e 636D     		ldr	r3, [r4, #84]
 2191 0030 23F48053 		bic	r3, r3, #4096
 2192 0034 6365     		str	r3, [r4, #84]
 2193              	.L171:
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/cc2hwav8.s 			page 187


 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2194              		.loc 1 981 3 view .LVU658
 2195              		.loc 1 981 3 view .LVU659
 2196 0036 0023     		movs	r3, #0
 2197 0038 84F85030 		strb	r3, [r4, #80]
 2198              		.loc 1 981 3 view .LVU660
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 2199              		.loc 1 984 3 view .LVU661
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2200              		.loc 1 985 1 is_stmt 0 view .LVU662
 2201 003c 10BD     		pop	{r4, pc}
 2202              	.LVL177:
 2203              	.L172:
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2204              		.loc 1 960 7 is_stmt 1 view .LVU663
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2205              		.loc 1 960 24 is_stmt 0 view .LVU664
 2206 003e 2046     		mov	r0, r4
 2207              	.LVL178:
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2208              		.loc 1 960 24 view .LVU665
 2209 0040 FFF7FEFF 		bl	ADC_Disable
 2210              	.LVL179:
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2211              		.loc 1 963 7 is_stmt 1 view .LVU666
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2212              		.loc 1 963 10 is_stmt 0 view .LVU667
 2213 0044 0028     		cmp	r0, #0
 2214 0046 F6D1     		bne	.L171
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2215              		.loc 1 966 9 is_stmt 1 view .LVU668
 2216 0048 626D     		ldr	r2, [r4, #84]
 2217 004a 044B     		ldr	r3, .L178
 2218 004c 1340     		ands	r3, r3, r2
 2219 004e 43F00103 		orr	r3, r3, #1
 2220 0052 6365     		str	r3, [r4, #84]
 2221 0054 EFE7     		b	.L171
 2222              	.LVL180:
 2223              	.L173:
 2224              	.LCFI21:
 2225              		.cfi_def_cfa_offset 0
 2226              		.cfi_restore 4
 2227              		.cfi_restore 14
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2228              		.loc 1 944 3 is_stmt 0 discriminator 1 view .LVU669
 2229 0056 0220     		movs	r0, #2
 2230              	.LVL181:
 2231              		.loc 1 985 1 view .LVU670
 2232 0058 7047     		bx	lr
 2233              	.L179:
 2234 005a 00BF     		.align	2
 2235              	.L178:
ARM GAS  /tmp/cc2hwav8.s 			page 188


 2236 005c FEEEFFFF 		.word	-4354
 2237              		.cfi_endproc
 2238              	.LFE345:
 2240              		.section	.text.HAL_ADCEx_MultiModeStart_DMA,"ax",%progbits
 2241              		.align	1
 2242              		.global	HAL_ADCEx_MultiModeStart_DMA
 2243              		.syntax unified
 2244              		.thumb
 2245              		.thumb_func
 2247              	HAL_ADCEx_MultiModeStart_DMA:
 2248              	.LVL182:
 2249              	.LFB346:
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC, start MultiMode conversion and transfer regular results through DMA.
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Multimode must have been previously configured using
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          overrun, DMA half transfer, DMA transfer complete.
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   State field of Slave ADC handle is not updated in this configuration:
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          user should not rely on it for information related to Slave regular
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversions.
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param pData Destination Buffer address.
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param Length Length of data to be transferred from ADC peripheral to memory (in bytes).
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t L
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2250              		.loc 1 1003 1 is_stmt 1 view -0
 2251              		.cfi_startproc
 2252              		@ args = 0, pretend = 0, frame = 104
 2253              		@ frame_needed = 0, uses_anonymous_args = 0
 2254              		.loc 1 1003 1 is_stmt 0 view .LVU672
 2255 0000 70B5     		push	{r4, r5, r6, lr}
 2256              	.LCFI22:
 2257              		.cfi_def_cfa_offset 16
 2258              		.cfi_offset 4, -16
 2259              		.cfi_offset 5, -12
 2260              		.cfi_offset 6, -8
 2261              		.cfi_offset 14, -4
 2262 0002 9AB0     		sub	sp, sp, #104
 2263              	.LCFI23:
 2264              		.cfi_def_cfa_offset 120
 2265 0004 0446     		mov	r4, r0
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2266              		.loc 1 1004 3 is_stmt 1 view .LVU673
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 2267              		.loc 1 1005 3 view .LVU674
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2268              		.loc 1 1006 3 view .LVU675
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 2269              		.loc 1 1009 3 view .LVU676
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
ARM GAS  /tmp/cc2hwav8.s 			page 189


 2270              		.loc 1 1010 3 view .LVU677
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 2271              		.loc 1 1011 3 view .LVU678
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 2272              		.loc 1 1013 3 view .LVU679
 2273              		.loc 1 1013 7 is_stmt 0 view .LVU680
 2274 0006 0068     		ldr	r0, [r0]
 2275              	.LVL183:
 2276              	.LBB367:
 2277              	.LBI367:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2278              		.loc 2 7052 26 is_stmt 1 view .LVU681
 2279              	.LBB368:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2280              		.loc 2 7054 3 view .LVU682
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2281              		.loc 2 7054 12 is_stmt 0 view .LVU683
 2282 0008 8068     		ldr	r0, [r0, #8]
 2283              	.LVL184:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2284              		.loc 2 7054 74 view .LVU684
 2285 000a 10F0040F 		tst	r0, #4
 2286 000e 57D1     		bne	.L187
 2287 0010 0E46     		mov	r6, r1
 2288 0012 1546     		mov	r5, r2
 2289              	.LVL185:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2290              		.loc 2 7054 74 view .LVU685
 2291              	.LBE368:
 2292              	.LBE367:
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_BUSY;
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process locked */
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 2293              		.loc 1 1020 5 is_stmt 1 view .LVU686
 2294              		.loc 1 1020 5 view .LVU687
 2295 0014 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 2296 0018 012B     		cmp	r3, #1
 2297 001a 54D0     		beq	.L188
 2298              		.loc 1 1020 5 discriminator 2 view .LVU688
 2299 001c 0123     		movs	r3, #1
 2300 001e 84F85030 		strb	r3, [r4, #80]
 2301              		.loc 1 1020 5 discriminator 2 view .LVU689
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.State = HAL_ADC_STATE_RESET;
 2302              		.loc 1 1022 5 view .LVU690
 2303              		.loc 1 1022 24 is_stmt 0 view .LVU691
 2304 0022 0023     		movs	r3, #0
 2305 0024 1693     		str	r3, [sp, #88]
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 2306              		.loc 1 1023 5 is_stmt 1 view .LVU692
 2307              		.loc 1 1023 28 is_stmt 0 view .LVU693
 2308 0026 1793     		str	r3, [sp, #92]
ARM GAS  /tmp/cc2hwav8.s 			page 190


1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 2309              		.loc 1 1025 5 is_stmt 1 view .LVU694
 2310 0028 2268     		ldr	r2, [r4]
 2311              	.LVL186:
 2312              		.loc 1 1025 5 is_stmt 0 view .LVU695
 2313 002a 284B     		ldr	r3, .L193
 2314 002c 9A42     		cmp	r2, r3
 2315 002e 0BD0     		beq	.L190
 2316              		.loc 1 1025 5 discriminator 2 view .LVU696
 2317 0030 0023     		movs	r3, #0
 2318 0032 0193     		str	r3, [sp, #4]
 2319              	.L183:
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 2320              		.loc 1 1027 5 is_stmt 1 view .LVU697
 2321              		.loc 1 1027 21 is_stmt 0 view .LVU698
 2322 0034 019B     		ldr	r3, [sp, #4]
 2323              		.loc 1 1027 8 view .LVU699
 2324 0036 5BB1     		cbz	r3, .L191
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state */
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable the ADC peripherals: master and slave (in case if not already   */
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* enabled previously)                                                    */
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 2325              		.loc 1 1040 5 is_stmt 1 view .LVU700
 2326              		.loc 1 1040 22 is_stmt 0 view .LVU701
 2327 0038 2046     		mov	r0, r4
 2328 003a FFF7FEFF 		bl	ADC_Enable
 2329              	.LVL187:
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 2330              		.loc 1 1041 5 is_stmt 1 view .LVU702
 2331              		.loc 1 1041 8 is_stmt 0 view .LVU703
 2332 003e 80B1     		cbz	r0, .L192
 2333              	.L185:
 2334              	.LVL188:
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(&tmphadcSlave);
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start multimode conversion of ADCs pair */
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state */
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         (HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC error code to none */
ARM GAS  /tmp/cc2hwav8.s 			page 191


1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set the DMA transfer complete callback */
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set the DMA half transfer complete callback */
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set the DMA error callback */
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Pointer to the common control register  */
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* start (in case of SW start):                                           */
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Start the DMA channel */
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&tmpADC_Common->CDR, (uint32_t)
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                    */
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* trigger event.                                                         */
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Start ADC group regular conversion */
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 2335              		.loc 1 1097 7 is_stmt 1 view .LVU704
 2336              		.loc 1 1097 7 view .LVU705
 2337 0040 0023     		movs	r3, #0
 2338 0042 84F85030 		strb	r3, [r4, #80]
 2339              	.LVL189:
 2340              		.loc 1 1097 7 discriminator 1 view .LVU706
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Return function status */
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return tmp_hal_status;
 2341              		.loc 1 1101 5 view .LVU707
 2342              		.loc 1 1101 12 is_stmt 0 view .LVU708
 2343 0046 3CE0     		b	.L181
 2344              	.LVL190:
ARM GAS  /tmp/cc2hwav8.s 			page 192


 2345              	.L190:
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2346              		.loc 1 1025 5 discriminator 1 view .LVU709
 2347 0048 03F58073 		add	r3, r3, #256
 2348 004c 0193     		str	r3, [sp, #4]
 2349 004e F1E7     		b	.L183
 2350              	.L191:
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2351              		.loc 1 1030 7 is_stmt 1 view .LVU710
 2352 0050 636D     		ldr	r3, [r4, #84]
 2353 0052 43F02003 		orr	r3, r3, #32
 2354 0056 6365     		str	r3, [r4, #84]
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2355              		.loc 1 1033 7 view .LVU711
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2356              		.loc 1 1033 7 view .LVU712
 2357 0058 0023     		movs	r3, #0
 2358 005a 84F85030 		strb	r3, [r4, #80]
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2359              		.loc 1 1033 7 view .LVU713
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2360              		.loc 1 1035 7 view .LVU714
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2361              		.loc 1 1035 14 is_stmt 0 view .LVU715
 2362 005e 0120     		movs	r0, #1
 2363 0060 2FE0     		b	.L181
 2364              	.LVL191:
 2365              	.L192:
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2366              		.loc 1 1043 7 is_stmt 1 view .LVU716
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2367              		.loc 1 1043 24 is_stmt 0 view .LVU717
 2368 0062 01A8     		add	r0, sp, #4
 2369              	.LVL192:
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2370              		.loc 1 1043 24 view .LVU718
 2371 0064 FFF7FEFF 		bl	ADC_Enable
 2372              	.LVL193:
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 2373              		.loc 1 1047 5 is_stmt 1 view .LVU719
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 2374              		.loc 1 1047 8 is_stmt 0 view .LVU720
 2375 0068 0028     		cmp	r0, #0
 2376 006a E9D1     		bne	.L185
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         (HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_
 2377              		.loc 1 1050 7 is_stmt 1 view .LVU721
 2378 006c 626D     		ldr	r2, [r4, #84]
 2379 006e A0F60273 		subw	r3, r0, #3842
 2380 0072 1340     		ands	r3, r3, r2
 2381 0074 43F48073 		orr	r3, r3, #256
 2382 0078 6365     		str	r3, [r4, #84]
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2383              		.loc 1 1055 7 view .LVU722
 2384 007a 0023     		movs	r3, #0
 2385 007c A365     		str	r3, [r4, #88]
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2386              		.loc 1 1058 7 view .LVU723
ARM GAS  /tmp/cc2hwav8.s 			page 193


1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2387              		.loc 1 1058 11 is_stmt 0 view .LVU724
 2388 007e E26C     		ldr	r2, [r4, #76]
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2389              		.loc 1 1058 42 view .LVU725
 2390 0080 1349     		ldr	r1, .L193+4
 2391 0082 D163     		str	r1, [r2, #60]
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2392              		.loc 1 1061 7 is_stmt 1 view .LVU726
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2393              		.loc 1 1061 11 is_stmt 0 view .LVU727
 2394 0084 E26C     		ldr	r2, [r4, #76]
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2395              		.loc 1 1061 46 view .LVU728
 2396 0086 1349     		ldr	r1, .L193+8
 2397 0088 1164     		str	r1, [r2, #64]
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2398              		.loc 1 1064 7 is_stmt 1 view .LVU729
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2399              		.loc 1 1064 11 is_stmt 0 view .LVU730
 2400 008a E26C     		ldr	r2, [r4, #76]
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2401              		.loc 1 1064 43 view .LVU731
 2402 008c 1249     		ldr	r1, .L193+12
 2403 008e D164     		str	r1, [r2, #76]
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2404              		.loc 1 1067 7 is_stmt 1 view .LVU732
 2405              	.LVL194:
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2406              		.loc 1 1074 7 view .LVU733
 2407 0090 2268     		ldr	r2, [r4]
 2408 0092 1C21     		movs	r1, #28
 2409 0094 1160     		str	r1, [r2]
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2410              		.loc 1 1079 7 view .LVU734
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2411              		.loc 1 1079 7 view .LVU735
 2412 0096 84F85030 		strb	r3, [r4, #80]
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2413              		.loc 1 1079 7 view .LVU736
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2414              		.loc 1 1082 7 view .LVU737
 2415 009a 2268     		ldr	r2, [r4]
 2416 009c 5368     		ldr	r3, [r2, #4]
 2417 009e 43F01003 		orr	r3, r3, #16
 2418 00a2 5360     		str	r3, [r2, #4]
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2419              		.loc 1 1085 7 view .LVU738
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2420              		.loc 1 1085 24 is_stmt 0 view .LVU739
 2421 00a4 2B46     		mov	r3, r5
 2422 00a6 3246     		mov	r2, r6
 2423 00a8 0C49     		ldr	r1, .L193+16
 2424 00aa E06C     		ldr	r0, [r4, #76]
 2425              	.LVL195:
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2426              		.loc 1 1085 24 view .LVU740
ARM GAS  /tmp/cc2hwav8.s 			page 194


 2427 00ac FFF7FEFF 		bl	HAL_DMA_Start_IT
 2428              	.LVL196:
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2429              		.loc 1 1092 7 is_stmt 1 view .LVU741
 2430 00b0 2268     		ldr	r2, [r4]
 2431              	.LVL197:
 2432              	.LBB369:
 2433              	.LBI369:
7016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2434              		.loc 2 7016 22 view .LVU742
 2435              	.LBB370:
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2436              		.loc 2 7021 3 view .LVU743
 2437 00b2 9168     		ldr	r1, [r2, #8]
 2438 00b4 0A4B     		ldr	r3, .L193+20
 2439 00b6 0B40     		ands	r3, r3, r1
 2440 00b8 43F00403 		orr	r3, r3, #4
 2441 00bc 9360     		str	r3, [r2, #8]
 2442              	.LVL198:
7024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2443              		.loc 2 7024 1 is_stmt 0 view .LVU744
 2444 00be 00E0     		b	.L181
 2445              	.LVL199:
 2446              	.L187:
7024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2447              		.loc 2 7024 1 view .LVU745
 2448              	.LBE370:
 2449              	.LBE369:
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 2450              		.loc 1 1015 12 view .LVU746
 2451 00c0 0220     		movs	r0, #2
 2452              	.LVL200:
 2453              	.L181:
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2454              		.loc 1 1103 1 view .LVU747
 2455 00c2 1AB0     		add	sp, sp, #104
 2456              	.LCFI24:
 2457              		.cfi_remember_state
 2458              		.cfi_def_cfa_offset 16
 2459              		@ sp needed
 2460 00c4 70BD     		pop	{r4, r5, r6, pc}
 2461              	.LVL201:
 2462              	.L188:
 2463              	.LCFI25:
 2464              		.cfi_restore_state
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2465              		.loc 1 1020 5 discriminator 1 view .LVU748
 2466 00c6 0220     		movs	r0, #2
 2467 00c8 FBE7     		b	.L181
 2468              	.L194:
 2469 00ca 00BF     		.align	2
 2470              	.L193:
 2471 00cc 00200240 		.word	1073881088
 2472 00d0 00000000 		.word	ADC_DMAConvCplt
 2473 00d4 00000000 		.word	ADC_DMAHalfConvCplt
 2474 00d8 00000000 		.word	ADC_DMAError
ARM GAS  /tmp/cc2hwav8.s 			page 195


 2475 00dc 0C230240 		.word	1073881868
 2476 00e0 C0FFFF7F 		.word	2147483584
 2477              		.cfi_endproc
 2478              	.LFE346:
 2480              		.section	.text.HAL_ADCEx_MultiModeStop_DMA,"ax",%progbits
 2481              		.align	1
 2482              		.global	HAL_ADCEx_MultiModeStop_DMA
 2483              		.syntax unified
 2484              		.thumb
 2485              		.thumb_func
 2487              	HAL_ADCEx_MultiModeStop_DMA:
 2488              	.LVL202:
 2489              	.LFB347:
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop multimode ADC conversion, disable ADC DMA transfer, disable ADC peripheral.
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. MultiMode DMA bits
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA() must be called after this function with handle of
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef *hadc)
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2490              		.loc 1 1119 1 is_stmt 1 view -0
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 104
 2493              		@ frame_needed = 0, uses_anonymous_args = 0
 2494              		.loc 1 1119 1 is_stmt 0 view .LVU750
 2495 0000 30B5     		push	{r4, r5, lr}
 2496              	.LCFI26:
 2497              		.cfi_def_cfa_offset 12
 2498              		.cfi_offset 4, -12
 2499              		.cfi_offset 5, -8
 2500              		.cfi_offset 14, -4
 2501 0002 9BB0     		sub	sp, sp, #108
 2502              	.LCFI27:
 2503              		.cfi_def_cfa_offset 120
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2504              		.loc 1 1120 3 is_stmt 1 view .LVU751
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tickstart;
 2505              		.loc 1 1121 3 view .LVU752
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 2506              		.loc 1 1122 3 view .LVU753
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
 2507              		.loc 1 1123 3 view .LVU754
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmphadcSlave_disable_status;
 2508              		.loc 1 1124 3 view .LVU755
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 2509              		.loc 1 1127 3 view .LVU756
ARM GAS  /tmp/cc2hwav8.s 			page 196


1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2510              		.loc 1 1130 3 view .LVU757
 2511              		.loc 1 1130 3 view .LVU758
 2512 0004 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2513 0008 012B     		cmp	r3, #1
 2514 000a 7ED0     		beq	.L213
 2515 000c 0446     		mov	r4, r0
 2516              		.loc 1 1130 3 discriminator 2 view .LVU759
 2517 000e 0123     		movs	r3, #1
 2518 0010 80F85030 		strb	r3, [r0, #80]
 2519              		.loc 1 1130 3 discriminator 2 view .LVU760
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular and injected groups */
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 2520              		.loc 1 1134 3 view .LVU761
 2521              		.loc 1 1134 20 is_stmt 0 view .LVU762
 2522 0014 0321     		movs	r1, #3
 2523 0016 FFF7FEFF 		bl	ADC_ConversionStop
 2524              	.LVL203:
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2525              		.loc 1 1137 3 is_stmt 1 view .LVU763
 2526              		.loc 1 1137 6 is_stmt 0 view .LVU764
 2527 001a 0546     		mov	r5, r0
 2528 001c 0028     		cmp	r0, #0
 2529 001e 62D1     		bne	.L197
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.State = HAL_ADC_STATE_RESET;
 2530              		.loc 1 1139 5 is_stmt 1 view .LVU765
 2531              		.loc 1 1139 24 is_stmt 0 view .LVU766
 2532 0020 0023     		movs	r3, #0
 2533 0022 1693     		str	r3, [sp, #88]
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 2534              		.loc 1 1140 5 is_stmt 1 view .LVU767
 2535              		.loc 1 1140 28 is_stmt 0 view .LVU768
 2536 0024 1793     		str	r3, [sp, #92]
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 2537              		.loc 1 1143 5 is_stmt 1 view .LVU769
 2538 0026 2268     		ldr	r2, [r4]
 2539 0028 394B     		ldr	r3, .L219
 2540 002a 9A42     		cmp	r2, r3
 2541 002c 0DD0     		beq	.L215
 2542              		.loc 1 1143 5 is_stmt 0 discriminator 2 view .LVU770
 2543 002e 0023     		movs	r3, #0
 2544 0030 0193     		str	r3, [sp, #4]
 2545              	.L199:
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 2546              		.loc 1 1145 5 is_stmt 1 view .LVU771
 2547              		.loc 1 1145 21 is_stmt 0 view .LVU772
 2548 0032 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/cc2hwav8.s 			page 197


 2549              		.loc 1 1145 8 view .LVU773
 2550 0034 6BB1     		cbz	r3, .L216
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 2551              		.loc 1 1160 5 is_stmt 1 view .LVU774
 2552              		.loc 1 1160 17 is_stmt 0 view .LVU775
 2553 0036 FFF7FEFF 		bl	HAL_GetTick
 2554              	.LVL204:
 2555              		.loc 1 1160 17 view .LVU776
 2556 003a 0546     		mov	r5, r0
 2557              	.LVL205:
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 2558              		.loc 1 1162 5 is_stmt 1 view .LVU777
 2559              		.loc 1 1162 40 is_stmt 0 view .LVU778
 2560 003c 019B     		ldr	r3, [sp, #4]
 2561              	.LVL206:
 2562              	.LBB371:
 2563              	.LBI371:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2564              		.loc 2 7052 26 is_stmt 1 view .LVU779
 2565              	.LBB372:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2566              		.loc 2 7054 3 view .LVU780
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2567              		.loc 2 7054 12 is_stmt 0 view .LVU781
 2568 003e 9B68     		ldr	r3, [r3, #8]
 2569              	.LVL207:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2570              		.loc 2 7054 74 view .LVU782
 2571 0040 13F00403 		ands	r3, r3, #4
 2572 0044 13D0     		beq	.L208
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2573              		.loc 2 7054 74 discriminator 1 view .LVU783
 2574 0046 0123     		movs	r3, #1
 2575 0048 11E0     		b	.L208
 2576              	.LVL208:
 2577              	.L215:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2578              		.loc 2 7054 74 discriminator 1 view .LVU784
 2579              	.LBE372:
 2580              	.LBE371:
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2581              		.loc 1 1143 5 discriminator 1 view .LVU785
ARM GAS  /tmp/cc2hwav8.s 			page 198


 2582 004a 03F58073 		add	r3, r3, #256
 2583 004e 0193     		str	r3, [sp, #4]
 2584 0050 EFE7     		b	.L199
 2585              	.L216:
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2586              		.loc 1 1148 7 is_stmt 1 view .LVU786
 2587 0052 636D     		ldr	r3, [r4, #84]
 2588 0054 43F02003 		orr	r3, r3, #32
 2589 0058 6365     		str	r3, [r4, #84]
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2590              		.loc 1 1151 7 view .LVU787
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2591              		.loc 1 1151 7 view .LVU788
 2592 005a 0023     		movs	r3, #0
 2593 005c 84F85030 		strb	r3, [r4, #80]
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2594              		.loc 1 1151 7 view .LVU789
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2595              		.loc 1 1153 7 view .LVU790
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2596              		.loc 1 1153 14 is_stmt 0 view .LVU791
 2597 0060 0125     		movs	r5, #1
 2598 0062 43E0     		b	.L196
 2599              	.LVL209:
 2600              	.L203:
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Process unlocked */
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           return HAL_ERROR;
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 2601              		.loc 1 1186 7 is_stmt 1 view .LVU792
 2602              		.loc 1 1186 42 is_stmt 0 view .LVU793
 2603 0064 019B     		ldr	r3, [sp, #4]
 2604              	.LVL210:
 2605              	.LBB373:
 2606              	.LBI373:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2607              		.loc 2 7052 26 is_stmt 1 view .LVU794
ARM GAS  /tmp/cc2hwav8.s 			page 199


 2608              	.LBB374:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2609              		.loc 2 7054 3 view .LVU795
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2610              		.loc 2 7054 12 is_stmt 0 view .LVU796
 2611 0066 9B68     		ldr	r3, [r3, #8]
 2612              	.LVL211:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2613              		.loc 2 7054 74 view .LVU797
 2614 0068 13F00403 		ands	r3, r3, #4
 2615 006c 21D1     		bne	.L206
 2616              	.LVL212:
 2617              	.L208:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2618              		.loc 2 7054 74 view .LVU798
 2619              	.LBE374:
 2620              	.LBE373:
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
 2621              		.loc 1 1164 12 is_stmt 1 view .LVU799
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 2622              		.loc 1 1163 13 is_stmt 0 view .LVU800
 2623 006e 2268     		ldr	r2, [r4]
 2624              	.LVL213:
 2625              	.LBB376:
 2626              	.LBI376:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2627              		.loc 2 7052 26 is_stmt 1 view .LVU801
 2628              	.LBB377:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2629              		.loc 2 7054 3 view .LVU802
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2630              		.loc 2 7054 12 is_stmt 0 view .LVU803
 2631 0070 9268     		ldr	r2, [r2, #8]
 2632              	.LVL214:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2633              		.loc 2 7054 74 view .LVU804
 2634 0072 12F0040F 		tst	r2, #4
 2635 0076 01D1     		bne	.L209
 2636              	.LVL215:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2637              		.loc 2 7054 74 view .LVU805
 2638              	.LBE377:
 2639              	.LBE376:
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
 2640              		.loc 1 1164 12 discriminator 1 view .LVU806
 2641 0078 012B     		cmp	r3, #1
 2642 007a 1CD1     		bne	.L217
 2643              	.L209:
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2644              		.loc 1 1167 7 is_stmt 1 view .LVU807
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2645              		.loc 1 1167 12 is_stmt 0 view .LVU808
 2646 007c FFF7FEFF 		bl	HAL_GetTick
 2647              	.LVL216:
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2648              		.loc 1 1167 26 discriminator 1 view .LVU809
 2649 0080 431B     		subs	r3, r0, r5
ARM GAS  /tmp/cc2hwav8.s 			page 200


1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2650              		.loc 1 1167 10 discriminator 1 view .LVU810
 2651 0082 052B     		cmp	r3, #5
 2652 0084 EED9     		bls	.L203
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2653              		.loc 1 1170 9 is_stmt 1 view .LVU811
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2654              		.loc 1 1170 44 is_stmt 0 view .LVU812
 2655 0086 019B     		ldr	r3, [sp, #4]
 2656              	.LVL217:
 2657              	.LBB378:
 2658              	.LBI378:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2659              		.loc 2 7052 26 is_stmt 1 view .LVU813
 2660              	.LBB379:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2661              		.loc 2 7054 3 view .LVU814
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2662              		.loc 2 7054 12 is_stmt 0 view .LVU815
 2663 0088 9B68     		ldr	r3, [r3, #8]
 2664              	.LVL218:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2665              		.loc 2 7054 74 view .LVU816
 2666 008a 13F00403 		ands	r3, r3, #4
 2667 008e 00D0     		beq	.L204
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2668              		.loc 2 7054 74 discriminator 1 view .LVU817
 2669 0090 0123     		movs	r3, #1
 2670              	.L204:
 2671              	.LVL219:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2672              		.loc 2 7054 74 discriminator 1 view .LVU818
 2673              	.LBE379:
 2674              	.LBE378:
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 2675              		.loc 1 1172 9 is_stmt 1 view .LVU819
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 2676              		.loc 1 1172 13 is_stmt 0 view .LVU820
 2677 0092 2268     		ldr	r2, [r4]
 2678              	.LVL220:
 2679              	.LBB380:
 2680              	.LBI380:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2681              		.loc 2 7052 26 is_stmt 1 view .LVU821
 2682              	.LBB381:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2683              		.loc 2 7054 3 view .LVU822
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2684              		.loc 2 7054 12 is_stmt 0 view .LVU823
 2685 0094 9268     		ldr	r2, [r2, #8]
 2686              	.LVL221:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2687              		.loc 2 7054 74 view .LVU824
 2688 0096 12F0040F 		tst	r2, #4
 2689 009a 01D1     		bne	.L205
 2690              	.LVL222:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 201


 2691              		.loc 2 7054 74 view .LVU825
 2692              	.LBE381:
 2693              	.LBE380:
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
 2694              		.loc 1 1173 12 view .LVU826
 2695 009c 012B     		cmp	r3, #1
 2696 009e E1D1     		bne	.L203
 2697              	.L205:
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2698              		.loc 1 1177 11 is_stmt 1 view .LVU827
 2699 00a0 636D     		ldr	r3, [r4, #84]
 2700              	.LVL223:
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2701              		.loc 1 1177 11 is_stmt 0 view .LVU828
 2702 00a2 43F01003 		orr	r3, r3, #16
 2703 00a6 6365     		str	r3, [r4, #84]
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2704              		.loc 1 1180 11 is_stmt 1 view .LVU829
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2705              		.loc 1 1180 11 view .LVU830
 2706 00a8 0023     		movs	r3, #0
 2707 00aa 84F85030 		strb	r3, [r4, #80]
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2708              		.loc 1 1180 11 view .LVU831
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 2709              		.loc 1 1182 11 view .LVU832
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 2710              		.loc 1 1182 18 is_stmt 0 view .LVU833
 2711 00ae 0125     		movs	r5, #1
 2712              	.LVL224:
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 2713              		.loc 1 1182 18 view .LVU834
 2714 00b0 1CE0     		b	.L196
 2715              	.LVL225:
 2716              	.L206:
 2717              	.LBB382:
 2718              	.LBB375:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2719              		.loc 2 7054 74 discriminator 1 view .LVU835
 2720 00b2 0123     		movs	r3, #1
 2721 00b4 DBE7     		b	.L208
 2722              	.LVL226:
 2723              	.L217:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2724              		.loc 2 7054 74 discriminator 1 view .LVU836
 2725              	.LBE375:
 2726              	.LBE382:
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*       with HAL_ADC_Stop_DMA() API.                                     */
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 2727              		.loc 1 1193 5 is_stmt 1 view .LVU837
 2728              		.loc 1 1193 22 is_stmt 0 view .LVU838
 2729 00b6 E06C     		ldr	r0, [r4, #76]
ARM GAS  /tmp/cc2hwav8.s 			page 202


 2730 00b8 FFF7FEFF 		bl	HAL_DMA_Abort
 2731              	.LVL227:
 2732              		.loc 1 1193 22 view .LVU839
 2733 00bc 0546     		mov	r5, r0
 2734              	.LVL228:
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_ERROR)
 2735              		.loc 1 1196 5 is_stmt 1 view .LVU840
 2736              		.loc 1 1196 8 is_stmt 0 view .LVU841
 2737 00be 0128     		cmp	r0, #1
 2738 00c0 17D0     		beq	.L218
 2739              	.L210:
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2740              		.loc 1 1203 5 is_stmt 1 view .LVU842
 2741 00c2 2268     		ldr	r2, [r4]
 2742 00c4 5368     		ldr	r3, [r2, #4]
 2743 00c6 23F01003 		bic	r3, r3, #16
 2744 00ca 5360     		str	r3, [r2, #4]
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 2745              		.loc 1 1208 5 view .LVU843
 2746              		.loc 1 1208 8 is_stmt 0 view .LVU844
 2747 00cc B5B9     		cbnz	r5, .L211
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmphadcSlave_disable_status = ADC_Disable(&tmphadcSlave);
 2748              		.loc 1 1210 7 is_stmt 1 view .LVU845
 2749              		.loc 1 1210 37 is_stmt 0 view .LVU846
 2750 00ce 01A8     		add	r0, sp, #4
 2751              	.LVL229:
 2752              		.loc 1 1210 37 view .LVU847
 2753 00d0 FFF7FEFF 		bl	ADC_Disable
 2754              	.LVL230:
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) == HAL_OK)           &&
 2755              		.loc 1 1211 7 is_stmt 1 view .LVU848
 2756              		.loc 1 1211 12 is_stmt 0 view .LVU849
 2757 00d4 2046     		mov	r0, r4
 2758 00d6 FFF7FEFF 		bl	ADC_Disable
 2759              	.LVL231:
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (tmphadcSlave_disable_status == HAL_OK))
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
 2760              		.loc 1 1214 9 is_stmt 1 view .LVU850
 2761              	.L212:
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/cc2hwav8.s 			page 203


1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC master and slave without status assert */
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (void) ADC_Disable(hadc);
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (void) ADC_Disable(&tmphadcSlave);
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set ADC state (ADC master) */
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 2762              		.loc 1 1225 5 view .LVU851
 2763 00da 626D     		ldr	r2, [r4, #84]
 2764 00dc 0D4B     		ldr	r3, .L219+4
 2765 00de 1340     		ands	r3, r3, r2
 2766 00e0 43F00103 		orr	r3, r3, #1
 2767 00e4 6365     		str	r3, [r4, #84]
 2768              	.LVL232:
 2769              	.L197:
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2770              		.loc 1 1231 3 view .LVU852
 2771              		.loc 1 1231 3 view .LVU853
 2772 00e6 0023     		movs	r3, #0
 2773 00e8 84F85030 		strb	r3, [r4, #80]
 2774              		.loc 1 1231 3 view .LVU854
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 2775              		.loc 1 1234 3 view .LVU855
 2776              	.LVL233:
 2777              	.L196:
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2778              		.loc 1 1235 1 is_stmt 0 view .LVU856
 2779 00ec 2846     		mov	r0, r5
 2780 00ee 1BB0     		add	sp, sp, #108
 2781              	.LCFI28:
 2782              		.cfi_remember_state
 2783              		.cfi_def_cfa_offset 12
 2784              		@ sp needed
 2785 00f0 30BD     		pop	{r4, r5, pc}
 2786              	.LVL234:
 2787              	.L218:
 2788              	.LCFI29:
 2789              		.cfi_restore_state
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2790              		.loc 1 1199 7 is_stmt 1 view .LVU857
 2791 00f2 636D     		ldr	r3, [r4, #84]
 2792 00f4 43F04003 		orr	r3, r3, #64
 2793 00f8 6365     		str	r3, [r4, #84]
 2794 00fa E2E7     		b	.L210
 2795              	.L211:
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (void) ADC_Disable(&tmphadcSlave);
 2796              		.loc 1 1220 7 view .LVU858
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (void) ADC_Disable(&tmphadcSlave);
 2797              		.loc 1 1220 14 is_stmt 0 view .LVU859
 2798 00fc 2046     		mov	r0, r4
ARM GAS  /tmp/cc2hwav8.s 			page 204


 2799              	.LVL235:
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (void) ADC_Disable(&tmphadcSlave);
 2800              		.loc 1 1220 14 view .LVU860
 2801 00fe FFF7FEFF 		bl	ADC_Disable
 2802              	.LVL236:
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2803              		.loc 1 1221 7 is_stmt 1 view .LVU861
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2804              		.loc 1 1221 14 is_stmt 0 view .LVU862
 2805 0102 01A8     		add	r0, sp, #4
 2806 0104 FFF7FEFF 		bl	ADC_Disable
 2807              	.LVL237:
 2808 0108 E7E7     		b	.L212
 2809              	.LVL238:
 2810              	.L213:
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2811              		.loc 1 1130 3 discriminator 1 view .LVU863
 2812 010a 0225     		movs	r5, #2
 2813 010c EEE7     		b	.L196
 2814              	.L220:
 2815 010e 00BF     		.align	2
 2816              	.L219:
 2817 0110 00200240 		.word	1073881088
 2818 0114 FEEEFFFF 		.word	-4354
 2819              		.cfi_endproc
 2820              	.LFE347:
 2822              		.section	.text.HAL_ADCEx_MultiModeGetValue,"ax",%progbits
 2823              		.align	1
 2824              		.global	HAL_ADCEx_MultiModeGetValue
 2825              		.syntax unified
 2826              		.thumb
 2827              		.thumb_func
 2829              	HAL_ADCEx_MultiModeGetValue:
 2830              	.LVL239:
 2831              	.LFB348:
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Return the last ADC Master and Slave regular conversions results when in multimode conf
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC Master (handle of ADC Slave must not be used)
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval The converted data values.
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef *hadc)
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2832              		.loc 1 1243 1 is_stmt 1 view -0
 2833              		.cfi_startproc
 2834              		@ args = 0, pretend = 0, frame = 0
 2835              		@ frame_needed = 0, uses_anonymous_args = 0
 2836              		@ link register save eliminated.
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   const ADC_Common_TypeDef *tmpADC_Common;
 2837              		.loc 1 1244 3 view .LVU865
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 2838              		.loc 1 1247 3 view .LVU866
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* and possible no usage in __LL_ADC_COMMON_INSTANCE() below               */
ARM GAS  /tmp/cc2hwav8.s 			page 205


1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 2839              		.loc 1 1251 3 view .LVU867
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Pointer to the common control register  */
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 2840              		.loc 1 1254 3 view .LVU868
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmpADC_Common->CDR;
 2841              		.loc 1 1257 3 view .LVU869
 2842              		.loc 1 1257 23 is_stmt 0 view .LVU870
 2843 0000 014B     		ldr	r3, .L222
 2844 0002 D868     		ldr	r0, [r3, #12]
 2845              	.LVL240:
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2846              		.loc 1 1258 1 view .LVU871
 2847 0004 7047     		bx	lr
 2848              	.L223:
 2849 0006 00BF     		.align	2
 2850              	.L222:
 2851 0008 00230240 		.word	1073881856
 2852              		.cfi_endproc
 2853              	.LFE348:
 2855              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 2856              		.align	1
 2857              		.global	HAL_ADCEx_InjectedGetValue
 2858              		.syntax unified
 2859              		.thumb
 2860              		.thumb_func
 2862              	HAL_ADCEx_InjectedGetValue:
 2863              	.LVL241:
 2864              	.LFB349:
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            to flag JEOC.
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         To clear this flag, either use function:
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion()
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param InjectedRank the converted ADC injected rank.
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_1 ADC group injected rank 1
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_2 ADC group injected rank 2
ARM GAS  /tmp/cc2hwav8.s 			page 206


1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_3 ADC group injected rank 3
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_4 ADC group injected rank 4
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef *hadc, uint32_t InjectedRank)
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2865              		.loc 1 1289 1 is_stmt 1 view -0
 2866              		.cfi_startproc
 2867              		@ args = 0, pretend = 0, frame = 0
 2868              		@ frame_needed = 0, uses_anonymous_args = 0
 2869              		@ link register save eliminated.
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_jdr;
 2870              		.loc 1 1290 3 view .LVU873
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2871              		.loc 1 1293 3 view .LVU874
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 2872              		.loc 1 1294 3 view .LVU875
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Get ADC converted value */
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   switch (InjectedRank)
 2873              		.loc 1 1297 3 view .LVU876
 2874 0000 40F21523 		movw	r3, #533
 2875 0004 9942     		cmp	r1, r3
 2876 0006 0FD0     		beq	.L225
 2877 0008 40F21B33 		movw	r3, #795
 2878 000c 9942     		cmp	r1, r3
 2879 000e 07D0     		beq	.L226
 2880 0010 40F20F13 		movw	r3, #271
 2881 0014 9942     		cmp	r1, r3
 2882 0016 0BD0     		beq	.L227
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4:
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     default:
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 2883              		.loc 1 1310 7 view .LVU877
 2884              		.loc 1 1310 21 is_stmt 0 view .LVU878
 2885 0018 0368     		ldr	r3, [r0]
 2886              		.loc 1 1310 15 view .LVU879
 2887 001a D3F88000 		ldr	r0, [r3, #128]
 2888              	.LVL242:
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2889              		.loc 1 1311 7 is_stmt 1 view .LVU880
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return ADC converted value */
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_jdr;
ARM GAS  /tmp/cc2hwav8.s 			page 207


 2890              		.loc 1 1315 3 view .LVU881
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2891              		.loc 1 1316 1 is_stmt 0 view .LVU882
 2892 001e 7047     		bx	lr
 2893              	.LVL243:
 2894              	.L226:
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2895              		.loc 1 1300 7 is_stmt 1 view .LVU883
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2896              		.loc 1 1300 21 is_stmt 0 view .LVU884
 2897 0020 0368     		ldr	r3, [r0]
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2898              		.loc 1 1300 15 view .LVU885
 2899 0022 D3F88C00 		ldr	r0, [r3, #140]
 2900              	.LVL244:
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
 2901              		.loc 1 1301 7 is_stmt 1 view .LVU886
 2902 0026 7047     		bx	lr
 2903              	.LVL245:
 2904              	.L225:
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2905              		.loc 1 1303 7 view .LVU887
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2906              		.loc 1 1303 21 is_stmt 0 view .LVU888
 2907 0028 0368     		ldr	r3, [r0]
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2908              		.loc 1 1303 15 view .LVU889
 2909 002a D3F88800 		ldr	r0, [r3, #136]
 2910              	.LVL246:
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
 2911              		.loc 1 1304 7 is_stmt 1 view .LVU890
 2912 002e 7047     		bx	lr
 2913              	.LVL247:
 2914              	.L227:
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2915              		.loc 1 1306 7 view .LVU891
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2916              		.loc 1 1306 21 is_stmt 0 view .LVU892
 2917 0030 0368     		ldr	r3, [r0]
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 2918              		.loc 1 1306 15 view .LVU893
 2919 0032 D3F88400 		ldr	r0, [r3, #132]
 2920              	.LVL248:
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 2921              		.loc 1 1307 7 is_stmt 1 view .LVU894
 2922 0036 7047     		bx	lr
 2923              		.cfi_endproc
 2924              	.LFE349:
 2926              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 2927              		.align	1
 2928              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 2929              		.syntax unified
 2930              		.thumb
 2931              		.thumb_func
 2933              	HAL_ADCEx_InjectedConvCpltCallback:
 2934              	.LVL249:
 2935              	.LFB350:
ARM GAS  /tmp/cc2hwav8.s 			page 208


1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non-blocking mode.
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2936              		.loc 1 1324 1 view -0
 2937              		.cfi_startproc
 2938              		@ args = 0, pretend = 0, frame = 0
 2939              		@ frame_needed = 0, uses_anonymous_args = 0
 2940              		@ link register save eliminated.
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 2941              		.loc 1 1326 3 view .LVU896
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedConvCpltCallback must be implemented in the user file.
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2942              		.loc 1 1331 1 is_stmt 0 view .LVU897
 2943 0000 7047     		bx	lr
 2944              		.cfi_endproc
 2945              	.LFE350:
 2947              		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 2948              		.align	1
 2949              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
 2950              		.syntax unified
 2951              		.thumb
 2952              		.thumb_func
 2954              	HAL_ADCEx_InjectedQueueOverflowCallback:
 2955              	.LVL250:
 2956              	.LFB351:
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Injected context queue overflow callback.
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             contexts).
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef *hadc)
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2957              		.loc 1 1343 1 is_stmt 1 view -0
 2958              		.cfi_startproc
 2959              		@ args = 0, pretend = 0, frame = 0
 2960              		@ frame_needed = 0, uses_anonymous_args = 0
 2961              		@ link register save eliminated.
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 2962              		.loc 1 1345 3 view .LVU899
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented in the user file.
ARM GAS  /tmp/cc2hwav8.s 			page 209


1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2963              		.loc 1 1350 1 is_stmt 0 view .LVU900
 2964 0000 7047     		bx	lr
 2965              		.cfi_endproc
 2966              	.LFE351:
 2968              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 2969              		.align	1
 2970              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 2971              		.syntax unified
 2972              		.thumb
 2973              		.thumb_func
 2975              	HAL_ADCEx_LevelOutOfWindow2Callback:
 2976              	.LVL251:
 2977              	.LFB352:
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef *hadc)
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2978              		.loc 1 1358 1 is_stmt 1 view -0
 2979              		.cfi_startproc
 2980              		@ args = 0, pretend = 0, frame = 0
 2981              		@ frame_needed = 0, uses_anonymous_args = 0
 2982              		@ link register save eliminated.
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 2983              		.loc 1 1360 3 view .LVU902
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2984              		.loc 1 1365 1 is_stmt 0 view .LVU903
 2985 0000 7047     		bx	lr
 2986              		.cfi_endproc
 2987              	.LFE352:
 2989              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 2990              		.align	1
 2991              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 2992              		.syntax unified
 2993              		.thumb
 2994              		.thumb_func
 2996              	HAL_ADCEx_LevelOutOfWindow3Callback:
 2997              	.LVL252:
 2998              	.LFB353:
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef *hadc)
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
ARM GAS  /tmp/cc2hwav8.s 			page 210


 2999              		.loc 1 1373 1 is_stmt 1 view -0
 3000              		.cfi_startproc
 3001              		@ args = 0, pretend = 0, frame = 0
 3002              		@ frame_needed = 0, uses_anonymous_args = 0
 3003              		@ link register save eliminated.
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 3004              		.loc 1 1375 3 view .LVU905
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3005              		.loc 1 1380 1 is_stmt 0 view .LVU906
 3006 0000 7047     		bx	lr
 3007              		.cfi_endproc
 3008              	.LFE353:
 3010              		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 3011              		.align	1
 3012              		.weak	HAL_ADCEx_EndOfSamplingCallback
 3013              		.syntax unified
 3014              		.thumb
 3015              		.thumb_func
 3017              	HAL_ADCEx_EndOfSamplingCallback:
 3018              	.LVL253:
 3019              	.LFB354:
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef *hadc)
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3020              		.loc 1 1389 1 is_stmt 1 view -0
 3021              		.cfi_startproc
 3022              		@ args = 0, pretend = 0, frame = 0
 3023              		@ frame_needed = 0, uses_anonymous_args = 0
 3024              		@ link register save eliminated.
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 3025              		.loc 1 1391 3 view .LVU908
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3026              		.loc 1 1396 1 is_stmt 0 view .LVU909
 3027 0000 7047     		bx	lr
 3028              		.cfi_endproc
 3029              	.LFE354:
 3031              		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 3032              		.align	1
 3033              		.global	HAL_ADCEx_RegularStop
 3034              		.syntax unified
 3035              		.thumb
ARM GAS  /tmp/cc2hwav8.s 			page 211


 3036              		.thumb_func
 3038              	HAL_ADCEx_RegularStop:
 3039              	.LVL254:
 3040              	.LFB355:
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral if no
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversion is on going on injected group.
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef *hadc)
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3041              		.loc 1 1406 1 is_stmt 1 view -0
 3042              		.cfi_startproc
 3043              		@ args = 0, pretend = 0, frame = 0
 3044              		@ frame_needed = 0, uses_anonymous_args = 0
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3045              		.loc 1 1407 3 view .LVU911
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3046              		.loc 1 1410 3 view .LVU912
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3047              		.loc 1 1413 3 view .LVU913
 3048              		.loc 1 1413 3 view .LVU914
 3049 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3050 0004 012B     		cmp	r3, #1
 3051 0006 24D0     		beq	.L240
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3052              		.loc 1 1406 1 is_stmt 0 view .LVU915
 3053 0008 10B5     		push	{r4, lr}
 3054              	.LCFI30:
 3055              		.cfi_def_cfa_offset 8
 3056              		.cfi_offset 4, -8
 3057              		.cfi_offset 14, -4
 3058 000a 0446     		mov	r4, r0
 3059              		.loc 1 1413 3 is_stmt 1 discriminator 2 view .LVU916
 3060 000c 0121     		movs	r1, #1
 3061 000e 80F85010 		strb	r1, [r0, #80]
 3062              		.loc 1 1413 3 discriminator 2 view .LVU917
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 3063              		.loc 1 1416 3 view .LVU918
 3064              		.loc 1 1416 20 is_stmt 0 view .LVU919
 3065 0012 FFF7FEFF 		bl	ADC_ConversionStop
 3066              	.LVL255:
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if regular conversions are effectively stopped
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      and if no injected conversions are on-going */
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 3067              		.loc 1 1420 3 is_stmt 1 view .LVU920
 3068              		.loc 1 1420 6 is_stmt 0 view .LVU921
ARM GAS  /tmp/cc2hwav8.s 			page 212


 3069 0016 60B9     		cbnz	r0, .L238
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 3070              		.loc 1 1423 5 is_stmt 1 view .LVU922
 3071 0018 636D     		ldr	r3, [r4, #84]
 3072 001a 23F48073 		bic	r3, r3, #256
 3073 001e 6365     		str	r3, [r4, #84]
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 3074              		.loc 1 1425 5 view .LVU923
 3075              		.loc 1 1425 9 is_stmt 0 view .LVU924
 3076 0020 2368     		ldr	r3, [r4]
 3077              	.LVL256:
 3078              	.LBB383:
 3079              	.LBI383:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3080              		.loc 2 7247 26 is_stmt 1 view .LVU925
 3081              	.LBB384:
 3082              		.loc 2 7249 3 view .LVU926
 3083              		.loc 2 7249 12 is_stmt 0 view .LVU927
 3084 0022 9B68     		ldr	r3, [r3, #8]
 3085              	.LVL257:
 3086              		.loc 2 7249 76 view .LVU928
 3087 0024 13F0080F 		tst	r3, #8
 3088 0028 07D0     		beq	.L239
 3089              	.LVL258:
 3090              		.loc 2 7249 76 view .LVU929
 3091              	.LBE384:
 3092              	.LBE383:
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 3093              		.loc 1 1443 7 is_stmt 1 view .LVU930
 3094 002a 636D     		ldr	r3, [r4, #84]
 3095 002c 43F48053 		orr	r3, r3, #4096
 3096 0030 6365     		str	r3, [r4, #84]
 3097              	.L238:
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
ARM GAS  /tmp/cc2hwav8.s 			page 213


1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3098              		.loc 1 1448 3 view .LVU931
 3099              		.loc 1 1448 3 view .LVU932
 3100 0032 0023     		movs	r3, #0
 3101 0034 84F85030 		strb	r3, [r4, #80]
 3102              		.loc 1 1448 3 view .LVU933
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 3103              		.loc 1 1451 3 view .LVU934
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3104              		.loc 1 1452 1 is_stmt 0 view .LVU935
 3105 0038 10BD     		pop	{r4, pc}
 3106              	.LVL259:
 3107              	.L239:
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3108              		.loc 1 1428 7 is_stmt 1 view .LVU936
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3109              		.loc 1 1428 24 is_stmt 0 view .LVU937
 3110 003a 2046     		mov	r0, r4
 3111              	.LVL260:
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3112              		.loc 1 1428 24 view .LVU938
 3113 003c FFF7FEFF 		bl	ADC_Disable
 3114              	.LVL261:
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3115              		.loc 1 1431 7 is_stmt 1 view .LVU939
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3116              		.loc 1 1431 10 is_stmt 0 view .LVU940
 3117 0040 0028     		cmp	r0, #0
 3118 0042 F6D1     		bne	.L238
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 3119              		.loc 1 1434 9 is_stmt 1 view .LVU941
 3120 0044 626D     		ldr	r2, [r4, #84]
 3121 0046 044B     		ldr	r3, .L245
 3122 0048 1340     		ands	r3, r3, r2
 3123 004a 43F00103 		orr	r3, r3, #1
 3124 004e 6365     		str	r3, [r4, #84]
 3125 0050 EFE7     		b	.L238
 3126              	.LVL262:
 3127              	.L240:
 3128              	.LCFI31:
 3129              		.cfi_def_cfa_offset 0
 3130              		.cfi_restore 4
 3131              		.cfi_restore 14
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3132              		.loc 1 1413 3 is_stmt 0 discriminator 1 view .LVU942
 3133 0052 0220     		movs	r0, #2
 3134              	.LVL263:
 3135              		.loc 1 1452 1 view .LVU943
 3136 0054 7047     		bx	lr
 3137              	.L246:
 3138 0056 00BF     		.align	2
 3139              	.L245:
 3140 0058 FEEFFFFF 		.word	-4098
 3141              		.cfi_endproc
 3142              	.LFE355:
ARM GAS  /tmp/cc2hwav8.s 			page 214


 3144              		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 3145              		.align	1
 3146              		.global	HAL_ADCEx_RegularStop_IT
 3147              		.syntax unified
 3148              		.thumb
 3149              		.thumb_func
 3151              	HAL_ADCEx_RegularStop_IT:
 3152              	.LVL264:
 3153              	.LFB356:
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of ADC groups regular and injected,
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         disable interrution of end-of-conversion,
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         disable ADC peripheral if no conversion is on going
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         on injected group.
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef *hadc)
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3154              		.loc 1 1464 1 is_stmt 1 view -0
 3155              		.cfi_startproc
 3156              		@ args = 0, pretend = 0, frame = 0
 3157              		@ frame_needed = 0, uses_anonymous_args = 0
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3158              		.loc 1 1465 3 view .LVU945
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3159              		.loc 1 1468 3 view .LVU946
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3160              		.loc 1 1471 3 view .LVU947
 3161              		.loc 1 1471 3 view .LVU948
 3162 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3163 0004 012B     		cmp	r3, #1
 3164 0006 29D0     		beq	.L251
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3165              		.loc 1 1464 1 is_stmt 0 view .LVU949
 3166 0008 10B5     		push	{r4, lr}
 3167              	.LCFI32:
 3168              		.cfi_def_cfa_offset 8
 3169              		.cfi_offset 4, -8
 3170              		.cfi_offset 14, -4
 3171 000a 0446     		mov	r4, r0
 3172              		.loc 1 1471 3 is_stmt 1 discriminator 2 view .LVU950
 3173 000c 0121     		movs	r1, #1
 3174 000e 80F85010 		strb	r1, [r0, #80]
 3175              		.loc 1 1471 3 discriminator 2 view .LVU951
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 3176              		.loc 1 1474 3 view .LVU952
 3177              		.loc 1 1474 20 is_stmt 0 view .LVU953
 3178 0012 FFF7FEFF 		bl	ADC_ConversionStop
ARM GAS  /tmp/cc2hwav8.s 			page 215


 3179              	.LVL265:
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     and if no injected conversion is on-going */
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 3180              		.loc 1 1478 3 is_stmt 1 view .LVU954
 3181              		.loc 1 1478 6 is_stmt 0 view .LVU955
 3182 0016 88B9     		cbnz	r0, .L249
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 3183              		.loc 1 1481 5 is_stmt 1 view .LVU956
 3184 0018 636D     		ldr	r3, [r4, #84]
 3185 001a 23F48073 		bic	r3, r3, #256
 3186 001e 6365     		str	r3, [r4, #84]
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable all regular-related interrupts */
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 3187              		.loc 1 1484 5 view .LVU957
 3188 0020 2268     		ldr	r2, [r4]
 3189 0022 5368     		ldr	r3, [r2, #4]
 3190 0024 23F01C03 		bic	r3, r3, #28
 3191 0028 5360     		str	r3, [r2, #4]
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable ADC peripheral if no injected conversions are on-going */
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 3192              		.loc 1 1487 5 view .LVU958
 3193              		.loc 1 1487 9 is_stmt 0 view .LVU959
 3194 002a 2368     		ldr	r3, [r4]
 3195              	.LVL266:
 3196              	.LBB385:
 3197              	.LBI385:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3198              		.loc 2 7247 26 is_stmt 1 view .LVU960
 3199              	.LBB386:
 3200              		.loc 2 7249 3 view .LVU961
 3201              		.loc 2 7249 12 is_stmt 0 view .LVU962
 3202 002c 9B68     		ldr	r3, [r3, #8]
 3203              	.LVL267:
 3204              		.loc 2 7249 76 view .LVU963
 3205 002e 13F0080F 		tst	r3, #8
 3206 0032 07D0     		beq	.L250
 3207              	.LVL268:
 3208              		.loc 2 7249 76 view .LVU964
 3209              	.LBE386:
 3210              	.LBE385:
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/cc2hwav8.s 			page 216


1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 3211              		.loc 1 1501 7 is_stmt 1 view .LVU965
 3212 0034 636D     		ldr	r3, [r4, #84]
 3213 0036 43F48053 		orr	r3, r3, #4096
 3214 003a 6365     		str	r3, [r4, #84]
 3215              	.L249:
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3216              		.loc 1 1506 3 view .LVU966
 3217              		.loc 1 1506 3 view .LVU967
 3218 003c 0023     		movs	r3, #0
 3219 003e 84F85030 		strb	r3, [r4, #80]
 3220              		.loc 1 1506 3 view .LVU968
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 3221              		.loc 1 1509 3 view .LVU969
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3222              		.loc 1 1510 1 is_stmt 0 view .LVU970
 3223 0042 10BD     		pop	{r4, pc}
 3224              	.LVL269:
 3225              	.L250:
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
 3226              		.loc 1 1489 7 is_stmt 1 view .LVU971
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
 3227              		.loc 1 1489 24 is_stmt 0 view .LVU972
 3228 0044 2046     		mov	r0, r4
 3229              	.LVL270:
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
 3230              		.loc 1 1489 24 view .LVU973
 3231 0046 FFF7FEFF 		bl	ADC_Disable
 3232              	.LVL271:
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3233              		.loc 1 1491 7 is_stmt 1 view .LVU974
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3234              		.loc 1 1491 10 is_stmt 0 view .LVU975
 3235 004a 0028     		cmp	r0, #0
 3236 004c F6D1     		bne	.L249
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 3237              		.loc 1 1494 9 is_stmt 1 view .LVU976
 3238 004e 626D     		ldr	r2, [r4, #84]
 3239 0050 034B     		ldr	r3, .L256
 3240 0052 1340     		ands	r3, r3, r2
 3241 0054 43F00103 		orr	r3, r3, #1
 3242 0058 6365     		str	r3, [r4, #84]
 3243 005a EFE7     		b	.L249
 3244              	.LVL272:
 3245              	.L251:
 3246              	.LCFI33:
 3247              		.cfi_def_cfa_offset 0
 3248              		.cfi_restore 4
 3249              		.cfi_restore 14
ARM GAS  /tmp/cc2hwav8.s 			page 217


1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3250              		.loc 1 1471 3 is_stmt 0 discriminator 1 view .LVU977
 3251 005c 0220     		movs	r0, #2
 3252              	.LVL273:
 3253              		.loc 1 1510 1 view .LVU978
 3254 005e 7047     		bx	lr
 3255              	.L257:
 3256              		.align	2
 3257              	.L256:
 3258 0060 FEEFFFFF 		.word	-4098
 3259              		.cfi_endproc
 3260              	.LFE356:
 3262              		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 3263              		.align	1
 3264              		.global	HAL_ADCEx_RegularStop_DMA
 3265              		.syntax unified
 3266              		.thumb
 3267              		.thumb_func
 3269              	HAL_ADCEx_RegularStop_DMA:
 3270              	.LVL274:
 3271              	.LFB357:
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC peripheral if no conversion is on going
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         on injected group.
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   HAL_ADCEx_RegularStop_DMA() function is dedicated to single-ADC mode only.
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For multimode (when multimode feature is available),
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularMultiModeStop_DMA() API must be used.
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef *hadc)
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3272              		.loc 1 1524 1 is_stmt 1 view -0
 3273              		.cfi_startproc
 3274              		@ args = 0, pretend = 0, frame = 0
 3275              		@ frame_needed = 0, uses_anonymous_args = 0
 3276              		.loc 1 1524 1 is_stmt 0 view .LVU980
 3277 0000 38B5     		push	{r3, r4, r5, lr}
 3278              	.LCFI34:
 3279              		.cfi_def_cfa_offset 16
 3280              		.cfi_offset 3, -16
 3281              		.cfi_offset 4, -12
 3282              		.cfi_offset 5, -8
 3283              		.cfi_offset 14, -4
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3284              		.loc 1 1525 3 is_stmt 1 view .LVU981
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3285              		.loc 1 1528 3 view .LVU982
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3286              		.loc 1 1531 3 view .LVU983
ARM GAS  /tmp/cc2hwav8.s 			page 218


 3287              		.loc 1 1531 3 view .LVU984
 3288 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3289 0006 012B     		cmp	r3, #1
 3290 0008 3FD0     		beq	.L265
 3291 000a 0446     		mov	r4, r0
 3292              		.loc 1 1531 3 discriminator 2 view .LVU985
 3293 000c 0121     		movs	r1, #1
 3294 000e 80F85010 		strb	r1, [r0, #80]
 3295              		.loc 1 1531 3 discriminator 2 view .LVU986
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 3296              		.loc 1 1534 3 view .LVU987
 3297              		.loc 1 1534 20 is_stmt 0 view .LVU988
 3298 0012 FFF7FEFF 		bl	ADC_ConversionStop
 3299              	.LVL275:
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      and if no injected conversion is on-going */
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 3300              		.loc 1 1538 3 is_stmt 1 view .LVU989
 3301              		.loc 1 1538 6 is_stmt 0 view .LVU990
 3302 0016 0546     		mov	r5, r0
 3303 0018 20B1     		cbz	r0, .L267
 3304              	.LVL276:
 3305              	.L260:
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_DMNGT_0 | ADC_CFGR_DMNGT_1, 0UL);
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* to keep in memory a potential failing status.                          */
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
ARM GAS  /tmp/cc2hwav8.s 			page 219


1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         (void)ADC_Disable(hadc);
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3306              		.loc 1 1590 3 is_stmt 1 view .LVU991
 3307              		.loc 1 1590 3 view .LVU992
 3308 001a 0023     		movs	r3, #0
 3309 001c 84F85030 		strb	r3, [r4, #80]
 3310              		.loc 1 1590 3 view .LVU993
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 3311              		.loc 1 1593 3 view .LVU994
 3312              	.LVL277:
 3313              	.L259:
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3314              		.loc 1 1594 1 is_stmt 0 view .LVU995
 3315 0020 2846     		mov	r0, r5
 3316 0022 38BD     		pop	{r3, r4, r5, pc}
 3317              	.LVL278:
 3318              	.L267:
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3319              		.loc 1 1541 5 is_stmt 1 view .LVU996
 3320 0024 636D     		ldr	r3, [r4, #84]
 3321 0026 23F48073 		bic	r3, r3, #256
 3322 002a 6365     		str	r3, [r4, #84]
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3323              		.loc 1 1544 5 view .LVU997
 3324 002c 2268     		ldr	r2, [r4]
 3325 002e D368     		ldr	r3, [r2, #12]
 3326 0030 23F00303 		bic	r3, r3, #3
 3327 0034 D360     		str	r3, [r2, #12]
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3328              		.loc 1 1548 5 view .LVU998
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3329              		.loc 1 1548 22 is_stmt 0 view .LVU999
 3330 0036 E06C     		ldr	r0, [r4, #76]
 3331              	.LVL279:
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3332              		.loc 1 1548 22 view .LVU1000
ARM GAS  /tmp/cc2hwav8.s 			page 220


 3333 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 3334              	.LVL280:
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3335              		.loc 1 1551 5 is_stmt 1 view .LVU1001
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3336              		.loc 1 1551 8 is_stmt 0 view .LVU1002
 3337 003c 0546     		mov	r5, r0
 3338 003e 18B1     		cbz	r0, .L261
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 3339              		.loc 1 1554 7 is_stmt 1 view .LVU1003
 3340 0040 636D     		ldr	r3, [r4, #84]
 3341 0042 43F04003 		orr	r3, r3, #64
 3342 0046 6365     		str	r3, [r4, #84]
 3343              	.L261:
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3344              		.loc 1 1558 5 view .LVU1004
 3345 0048 2268     		ldr	r2, [r4]
 3346 004a 5368     		ldr	r3, [r2, #4]
 3347 004c 23F01003 		bic	r3, r3, #16
 3348 0050 5360     		str	r3, [r2, #4]
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3349              		.loc 1 1563 5 view .LVU1005
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3350              		.loc 1 1563 9 is_stmt 0 view .LVU1006
 3351 0052 2368     		ldr	r3, [r4]
 3352              	.LVL281:
 3353              	.LBB387:
 3354              	.LBI387:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3355              		.loc 2 7247 26 is_stmt 1 view .LVU1007
 3356              	.LBB388:
 3357              		.loc 2 7249 3 view .LVU1008
 3358              		.loc 2 7249 12 is_stmt 0 view .LVU1009
 3359 0054 9B68     		ldr	r3, [r3, #8]
 3360              	.LVL282:
 3361              		.loc 2 7249 76 view .LVU1010
 3362 0056 13F0080F 		tst	r3, #8
 3363 005a 04D0     		beq	.L262
 3364              	.LVL283:
 3365              		.loc 2 7249 76 view .LVU1011
 3366              	.LBE388:
 3367              	.LBE387:
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 3368              		.loc 1 1585 7 is_stmt 1 view .LVU1012
 3369 005c 636D     		ldr	r3, [r4, #84]
 3370 005e 43F48053 		orr	r3, r3, #4096
 3371 0062 6365     		str	r3, [r4, #84]
 3372 0064 D9E7     		b	.L260
 3373              	.LVL284:
 3374              	.L262:
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3375              		.loc 1 1565 7 view .LVU1013
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3376              		.loc 1 1565 10 is_stmt 0 view .LVU1014
 3377 0066 65B9     		cbnz	r5, .L263
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3378              		.loc 1 1567 9 is_stmt 1 view .LVU1015
ARM GAS  /tmp/cc2hwav8.s 			page 221


1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3379              		.loc 1 1567 26 is_stmt 0 view .LVU1016
 3380 0068 2046     		mov	r0, r4
 3381              	.LVL285:
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3382              		.loc 1 1567 26 view .LVU1017
 3383 006a FFF7FEFF 		bl	ADC_Disable
 3384              	.LVL286:
 3385 006e 0546     		mov	r5, r0
 3386              	.LVL287:
 3387              	.L264:
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3388              		.loc 1 1575 7 is_stmt 1 view .LVU1018
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3389              		.loc 1 1575 10 is_stmt 0 view .LVU1019
 3390 0070 002D     		cmp	r5, #0
 3391 0072 D2D1     		bne	.L260
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 3392              		.loc 1 1578 9 is_stmt 1 view .LVU1020
 3393 0074 626D     		ldr	r2, [r4, #84]
 3394 0076 064B     		ldr	r3, .L268
 3395 0078 1340     		ands	r3, r3, r2
 3396 007a 43F00103 		orr	r3, r3, #1
 3397 007e 6365     		str	r3, [r4, #84]
 3398 0080 CBE7     		b	.L260
 3399              	.LVL288:
 3400              	.L263:
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3401              		.loc 1 1571 9 view .LVU1021
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3402              		.loc 1 1571 15 is_stmt 0 view .LVU1022
 3403 0082 2046     		mov	r0, r4
 3404              	.LVL289:
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3405              		.loc 1 1571 15 view .LVU1023
 3406 0084 FFF7FEFF 		bl	ADC_Disable
 3407              	.LVL290:
 3408 0088 F2E7     		b	.L264
 3409              	.LVL291:
 3410              	.L265:
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3411              		.loc 1 1531 3 discriminator 1 view .LVU1024
 3412 008a 0225     		movs	r5, #2
 3413 008c C8E7     		b	.L259
 3414              	.L269:
 3415 008e 00BF     		.align	2
 3416              	.L268:
 3417 0090 FEEFFFFF 		.word	-4098
 3418              		.cfi_endproc
 3419              	.LFE357:
 3421              		.section	.text.HAL_ADCEx_RegularMultiModeStop_DMA,"ax",%progbits
 3422              		.align	1
 3423              		.global	HAL_ADCEx_RegularMultiModeStop_DMA
 3424              		.syntax unified
 3425              		.thumb
 3426              		.thumb_func
 3428              	HAL_ADCEx_RegularMultiModeStop_DMA:
ARM GAS  /tmp/cc2hwav8.s 			page 222


 3429              	.LVL292:
 3430              	.LFB358:
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop DMA-based multimode ADC conversion, disable ADC DMA transfer, disable ADC peripher
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. Multimode DMA bits
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularStop_DMA() must be called after this function with handle of
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularMultiModeStop_DMA(ADC_HandleTypeDef *hadc)
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3431              		.loc 1 1610 1 is_stmt 1 view -0
 3432              		.cfi_startproc
 3433              		@ args = 0, pretend = 0, frame = 104
 3434              		@ frame_needed = 0, uses_anonymous_args = 0
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3435              		.loc 1 1611 3 view .LVU1026
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tickstart;
 3436              		.loc 1 1612 3 view .LVU1027
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 3437              		.loc 1 1613 3 view .LVU1028
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
 3438              		.loc 1 1614 3 view .LVU1029
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 3439              		.loc 1 1617 3 view .LVU1030
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3440              		.loc 1 1620 3 view .LVU1031
 3441              		.loc 1 1620 3 view .LVU1032
 3442 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3443 0004 012B     		cmp	r3, #1
 3444 0006 00F08480 		beq	.L287
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3445              		.loc 1 1610 1 is_stmt 0 view .LVU1033
 3446 000a 30B5     		push	{r4, r5, lr}
 3447              	.LCFI35:
 3448              		.cfi_def_cfa_offset 12
 3449              		.cfi_offset 4, -12
 3450              		.cfi_offset 5, -8
 3451              		.cfi_offset 14, -4
 3452 000c 9BB0     		sub	sp, sp, #108
 3453              	.LCFI36:
 3454              		.cfi_def_cfa_offset 120
 3455 000e 0446     		mov	r4, r0
 3456              		.loc 1 1620 3 is_stmt 1 discriminator 2 view .LVU1034
 3457 0010 0121     		movs	r1, #1
 3458 0012 80F85010 		strb	r1, [r0, #80]
ARM GAS  /tmp/cc2hwav8.s 			page 223


 3459              		.loc 1 1620 3 discriminator 2 view .LVU1035
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular groups */
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 3460              		.loc 1 1624 3 view .LVU1036
 3461              		.loc 1 1624 20 is_stmt 0 view .LVU1037
 3462 0016 FFF7FEFF 		bl	ADC_ConversionStop
 3463              	.LVL293:
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 3464              		.loc 1 1627 3 is_stmt 1 view .LVU1038
 3465              		.loc 1 1627 6 is_stmt 0 view .LVU1039
 3466 001a 0028     		cmp	r0, #0
 3467 001c 74D1     		bne	.L272
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 3468              		.loc 1 1630 5 is_stmt 1 view .LVU1040
 3469 001e 636D     		ldr	r3, [r4, #84]
 3470 0020 23F48073 		bic	r3, r3, #256
 3471 0024 6365     		str	r3, [r4, #84]
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.State = HAL_ADC_STATE_RESET;
 3472              		.loc 1 1632 5 view .LVU1041
 3473              		.loc 1 1632 24 is_stmt 0 view .LVU1042
 3474 0026 0023     		movs	r3, #0
 3475 0028 1693     		str	r3, [sp, #88]
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 3476              		.loc 1 1633 5 is_stmt 1 view .LVU1043
 3477              		.loc 1 1633 28 is_stmt 0 view .LVU1044
 3478 002a 1793     		str	r3, [sp, #92]
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 3479              		.loc 1 1636 5 is_stmt 1 view .LVU1045
 3480 002c 2268     		ldr	r2, [r4]
 3481 002e 3A4B     		ldr	r3, .L295
 3482 0030 9A42     		cmp	r2, r3
 3483 0032 0DD0     		beq	.L292
 3484              		.loc 1 1636 5 is_stmt 0 discriminator 2 view .LVU1046
 3485 0034 0023     		movs	r3, #0
 3486 0036 0193     		str	r3, [sp, #4]
 3487              	.L274:
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 3488              		.loc 1 1638 5 is_stmt 1 view .LVU1047
 3489              		.loc 1 1638 21 is_stmt 0 view .LVU1048
 3490 0038 019B     		ldr	r3, [sp, #4]
 3491              		.loc 1 1638 8 view .LVU1049
 3492 003a 6BB1     		cbz	r3, .L293
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
ARM GAS  /tmp/cc2hwav8.s 			page 224


1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 3493              		.loc 1 1653 5 is_stmt 1 view .LVU1050
 3494              		.loc 1 1653 17 is_stmt 0 view .LVU1051
 3495 003c FFF7FEFF 		bl	HAL_GetTick
 3496              	.LVL294:
 3497              		.loc 1 1653 17 view .LVU1052
 3498 0040 0546     		mov	r5, r0
 3499              	.LVL295:
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 3500              		.loc 1 1655 5 is_stmt 1 view .LVU1053
 3501              		.loc 1 1655 40 is_stmt 0 view .LVU1054
 3502 0042 019B     		ldr	r3, [sp, #4]
 3503              	.LVL296:
 3504              	.LBB389:
 3505              	.LBI389:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3506              		.loc 2 7052 26 is_stmt 1 view .LVU1055
 3507              	.LBB390:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3508              		.loc 2 7054 3 view .LVU1056
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3509              		.loc 2 7054 12 is_stmt 0 view .LVU1057
 3510 0044 9B68     		ldr	r3, [r3, #8]
 3511              	.LVL297:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3512              		.loc 2 7054 74 view .LVU1058
 3513 0046 13F00403 		ands	r3, r3, #4
 3514 004a 13D0     		beq	.L283
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3515              		.loc 2 7054 74 discriminator 1 view .LVU1059
 3516 004c 0123     		movs	r3, #1
 3517 004e 11E0     		b	.L283
 3518              	.LVL298:
 3519              	.L292:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3520              		.loc 2 7054 74 discriminator 1 view .LVU1060
 3521              	.LBE390:
 3522              	.LBE389:
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3523              		.loc 1 1636 5 discriminator 1 view .LVU1061
 3524 0050 03F58073 		add	r3, r3, #256
 3525 0054 0193     		str	r3, [sp, #4]
 3526 0056 EFE7     		b	.L274
 3527              	.L293:
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3528              		.loc 1 1641 7 is_stmt 1 view .LVU1062
 3529 0058 636D     		ldr	r3, [r4, #84]
ARM GAS  /tmp/cc2hwav8.s 			page 225


 3530 005a 43F02003 		orr	r3, r3, #32
 3531 005e 6365     		str	r3, [r4, #84]
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3532              		.loc 1 1644 7 view .LVU1063
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3533              		.loc 1 1644 7 view .LVU1064
 3534 0060 0023     		movs	r3, #0
 3535 0062 84F85030 		strb	r3, [r4, #80]
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3536              		.loc 1 1644 7 view .LVU1065
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 3537              		.loc 1 1646 7 view .LVU1066
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 3538              		.loc 1 1646 14 is_stmt 0 view .LVU1067
 3539 0066 0120     		movs	r0, #1
 3540              	.LVL299:
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 3541              		.loc 1 1646 14 view .LVU1068
 3542 0068 51E0     		b	.L271
 3543              	.LVL300:
 3544              	.L278:
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Process unlocked */
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           return HAL_ERROR;
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 3545              		.loc 1 1679 7 is_stmt 1 view .LVU1069
 3546              		.loc 1 1679 42 is_stmt 0 view .LVU1070
 3547 006a 019B     		ldr	r3, [sp, #4]
 3548              	.LVL301:
 3549              	.LBB391:
 3550              	.LBI391:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3551              		.loc 2 7052 26 is_stmt 1 view .LVU1071
 3552              	.LBB392:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3553              		.loc 2 7054 3 view .LVU1072
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 226


 3554              		.loc 2 7054 12 is_stmt 0 view .LVU1073
 3555 006c 9B68     		ldr	r3, [r3, #8]
 3556              	.LVL302:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3557              		.loc 2 7054 74 view .LVU1074
 3558 006e 13F00403 		ands	r3, r3, #4
 3559 0072 21D1     		bne	.L281
 3560              	.LVL303:
 3561              	.L283:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3562              		.loc 2 7054 74 view .LVU1075
 3563              	.LBE392:
 3564              	.LBE391:
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
 3565              		.loc 1 1657 12 is_stmt 1 view .LVU1076
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 3566              		.loc 1 1656 13 is_stmt 0 view .LVU1077
 3567 0074 2268     		ldr	r2, [r4]
 3568              	.LVL304:
 3569              	.LBB394:
 3570              	.LBI394:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3571              		.loc 2 7052 26 is_stmt 1 view .LVU1078
 3572              	.LBB395:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3573              		.loc 2 7054 3 view .LVU1079
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3574              		.loc 2 7054 12 is_stmt 0 view .LVU1080
 3575 0076 9268     		ldr	r2, [r2, #8]
 3576              	.LVL305:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3577              		.loc 2 7054 74 view .LVU1081
 3578 0078 12F0040F 		tst	r2, #4
 3579 007c 01D1     		bne	.L284
 3580              	.LVL306:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3581              		.loc 2 7054 74 view .LVU1082
 3582              	.LBE395:
 3583              	.LBE394:
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
 3584              		.loc 1 1657 12 discriminator 1 view .LVU1083
 3585 007e 012B     		cmp	r3, #1
 3586 0080 1CD1     		bne	.L294
 3587              	.L284:
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3588              		.loc 1 1660 7 is_stmt 1 view .LVU1084
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3589              		.loc 1 1660 12 is_stmt 0 view .LVU1085
 3590 0082 FFF7FEFF 		bl	HAL_GetTick
 3591              	.LVL307:
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3592              		.loc 1 1660 26 discriminator 1 view .LVU1086
 3593 0086 431B     		subs	r3, r0, r5
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3594              		.loc 1 1660 10 discriminator 1 view .LVU1087
 3595 0088 052B     		cmp	r3, #5
 3596 008a EED9     		bls	.L278
ARM GAS  /tmp/cc2hwav8.s 			page 227


1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3597              		.loc 1 1663 9 is_stmt 1 view .LVU1088
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3598              		.loc 1 1663 44 is_stmt 0 view .LVU1089
 3599 008c 019B     		ldr	r3, [sp, #4]
 3600              	.LVL308:
 3601              	.LBB396:
 3602              	.LBI396:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3603              		.loc 2 7052 26 is_stmt 1 view .LVU1090
 3604              	.LBB397:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3605              		.loc 2 7054 3 view .LVU1091
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3606              		.loc 2 7054 12 is_stmt 0 view .LVU1092
 3607 008e 9B68     		ldr	r3, [r3, #8]
 3608              	.LVL309:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3609              		.loc 2 7054 74 view .LVU1093
 3610 0090 13F00403 		ands	r3, r3, #4
 3611 0094 00D0     		beq	.L279
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3612              		.loc 2 7054 74 discriminator 1 view .LVU1094
 3613 0096 0123     		movs	r3, #1
 3614              	.L279:
 3615              	.LVL310:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3616              		.loc 2 7054 74 discriminator 1 view .LVU1095
 3617              	.LBE397:
 3618              	.LBE396:
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 3619              		.loc 1 1665 9 is_stmt 1 view .LVU1096
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 3620              		.loc 1 1665 13 is_stmt 0 view .LVU1097
 3621 0098 2268     		ldr	r2, [r4]
 3622              	.LVL311:
 3623              	.LBB398:
 3624              	.LBI398:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3625              		.loc 2 7052 26 is_stmt 1 view .LVU1098
 3626              	.LBB399:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3627              		.loc 2 7054 3 view .LVU1099
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3628              		.loc 2 7054 12 is_stmt 0 view .LVU1100
 3629 009a 9268     		ldr	r2, [r2, #8]
 3630              	.LVL312:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3631              		.loc 2 7054 74 view .LVU1101
 3632 009c 12F0040F 		tst	r2, #4
 3633 00a0 01D1     		bne	.L280
 3634              	.LVL313:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3635              		.loc 2 7054 74 view .LVU1102
 3636              	.LBE399:
 3637              	.LBE398:
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
ARM GAS  /tmp/cc2hwav8.s 			page 228


 3638              		.loc 1 1666 12 view .LVU1103
 3639 00a2 012B     		cmp	r3, #1
 3640 00a4 E1D1     		bne	.L278
 3641              	.L280:
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3642              		.loc 1 1670 11 is_stmt 1 view .LVU1104
 3643 00a6 636D     		ldr	r3, [r4, #84]
 3644              	.LVL314:
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3645              		.loc 1 1670 11 is_stmt 0 view .LVU1105
 3646 00a8 43F01003 		orr	r3, r3, #16
 3647 00ac 6365     		str	r3, [r4, #84]
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3648              		.loc 1 1673 11 is_stmt 1 view .LVU1106
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3649              		.loc 1 1673 11 view .LVU1107
 3650 00ae 0023     		movs	r3, #0
 3651 00b0 84F85030 		strb	r3, [r4, #80]
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3652              		.loc 1 1673 11 view .LVU1108
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 3653              		.loc 1 1675 11 view .LVU1109
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 3654              		.loc 1 1675 18 is_stmt 0 view .LVU1110
 3655 00b4 0120     		movs	r0, #1
 3656 00b6 2AE0     		b	.L271
 3657              	.LVL315:
 3658              	.L281:
 3659              	.LBB400:
 3660              	.LBB393:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3661              		.loc 2 7054 74 discriminator 1 view .LVU1111
 3662 00b8 0123     		movs	r3, #1
 3663 00ba DBE7     		b	.L283
 3664              	.LVL316:
 3665              	.L294:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3666              		.loc 2 7054 74 discriminator 1 view .LVU1112
 3667              	.LBE393:
 3668              	.LBE400:
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* with HAL_ADCEx_RegularStop_DMA() API.                                  */
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 3669              		.loc 1 1686 5 is_stmt 1 view .LVU1113
 3670              		.loc 1 1686 22 is_stmt 0 view .LVU1114
 3671 00bc E06C     		ldr	r0, [r4, #76]
 3672 00be FFF7FEFF 		bl	HAL_DMA_Abort
 3673              	.LVL317:
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
 3674              		.loc 1 1689 5 is_stmt 1 view .LVU1115
 3675              		.loc 1 1689 8 is_stmt 0 view .LVU1116
ARM GAS  /tmp/cc2hwav8.s 			page 229


 3676 00c2 18B1     		cbz	r0, .L285
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 3677              		.loc 1 1692 7 is_stmt 1 view .LVU1117
 3678 00c4 636D     		ldr	r3, [r4, #84]
 3679 00c6 43F04003 		orr	r3, r3, #64
 3680 00ca 6365     		str	r3, [r4, #84]
 3681              	.L285:
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 3682              		.loc 1 1696 5 view .LVU1118
 3683 00cc 2268     		ldr	r2, [r4]
 3684 00ce 5368     		ldr	r3, [r2, #4]
 3685 00d0 23F01003 		bic	r3, r3, #16
 3686 00d4 5360     		str	r3, [r2, #4]
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave if no injected        */
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*   conversion is on-going.                                              */
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 3687              		.loc 1 1702 5 view .LVU1119
 3688              		.loc 1 1702 8 is_stmt 0 view .LVU1120
 3689 00d6 B8B9     		cbnz	r0, .L272
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 3690              		.loc 1 1704 7 is_stmt 1 view .LVU1121
 3691              		.loc 1 1704 11 is_stmt 0 view .LVU1122
 3692 00d8 2368     		ldr	r3, [r4]
 3693              	.LVL318:
 3694              	.LBB401:
 3695              	.LBI401:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3696              		.loc 2 7247 26 is_stmt 1 view .LVU1123
 3697              	.LBB402:
 3698              		.loc 2 7249 3 view .LVU1124
 3699              		.loc 2 7249 12 is_stmt 0 view .LVU1125
 3700 00da 9B68     		ldr	r3, [r3, #8]
 3701              	.LVL319:
 3702              		.loc 2 7249 76 view .LVU1126
 3703 00dc 13F0080F 		tst	r3, #8
 3704 00e0 0BD1     		bne	.L286
 3705              	.LVL320:
 3706              		.loc 2 7249 76 view .LVU1127
 3707              	.LBE402:
 3708              	.LBE401:
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status =  ADC_Disable(hadc);
 3709              		.loc 1 1706 9 is_stmt 1 view .LVU1128
 3710              		.loc 1 1706 27 is_stmt 0 view .LVU1129
 3711 00e2 2046     		mov	r0, r4
 3712              	.LVL321:
 3713              		.loc 1 1706 27 view .LVU1130
 3714 00e4 FFF7FEFF 		bl	ADC_Disable
ARM GAS  /tmp/cc2hwav8.s 			page 230


 3715              	.LVL322:
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
 3716              		.loc 1 1707 9 is_stmt 1 view .LVU1131
 3717              		.loc 1 1707 12 is_stmt 0 view .LVU1132
 3718 00e8 70B9     		cbnz	r0, .L272
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           if (LL_ADC_INJ_IsConversionOngoing((&tmphadcSlave)->Instance) == 0UL)
 3719              		.loc 1 1709 11 is_stmt 1 view .LVU1133
 3720              		.loc 1 1709 15 is_stmt 0 view .LVU1134
 3721 00ea 019B     		ldr	r3, [sp, #4]
 3722              	.LVL323:
 3723              	.LBB403:
 3724              	.LBI403:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3725              		.loc 2 7247 26 is_stmt 1 view .LVU1135
 3726              	.LBB404:
 3727              		.loc 2 7249 3 view .LVU1136
 3728              		.loc 2 7249 12 is_stmt 0 view .LVU1137
 3729 00ec 9B68     		ldr	r3, [r3, #8]
 3730              	.LVL324:
 3731              		.loc 2 7249 76 view .LVU1138
 3732 00ee 13F0080F 		tst	r3, #8
 3733 00f2 02D1     		bne	.L286
 3734              	.LVL325:
 3735              		.loc 2 7249 76 view .LVU1139
 3736              	.LBE404:
 3737              	.LBE403:
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             tmp_hal_status =  ADC_Disable(&tmphadcSlave);
 3738              		.loc 1 1711 13 is_stmt 1 view .LVU1140
 3739              		.loc 1 1711 31 is_stmt 0 view .LVU1141
 3740 00f4 01A8     		add	r0, sp, #4
 3741              	.LVL326:
 3742              		.loc 1 1711 31 view .LVU1142
 3743 00f6 FFF7FEFF 		bl	ADC_Disable
 3744              	.LVL327:
 3745              	.L286:
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 3746              		.loc 1 1716 7 is_stmt 1 view .LVU1143
 3747              		.loc 1 1716 10 is_stmt 0 view .LVU1144
 3748 00fa 28B9     		cbnz	r0, .L272
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Both Master and Slave ADC's could be disabled. Update Master State */
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_INJ_BUSY bit, set HAL_ADC_STATE_READY bit */
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY, HAL_ADC_STATE_READY);
 3749              		.loc 1 1720 9 is_stmt 1 view .LVU1145
 3750 00fc 626D     		ldr	r2, [r4, #84]
 3751 00fe 074B     		ldr	r3, .L295+4
 3752 0100 1340     		ands	r3, r3, r2
 3753 0102 43F00103 		orr	r3, r3, #1
 3754 0106 6365     		str	r3, [r4, #84]
 3755              	.LVL328:
 3756              	.L272:
ARM GAS  /tmp/cc2hwav8.s 			page 231


1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* injected (Master or Slave) conversions are still on-going,
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            no Master State change */
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3757              		.loc 1 1726 7 view .LVU1146
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3758              		.loc 1 1731 3 view .LVU1147
 3759              		.loc 1 1731 3 view .LVU1148
 3760 0108 0023     		movs	r3, #0
 3761 010a 84F85030 		strb	r3, [r4, #80]
 3762              		.loc 1 1731 3 view .LVU1149
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 3763              		.loc 1 1734 3 view .LVU1150
 3764              	.LVL329:
 3765              	.L271:
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3766              		.loc 1 1735 1 is_stmt 0 view .LVU1151
 3767 010e 1BB0     		add	sp, sp, #108
 3768              	.LCFI37:
 3769              		.cfi_def_cfa_offset 12
 3770              		@ sp needed
 3771 0110 30BD     		pop	{r4, r5, pc}
 3772              	.LVL330:
 3773              	.L287:
 3774              	.LCFI38:
 3775              		.cfi_def_cfa_offset 0
 3776              		.cfi_restore 4
 3777              		.cfi_restore 5
 3778              		.cfi_restore 14
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3779              		.loc 1 1620 3 discriminator 1 view .LVU1152
 3780 0112 0220     		movs	r0, #2
 3781              	.LVL331:
 3782              		.loc 1 1735 1 view .LVU1153
 3783 0114 7047     		bx	lr
 3784              	.L296:
 3785 0116 00BF     		.align	2
 3786              	.L295:
 3787 0118 00200240 		.word	1073881088
 3788 011c FEEFFFFF 		.word	-4098
 3789              		.cfi_endproc
 3790              	.LFE358:
 3792              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 3793              		.align	1
 3794              		.global	HAL_ADCEx_InjectedConfigChannel
 3795              		.syntax unified
 3796              		.thumb
 3797              		.thumb_func
 3799              	HAL_ADCEx_InjectedConfigChannel:
ARM GAS  /tmp/cc2hwav8.s 			page 232


 3800              	.LVL332:
 3801              	.LFB359:
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @}
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADC Extended Peripheral Control functions
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @verbatim
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Configure channels on injected group
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Configure multimode when multimode feature is available
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Enable or Disable Injected Queue
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Disable ADC voltage regulator
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Enter ADC deep-power-down mode
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @endverbatim
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Configure a channel to be assigned to ADC group injected.
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without resetting the ADC.
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state:
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Refer to comments of structure "ADC_InjectionConfTypeDef".
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         These internal paths can be disabled using function
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use, a context must be fully
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         defined before start of injected conversion. All channels are configured
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         consecutively for the same ADC instance. Therefore, the number of calls to
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedConfigChannel() must be equal to the value of parameter
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         InjectedNbrOfConversion for each context.
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *  - Example 1: If 1 context is intended to be used (or if there is no use of the
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    Injected Queue Context feature) and if the context contains 3 injected ranks
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion = 3), HAL_ADCEx_InjectedConfigChannel() must be
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    called once for each channel (i.e. 3 times) before starting a conversion.
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    This function must not be called to configure a 4th injected channel:
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    it would start a new context into context queue.
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts are intended to be used and each of them contains
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    3 injected ranks (InjectedNbrOfConversion = 3),
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    start once the 1st context is set, that is after the first three
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() calls. The 2nd context can be set on the fly.
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param sConfigInjected Structure of ADC injected group and ADC channel for
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         injected group.
ARM GAS  /tmp/cc2hwav8.s 			page 233


1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef *hadc, ADC_InjectionConfTypeDef
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3802              		.loc 1 1794 1 is_stmt 1 view -0
 3803              		.cfi_startproc
 3804              		@ args = 0, pretend = 0, frame = 8
 3805              		@ frame_needed = 0, uses_anonymous_args = 0
 3806              		.loc 1 1794 1 is_stmt 0 view .LVU1155
 3807 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3808              	.LCFI39:
 3809              		.cfi_def_cfa_offset 20
 3810              		.cfi_offset 4, -20
 3811              		.cfi_offset 5, -16
 3812              		.cfi_offset 6, -12
 3813              		.cfi_offset 7, -8
 3814              		.cfi_offset 14, -4
 3815 0002 83B0     		sub	sp, sp, #12
 3816              	.LCFI40:
 3817              		.cfi_def_cfa_offset 32
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3818              		.loc 1 1795 3 is_stmt 1 view .LVU1156
 3819              	.LVL333:
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 3820              		.loc 1 1796 3 view .LVU1157
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_config_internal_channel;
 3821              		.loc 1 1797 3 view .LVU1158
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3822              		.loc 1 1798 3 view .LVU1159
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3823              		.loc 1 1799 3 view .LVU1160
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 3824              		.loc 1 1800 3 view .LVU1161
 3825              		.loc 1 1800 17 is_stmt 0 view .LVU1162
 3826 0004 0023     		movs	r3, #0
 3827 0006 0193     		str	r3, [sp, #4]
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_JSQR_ContextQueueBeingBuilt = 0U;
 3828              		.loc 1 1802 3 is_stmt 1 view .LVU1163
 3829              	.LVL334:
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3830              		.loc 1 1805 3 view .LVU1164
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
 3831              		.loc 1 1806 3 view .LVU1165
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfigInjected->InjectedSingleDiff));
 3832              		.loc 1 1807 3 view .LVU1166
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
 3833              		.loc 1 1808 3 view .LVU1167
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->QueueInjectedContext));
 3834              		.loc 1 1809 3 view .LVU1168
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
 3835              		.loc 1 1810 3 view .LVU1169
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
 3836              		.loc 1 1811 3 view .LVU1170
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfigInjected->InjectedOffsetNumber));
ARM GAS  /tmp/cc2hwav8.s 			page 234


 3837              		.loc 1 1812 3 view .LVU1171
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjecOversamplingMode));
 3838              		.loc 1 1813 3 view .LVU1172
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedOffsetSaturation));
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Instance == ADC3)
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC3_OFFSET_SIGN(sConfigInjected->InjectedOffsetSign));
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
 3839              		.loc 1 1824 5 view .LVU1173
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 3840              		.loc 1 1827 3 view .LVU1174
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
 3841              		.loc 1 1829 5 view .LVU1175
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
 3842              		.loc 1 1830 5 view .LVU1176
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
 3843              		.loc 1 1831 5 view .LVU1177
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check offset range according to oversampling setting */
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Init.OversamplingMode == ENABLE)
 3844              		.loc 1 1835 3 view .LVU1178
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset / (hadc->In
 3845              		.loc 1 1837 5 view .LVU1179
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
 3846              		.loc 1 1841 5 view .LVU1180
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* if JOVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      ignored (considered as reset) */
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Instance == ADC3)
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(!((sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE) && (sConfigInjected->
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif  /* ADC_VER_V5_V90 */
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* JDISCEN and JAUTO bits can't be set at the same time  */
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(!((sConfigInjected->InjectedDiscontinuousConvMode == ENABLE) && (sConfigInjected->Au
 3847              		.loc 1 1852 3 view .LVU1181
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  DISCEN and JAUTO bits can't be set at the same time */
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (sConfigInjected->AutoInjectedConv
 3848              		.loc 1 1855 3 view .LVU1182
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Verification of channel number */
ARM GAS  /tmp/cc2hwav8.s 			page 235


1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
 3849              		.loc 1 1858 3 view .LVU1183
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->Instance == ADC1)
 3850              		.loc 1 1864 5 view .LVU1184
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC1_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
 3851              		.loc 1 1866 7 view .LVU1185
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->Instance == ADC2)
 3852              		.loc 1 1868 5 view .LVU1186
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC2_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
 3853              		.loc 1 1870 7 view .LVU1187
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined (ADC3)
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->Instance == ADC3)
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC3_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3854              		.loc 1 1881 3 view .LVU1188
 3855              		.loc 1 1881 3 view .LVU1189
 3856 0008 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3857 000c 012B     		cmp	r3, #1
 3858 000e 00F0E182 		beq	.L372
 3859 0012 0446     		mov	r4, r0
 3860 0014 0D46     		mov	r5, r1
 3861              		.loc 1 1881 3 discriminator 2 view .LVU1190
 3862 0016 0123     		movs	r3, #1
 3863 0018 80F85030 		strb	r3, [r0, #80]
 3864              		.loc 1 1881 3 discriminator 2 view .LVU1191
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*                                                                          */
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1)                              */
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1) and can  */
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
ARM GAS  /tmp/cc2hwav8.s 			page 236


1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
 3865              		.loc 1 1904 3 view .LVU1192
 3866              		.loc 1 1904 18 is_stmt 0 view .LVU1193
 3867 001c C368     		ldr	r3, [r0, #12]
 3868              		.loc 1 1904 6 view .LVU1194
 3869 001e ABB1     		cbz	r3, .L299
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 3870              		.loc 1 1905 23 view .LVU1195
 3871 0020 0B6A     		ldr	r3, [r1, #32]
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 3872              		.loc 1 1904 54 discriminator 1 view .LVU1196
 3873 0022 012B     		cmp	r3, #1
 3874 0024 12D0     		beq	.L299
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 can be used) */
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* software start.                                                      */
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       software start.                                                */
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                           );
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, tmp_JSQR_ContextQueueBeingBuilt);
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_JSQR_ContextQueueBeingBuilt;
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* sequencer.                                                             */
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*                                                                        */
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
ARM GAS  /tmp/cc2hwav8.s 			page 237


1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger.                     */
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* if hadc->InjectionConfig.ChannelCount is equal to 0, this is the first */
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*   call of the context under setting                                    */
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
 3875              		.loc 1 1951 5 is_stmt 1 view .LVU1197
 3876              		.loc 1 1951 30 is_stmt 0 view .LVU1198
 3877 0026 026E     		ldr	r2, [r0, #96]
 3878              		.loc 1 1951 8 view .LVU1199
 3879 0028 002A     		cmp	r2, #0
 3880 002a 40F0B480 		bne	.L373
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  being built                                                         */
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = sConfigInjected->InjectedNbrOfConversion;
 3881              		.loc 1 1955 7 is_stmt 1 view .LVU1200
 3882              		.loc 1 1955 42 is_stmt 0 view .LVU1201
 3883 002e 0366     		str	r3, [r0, #96]
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Handle hadc saves the context under build up over each HAL_ADCEx_InjectedConfigChannel()
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          call, this context will be written in JSQR register at the last call.
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          At this point, the context is merely reset  */
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0x00000000U;
 3884              		.loc 1 1959 7 is_stmt 1 view .LVU1202
 3885              		.loc 1 1959 42 is_stmt 0 view .LVU1203
 3886 0030 0023     		movs	r3, #0
 3887 0032 C365     		str	r3, [r0, #92]
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* software start.                                                      */
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       software start.                                                */
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 3888              		.loc 1 1971 7 is_stmt 1 view .LVU1204
 3889              		.loc 1 1971 26 is_stmt 0 view .LVU1205
 3890 0034 8B6A     		ldr	r3, [r1, #40]
 3891              		.loc 1 1971 10 view .LVU1206
 3892 0036 002B     		cmp	r3, #0
 3893 0038 00F0AA80 		beq	.L305
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U)
 3894              		.loc 1 1973 9 is_stmt 1 view .LVU1207
 3895              		.loc 1 1973 60 is_stmt 0 view .LVU1208
 3896 003c 0A6A     		ldr	r2, [r1, #32]
 3897              		.loc 1 1973 86 view .LVU1209
 3898 003e 013A     		subs	r2, r2, #1
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 3899              		.loc 1 1974 86 view .LVU1210
 3900 0040 03F07C03 		and	r3, r3, #124
 3901              		.loc 1 1974 44 view .LVU1211
ARM GAS  /tmp/cc2hwav8.s 			page 238


 3902 0044 1A43     		orrs	r2, r2, r3
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 3903              		.loc 1 1975 61 view .LVU1212
 3904 0046 CB6A     		ldr	r3, [r1, #44]
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 3905              		.loc 1 1973 41 view .LVU1213
 3906 0048 1A43     		orrs	r2, r2, r3
 3907              	.LVL335:
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 3908              		.loc 1 1973 41 view .LVU1214
 3909 004a A5E0     		b	.L304
 3910              	.LVL336:
 3911              	.L299:
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3912              		.loc 1 1914 5 is_stmt 1 view .LVU1215
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3913              		.loc 1 1914 24 is_stmt 0 view .LVU1216
 3914 004c 6B68     		ldr	r3, [r5, #4]
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3915              		.loc 1 1914 8 view .LVU1217
 3916 004e 092B     		cmp	r3, #9
 3917 0050 7ED0     		beq	.L388
 3918              	.LVL337:
 3919              	.L301:
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                           );
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U));
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Continue setting of context under definition with parameter       */
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*    related to each channel: channel rank sequence                    */
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear the old JSQx bits for the selected rank */
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt &= ~ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank);
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set the JSQx bits for the selected rank */
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt |= ADC_JSQR_RK(sConfigInjected->InjectedChannel, sConfigInjecte
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Decrease channel count  */
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     hadc->InjectionConfig.ChannelCount--;
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 3. tmp_JSQR_ContextQueueBeingBuilt is fully built for this HAL_ADCEx_InjectedConfigChannel()
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           call, aggregate the setting to those already built during the previous
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           HAL_ADCEx_InjectedConfigChannel() calls (for the same context of course)  */
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     hadc->InjectionConfig.ContextQueue |= tmp_JSQR_ContextQueueBeingBuilt;
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 4. End of context setting: if this is the last channel set, then write context
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         into register JSQR and make it enter into queue                   */
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, hadc->InjectionConfig.ContextQueue);
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc2hwav8.s 			page 239


2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 3920              		.loc 1 2016 3 is_stmt 1 view .LVU1218
 3921              		.loc 1 2016 7 is_stmt 0 view .LVU1219
 3922 0052 2268     		ldr	r2, [r4]
 3923              	.LVL338:
 3924              	.LBB405:
 3925              	.LBI405:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3926              		.loc 2 7247 26 is_stmt 1 view .LVU1220
 3927              	.LBB406:
 3928              		.loc 2 7249 3 view .LVU1221
 3929              		.loc 2 7249 12 is_stmt 0 view .LVU1222
 3930 0054 9368     		ldr	r3, [r2, #8]
 3931              		.loc 2 7249 76 view .LVU1223
 3932 0056 13F0080F 		tst	r3, #8
 3933 005a 1ED1     		bne	.L306
 3934              	.LVL339:
 3935              		.loc 2 7249 76 view .LVU1224
 3936              	.LBE406:
 3937              	.LBE405:
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->Instance != ADC3)
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* ADC channels preselection */
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->Instance->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->Inject
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #else
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* ADC channels preselection */
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChann
 3938              		.loc 1 2026 5 is_stmt 1 view .LVU1225
 3939              		.loc 1 2026 39 is_stmt 0 view .LVU1226
 3940 005c 2B68     		ldr	r3, [r5]
 3941 005e C3F31301 		ubfx	r1, r3, #0, #20
 3942              		.loc 1 2026 35 view .LVU1227
 3943 0062 0029     		cmp	r1, #0
 3944 0064 40F0B680 		bne	.L307
 3945              		.loc 1 2026 39 discriminator 1 view .LVU1228
 3946 0068 C3F38463 		ubfx	r3, r3, #26, #5
 3947              		.loc 1 2026 35 discriminator 1 view .LVU1229
 3948 006c 0121     		movs	r1, #1
 3949 006e 9940     		lsls	r1, r1, r3
 3950              	.L308:
 3951              		.loc 1 2026 19 discriminator 4 view .LVU1230
 3952 0070 D369     		ldr	r3, [r2, #28]
 3953              		.loc 1 2026 27 discriminator 4 view .LVU1231
 3954 0072 0B43     		orrs	r3, r3, r1
 3955 0074 D361     		str	r3, [r2, #28]
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc2hwav8.s 			page 240


2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == DISABLE)
 3956              		.loc 1 2030 5 is_stmt 1 view .LVU1232
 3957              		.loc 1 2030 24 is_stmt 0 view .LVU1233
 3958 0076 95F82530 		ldrb	r3, [r5, #37]	@ zero_extendqisi2
 3959              		.loc 1 2030 8 view .LVU1234
 3960 007a 002B     		cmp	r3, #0
 3961 007c 40F0B680 		bne	.L310
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
 3962              		.loc 1 2032 7 is_stmt 1 view .LVU1235
 3963 0080 2168     		ldr	r1, [r4]
 3964 0082 CB68     		ldr	r3, [r1, #12]
 3965 0084 23F44013 		bic	r3, r3, #3145728
 3966 0088 95F82600 		ldrb	r0, [r5, #38]	@ zero_extendqisi2
 3967              	.LVL340:
 3968              		.loc 1 2032 7 is_stmt 0 view .LVU1236
 3969 008c 95F82420 		ldrb	r2, [r5, #36]	@ zero_extendqisi2
 3970 0090 1205     		lsls	r2, r2, #20
 3971 0092 42EA4052 		orr	r2, r2, r0, lsl #21
 3972 0096 1343     		orrs	r3, r3, r2
 3973 0098 CB60     		str	r3, [r1, #12]
 3974              	.L306:
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext)    
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_DISCCONTINUOUS((uint32_t)sConfigInjected->InjectedDiscontinuousCon
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is    */
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* discarded.                                                             */
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext));
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 3975              		.loc 1 2055 3 is_stmt 1 view .LVU1237
 3976              		.loc 1 2055 44 is_stmt 0 view .LVU1238
 3977 009a 2168     		ldr	r1, [r4]
 3978              	.LVL341:
 3979              	.LBB407:
 3980              	.LBI407:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3981              		.loc 2 7052 26 is_stmt 1 view .LVU1239
 3982              	.LBB408:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3983              		.loc 2 7054 3 view .LVU1240
ARM GAS  /tmp/cc2hwav8.s 			page 241


7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3984              		.loc 2 7054 12 is_stmt 0 view .LVU1241
 3985 009c 8B68     		ldr	r3, [r1, #8]
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3986              		.loc 2 7054 74 view .LVU1242
 3987 009e 13F00403 		ands	r3, r3, #4
 3988 00a2 00D0     		beq	.L311
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3989              		.loc 2 7054 74 discriminator 1 view .LVU1243
 3990 00a4 0123     		movs	r3, #1
 3991              	.L311:
 3992              	.LVL342:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3993              		.loc 2 7054 74 discriminator 1 view .LVU1244
 3994              	.LBE408:
 3995              	.LBE407:
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3996              		.loc 1 2056 3 is_stmt 1 view .LVU1245
 3997              	.LBB409:
 3998              	.LBI409:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3999              		.loc 2 7247 26 view .LVU1246
 4000              	.LBB410:
 4001              		.loc 2 7249 3 view .LVU1247
 4002              		.loc 2 7249 12 is_stmt 0 view .LVU1248
 4003 00a6 8A68     		ldr	r2, [r1, #8]
 4004              		.loc 2 7249 76 view .LVU1249
 4005 00a8 12F00802 		ands	r2, r2, #8
 4006 00ac 00D0     		beq	.L312
 4007              		.loc 2 7249 76 discriminator 1 view .LVU1250
 4008 00ae 0122     		movs	r2, #1
 4009              	.L312:
 4010              	.LVL343:
 4011              		.loc 2 7249 76 discriminator 1 view .LVU1251
 4012              	.LBE410:
 4013              	.LBE409:
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 4014              		.loc 1 2058 3 is_stmt 1 view .LVU1252
 4015              		.loc 1 2058 6 is_stmt 0 view .LVU1253
 4016 00b0 52EA0306 		orrs	r6, r2, r3
 4017 00b4 40F04B81 		bne	.L375
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      )
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* software start): no constraint                                         */
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if ((sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 4018              		.loc 1 2064 5 is_stmt 1 view .LVU1254
 4019              		.loc 1 2064 25 is_stmt 0 view .LVU1255
 4020 00b8 AB6A     		ldr	r3, [r5, #40]
 4021              	.LVL344:
 4022              		.loc 1 2064 8 view .LVU1256
 4023 00ba 1BB1     		cbz	r3, .L314
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         || (sConfigInjected->ExternalTrigInjecConvEdge == ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 4024              		.loc 1 2065 28 view .LVU1257
 4025 00bc EB6A     		ldr	r3, [r5, #44]
ARM GAS  /tmp/cc2hwav8.s 			page 242


 4026              		.loc 1 2065 9 view .LVU1258
 4027 00be 002B     		cmp	r3, #0
 4028 00c0 40F0A480 		bne	.L315
 4029              	.L314:
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
 4030              		.loc 1 2067 7 is_stmt 1 view .LVU1259
 4031              		.loc 1 2067 26 is_stmt 0 view .LVU1260
 4032 00c4 95F82530 		ldrb	r3, [r5, #37]	@ zero_extendqisi2
 4033              		.loc 1 2067 10 view .LVU1261
 4034 00c8 012B     		cmp	r3, #1
 4035 00ca 00F09980 		beq	.L389
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 4036              		.loc 1 2073 9 is_stmt 1 view .LVU1262
 4037 00ce CB68     		ldr	r3, [r1, #12]
 4038 00d0 23F00073 		bic	r3, r3, #33554432
 4039 00d4 CB60     		str	r3, [r1, #12]
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 4040              		.loc 1 1795 21 is_stmt 0 view .LVU1263
 4041 00d6 0027     		movs	r7, #0
 4042              	.LVL345:
 4043              	.L317:
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjecOversamplingMode == ENABLE)
 4044              		.loc 1 2093 5 is_stmt 1 view .LVU1264
 4045              		.loc 1 2093 24 is_stmt 0 view .LVU1265
 4046 00d8 95F83030 		ldrb	r3, [r5, #48]	@ zero_extendqisi2
 4047              		.loc 1 2093 8 view .LVU1266
 4048 00dc 012B     		cmp	r3, #1
 4049 00de 00F0A480 		beq	.L390
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (hadc->Instance == ADC3)
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc2hwav8.s 			page 243


2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO_ADC3(sConfigInjected->InjecOversampling.Ratio));
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(sConfigInjected->InjecOversampling.Ratio));
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #else
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC_OVERSAMPLING_RATIO(sConfigInjected->InjecOversampling.Ratio));
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(sConfigInjected->InjecOversampling.RightBitShift));
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  JOVSE must be reset in case of triggered regular mode  */
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(!(READ_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS) == (ADC_CFG
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Configuration of Injected Oversampler:                                 */
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Oversampling Ratio                                                  */
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Right bit shift                                                     */
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable OverSampling mode */
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (hadc->Instance != ADC3)
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->CFGR2,
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_JOVSE |
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_OVSR  |
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_OVSS,
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_JOVSE                                  |
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ((sConfigInjected->InjecOversampling.Ratio - 1UL) << ADC_CFGR2_OVSR_Pos) |
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    sConfigInjected->InjecOversampling.RightBitShift
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   );
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->CFGR2,
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_JOVSE |
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC3_CFGR2_OVSR  |
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_OVSS,
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_JOVSE                                  |
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   (sConfigInjected->InjecOversampling.Ratio)        |
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    sConfigInjected->InjecOversampling.RightBitShift
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   );
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #else
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR2,
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADC_CFGR2_JOVSE |
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADC_CFGR2_OVSR  |
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADC_CFGR2_OVSS,
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADC_CFGR2_JOVSE                                  |
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ((sConfigInjected->InjecOversampling.Ratio - 1UL) << ADC_CFGR2_OVSR_Pos) |
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            sConfigInjected->InjecOversampling.RightBitShift
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           );
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Disable Regular OverSampling */
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_JOVSE);
ARM GAS  /tmp/cc2hwav8.s 			page 244


 4050              		.loc 1 2154 7 is_stmt 1 view .LVU1267
 4051 00e2 2268     		ldr	r2, [r4]
 4052              	.LVL346:
 4053              		.loc 1 2154 7 is_stmt 0 view .LVU1268
 4054 00e4 1369     		ldr	r3, [r2, #16]
 4055 00e6 23F00203 		bic	r3, r3, #2
 4056 00ea 1361     		str	r3, [r2, #16]
 4057              	.L320:
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set sampling time of the selected ADC channel */
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInjected
 4058              		.loc 1 2158 5 is_stmt 1 view .LVU1269
 4059 00ec AA68     		ldr	r2, [r5, #8]
 4060 00ee 2968     		ldr	r1, [r5]
 4061 00f0 2068     		ldr	r0, [r4]
 4062 00f2 FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
 4063              	.LVL347:
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Shift the offset with respect to the selected ADC resolution. */
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->Instance == ADC3)
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmpOffsetShifted = ADC3_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
 4064              		.loc 1 2172 7 view .LVU1270
 4065              		.loc 1 2172 26 is_stmt 0 view .LVU1271
 4066 00f6 2368     		ldr	r3, [r4]
 4067 00f8 DA68     		ldr	r2, [r3, #12]
 4068 00fa 12F0100F 		tst	r2, #16
 4069 00fe 40F0A280 		bne	.L321
 4070              		.loc 1 2172 26 discriminator 1 view .LVU1272
 4071 0102 6A69     		ldr	r2, [r5, #20]
 4072 0104 D968     		ldr	r1, [r3, #12]
 4073 0106 C1F38201 		ubfx	r1, r1, #2, #3
 4074 010a 4900     		lsls	r1, r1, #1
 4075 010c 8A40     		lsls	r2, r2, r1
 4076              	.L322:
 4077              	.LVL348:
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE)
 4078              		.loc 1 2175 5 is_stmt 1 view .LVU1273
 4079              		.loc 1 2175 24 is_stmt 0 view .LVU1274
 4080 010e D5F810C0 		ldr	ip, [r5, #16]
 4081              		.loc 1 2175 8 view .LVU1275
 4082 0112 BCF1040F 		cmp	ip, #4
 4083 0116 00F0A180 		beq	.L323
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC selected offset number */
ARM GAS  /tmp/cc2hwav8.s 			page 245


2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_SetOffset(hadc->Instance, sConfigInjected->InjectedOffsetNumber, sConfigInjected->Inje
 4084              		.loc 1 2178 7 is_stmt 1 view .LVU1276
 4085 011a 2868     		ldr	r0, [r5]
 4086              	.LVL349:
 4087              	.LBB411:
 4088              	.LBI411:
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4089              		.loc 2 3372 22 view .LVU1277
 4090              	.LBB412:
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 4091              		.loc 2 3374 3 view .LVU1278
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 4092              		.loc 2 3374 25 is_stmt 0 view .LVU1279
 4093 011c 6033     		adds	r3, r3, #96
 4094              	.LVL350:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4095              		.loc 2 3385 5 is_stmt 1 view .LVU1280
 4096 011e 53F82C10 		ldr	r1, [r3, ip, lsl #2]
 4097 0122 01F00041 		and	r1, r1, #-2147483648
 4098 0126 00F0F840 		and	r0, r0, #2080374784
 4099              	.LVL351:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4100              		.loc 2 3385 5 is_stmt 0 view .LVU1281
 4101 012a 0243     		orrs	r2, r2, r0
 4102              	.LVL352:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4103              		.loc 2 3385 5 view .LVU1282
 4104 012c 0A43     		orrs	r2, r2, r1
 4105 012e 43F82C20 		str	r2, [r3, ip, lsl #2]
 4106              	.LVL353:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4107              		.loc 2 3385 5 view .LVU1283
 4108              	.LBE412:
 4109              	.LBE411:
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (hadc->Instance == ADC3)
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC selected offset sign & saturation */
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         LL_ADC_SetOffsetSign(hadc->Instance, sConfigInjected->InjectedOffsetNumber, sConfigInjected
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         LL_ADC_SetOffsetSaturation(hadc->Instance, sConfigInjected->InjectedOffsetNumber, (sConfigI
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC selected offset signed saturation */
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         LL_ADC_SetOffsetSignedSaturation(hadc->Instance, sConfigInjected->InjectedOffsetNumber, (sC
 4110              		.loc 1 2191 9 is_stmt 1 view .LVU1284
 4111 0132 2368     		ldr	r3, [r4]
 4112 0134 2969     		ldr	r1, [r5, #16]
 4113              		.loc 1 2191 113 is_stmt 0 view .LVU1285
 4114 0136 2A7F     		ldrb	r2, [r5, #28]	@ zero_extendqisi2
 4115              		.loc 1 2191 9 view .LVU1286
 4116 0138 012A     		cmp	r2, #1
 4117 013a 00F08C80 		beq	.L391
 4118              	.L324:
 4119              	.LVL354:
ARM GAS  /tmp/cc2hwav8.s 			page 246


 4120              	.LBB413:
 4121              	.LBI413:
3545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4122              		.loc 2 3545 22 is_stmt 1 view .LVU1287
 4123              	.LBB414:
 4124              	.LBB415:
3555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 4125              		.loc 2 3555 5 view .LVU1288
3555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 4126              		.loc 2 3555 27 is_stmt 0 view .LVU1289
 4127 013e 6033     		adds	r3, r3, #96
 4128              	.LVL355:
3556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 4129              		.loc 2 3556 5 is_stmt 1 view .LVU1290
 4130 0140 53F82120 		ldr	r2, [r3, r1, lsl #2]
 4131 0144 22F00042 		bic	r2, r2, #-2147483648
 4132 0148 3243     		orrs	r2, r2, r6
 4133 014a 43F82120 		str	r2, [r3, r1, lsl #2]
 4134              	.LVL356:
3556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 4135              		.loc 2 3556 5 is_stmt 0 view .LVU1291
 4136              	.LBE415:
3558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4137              		.loc 2 3558 1 view .LVU1292
 4138 014e FFE0     		b	.L313
 4139              	.LVL357:
 4140              	.L388:
3558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4141              		.loc 2 3558 1 view .LVU1293
 4142              	.LBE414:
 4143              	.LBE413:
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4144              		.loc 1 1921 7 is_stmt 1 view .LVU1294
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4145              		.loc 1 1921 26 is_stmt 0 view .LVU1295
 4146 0150 AA6A     		ldr	r2, [r5, #40]
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4147              		.loc 1 1921 10 view .LVU1296
 4148 0152 BAB1     		cbz	r2, .L302
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 4149              		.loc 1 1923 9 is_stmt 1 view .LVU1297
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 4150              		.loc 1 1923 44 is_stmt 0 view .LVU1298
 4151 0154 2B68     		ldr	r3, [r5]
 4152 0156 9B0E     		lsrs	r3, r3, #26
 4153 0158 5B02     		lsls	r3, r3, #9
 4154 015a 03F47853 		and	r3, r3, #15872
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 4155              		.loc 1 1924 86 view .LVU1299
 4156 015e 02F07C02 		and	r2, r2, #124
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 4157              		.loc 1 1924 44 view .LVU1300
 4158 0162 1343     		orrs	r3, r3, r2
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                           );
 4159              		.loc 1 1925 61 view .LVU1301
 4160 0164 EA6A     		ldr	r2, [r5, #44]
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
ARM GAS  /tmp/cc2hwav8.s 			page 247


 4161              		.loc 1 1923 41 view .LVU1302
 4162 0166 1343     		orrs	r3, r3, r2
 4163              	.LVL358:
 4164              	.L303:
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
 4165              		.loc 1 1933 7 is_stmt 1 view .LVU1303
 4166 0168 2168     		ldr	r1, [r4]
 4167              	.LVL359:
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
 4168              		.loc 1 1933 7 is_stmt 0 view .LVU1304
 4169 016a CA6C     		ldr	r2, [r1, #76]
 4170 016c 22F07B42 		bic	r2, r2, #-83886080
 4171 0170 22F46F02 		bic	r2, r2, #15663104
 4172 0174 22F43F42 		bic	r2, r2, #48896
 4173 0178 22F0FF02 		bic	r2, r2, #255
 4174 017c 1A43     		orrs	r2, r2, r3
 4175 017e CA64     		str	r2, [r1, #76]
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4176              		.loc 1 1935 7 is_stmt 1 view .LVU1305
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4177              		.loc 1 1935 42 is_stmt 0 view .LVU1306
 4178 0180 E365     		str	r3, [r4, #92]
 4179 0182 66E7     		b	.L301
 4180              	.LVL360:
 4181              	.L302:
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4182              		.loc 1 1930 9 is_stmt 1 view .LVU1307
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4183              		.loc 1 1930 44 is_stmt 0 view .LVU1308
 4184 0184 2B68     		ldr	r3, [r5]
 4185 0186 9B0E     		lsrs	r3, r3, #26
 4186 0188 5B02     		lsls	r3, r3, #9
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4187              		.loc 1 1930 41 view .LVU1309
 4188 018a 03F47853 		and	r3, r3, #15872
 4189              	.LVL361:
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4190              		.loc 1 1930 41 view .LVU1310
 4191 018e EBE7     		b	.L303
 4192              	.LVL362:
 4193              	.L305:
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4194              		.loc 1 1980 9 is_stmt 1 view .LVU1311
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4195              		.loc 1 1980 60 is_stmt 0 view .LVU1312
 4196 0190 0A6A     		ldr	r2, [r1, #32]
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4197              		.loc 1 1980 41 view .LVU1313
 4198 0192 013A     		subs	r2, r2, #1
 4199              	.LVL363:
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4200              		.loc 1 1980 41 view .LVU1314
 4201 0194 00E0     		b	.L304
 4202              	.LVL364:
 4203              	.L373:
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4204              		.loc 1 1802 12 view .LVU1315
ARM GAS  /tmp/cc2hwav8.s 			page 248


 4205 0196 0022     		movs	r2, #0
 4206              	.LVL365:
 4207              	.L304:
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4208              		.loc 1 1988 5 is_stmt 1 view .LVU1316
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4209              		.loc 1 1991 5 view .LVU1317
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4210              		.loc 1 1991 40 is_stmt 0 view .LVU1318
 4211 0198 2B68     		ldr	r3, [r5]
 4212 019a C3F38463 		ubfx	r3, r3, #26, #5
 4213 019e 6968     		ldr	r1, [r5, #4]
 4214              	.LVL366:
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4215              		.loc 1 1991 40 view .LVU1319
 4216 01a0 01F01F01 		and	r1, r1, #31
 4217 01a4 8B40     		lsls	r3, r3, r1
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4218              		.loc 1 1991 37 view .LVU1320
 4219 01a6 1343     		orrs	r3, r3, r2
 4220              	.LVL367:
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4221              		.loc 1 1994 5 is_stmt 1 view .LVU1321
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4222              		.loc 1 1994 26 is_stmt 0 view .LVU1322
 4223 01a8 216E     		ldr	r1, [r4, #96]
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4224              		.loc 1 1994 39 view .LVU1323
 4225 01aa 0139     		subs	r1, r1, #1
 4226 01ac 2166     		str	r1, [r4, #96]
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4227              		.loc 1 1999 5 is_stmt 1 view .LVU1324
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4228              		.loc 1 1999 26 is_stmt 0 view .LVU1325
 4229 01ae E26D     		ldr	r2, [r4, #92]
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4230              		.loc 1 1999 40 view .LVU1326
 4231 01b0 1343     		orrs	r3, r3, r2
 4232              	.LVL368:
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4233              		.loc 1 1999 40 view .LVU1327
 4234 01b2 E365     		str	r3, [r4, #92]
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 4235              		.loc 1 2003 5 is_stmt 1 view .LVU1328
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 4236              		.loc 1 2003 8 is_stmt 0 view .LVU1329
 4237 01b4 0029     		cmp	r1, #0
 4238 01b6 7FF44CAF 		bne	.L301
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4239              		.loc 1 2005 7 is_stmt 1 view .LVU1330
 4240 01ba 2168     		ldr	r1, [r4]
 4241 01bc CA6C     		ldr	r2, [r1, #76]
 4242 01be 22F07B42 		bic	r2, r2, #-83886080
 4243 01c2 22F46F02 		bic	r2, r2, #15663104
 4244 01c6 22F43F42 		bic	r2, r2, #48896
 4245 01ca 22F0FF02 		bic	r2, r2, #255
 4246 01ce 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/cc2hwav8.s 			page 249


 4247 01d0 CB64     		str	r3, [r1, #76]
 4248 01d2 3EE7     		b	.L301
 4249              	.LVL369:
 4250              	.L307:
 4251              	.LBB416:
 4252              	.LBI416:
 4253              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  /tmp/cc2hwav8.s 			page 250


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/cc2hwav8.s 			page 251


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 252


 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 253


 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 254


 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 255


 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 256


 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
ARM GAS  /tmp/cc2hwav8.s 			page 257


 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
ARM GAS  /tmp/cc2hwav8.s 			page 258


 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 259


 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
ARM GAS  /tmp/cc2hwav8.s 			page 260


 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc2hwav8.s 			page 261


 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc2hwav8.s 			page 262


 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc2hwav8.s 			page 263


 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/cc2hwav8.s 			page 264


 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc2hwav8.s 			page 265


 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
ARM GAS  /tmp/cc2hwav8.s 			page 266


 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
ARM GAS  /tmp/cc2hwav8.s 			page 267


1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 4254              		.loc 3 1048 31 view .LVU1331
 4255              	.LBB417:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 4256              		.loc 3 1050 3 view .LVU1332
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 4257              		.loc 3 1055 4 view .LVU1333
 4258              		.syntax unified
 4259              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4260 01d4 93FAA3F3 		rbit r3, r3
 4261              	@ 0 "" 2
 4262              	.LVL370:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc2hwav8.s 			page 268


1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 4263              		.loc 3 1068 3 view .LVU1334
 4264              		.loc 3 1068 3 is_stmt 0 view .LVU1335
 4265              		.thumb
 4266              		.syntax unified
 4267              	.LBE417:
 4268              	.LBE416:
 4269              	.LBB418:
 4270              	.LBI418:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 4271              		.loc 3 1078 30 is_stmt 1 view .LVU1336
 4272              	.LBB419:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 4273              		.loc 3 1089 3 view .LVU1337
 4274              		.loc 3 1089 6 is_stmt 0 view .LVU1338
 4275 01d8 33B1     		cbz	r3, .L374
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 4276              		.loc 3 1093 3 is_stmt 1 view .LVU1339
 4277              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1340
 4278 01da B3FA83F3 		clz	r3, r3
 4279              	.LVL371:
 4280              	.L309:
 4281              		.loc 3 1093 10 discriminator 1 view .LVU1341
 4282              	.LBE419:
 4283              	.LBE418:
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
 4284              		.loc 1 2026 104 discriminator 2 view .LVU1342
 4285 01de 03F01F03 		and	r3, r3, #31
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
 4286              		.loc 1 2026 35 discriminator 2 view .LVU1343
 4287 01e2 0121     		movs	r1, #1
 4288 01e4 9940     		lsls	r1, r1, r3
 4289 01e6 43E7     		b	.L308
 4290              	.LVL372:
 4291              	.L374:
ARM GAS  /tmp/cc2hwav8.s 			page 269


 4292              	.LBB421:
 4293              	.LBB420:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4294              		.loc 3 1091 12 view .LVU1344
 4295 01e8 2023     		movs	r3, #32
 4296              	.LVL373:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4297              		.loc 3 1091 12 view .LVU1345
 4298 01ea F8E7     		b	.L309
 4299              	.LVL374:
 4300              	.L310:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4301              		.loc 3 1091 12 view .LVU1346
 4302              	.LBE420:
 4303              	.LBE421:
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
 4304              		.loc 1 2041 7 is_stmt 1 view .LVU1347
 4305 01ec 2268     		ldr	r2, [r4]
 4306 01ee D368     		ldr	r3, [r2, #12]
 4307 01f0 23F44013 		bic	r3, r3, #3145728
 4308 01f4 95F82610 		ldrb	r1, [r5, #38]	@ zero_extendqisi2
 4309 01f8 43EA4153 		orr	r3, r3, r1, lsl #21
 4310 01fc D360     		str	r3, [r2, #12]
 4311 01fe 4CE7     		b	.L306
 4312              	.LVL375:
 4313              	.L389:
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4314              		.loc 1 2069 9 view .LVU1348
 4315 0200 CB68     		ldr	r3, [r1, #12]
 4316 0202 43F00073 		orr	r3, r3, #33554432
 4317 0206 CB60     		str	r3, [r1, #12]
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 4318              		.loc 1 1795 21 is_stmt 0 view .LVU1349
 4319 0208 0027     		movs	r7, #0
 4320 020a 65E7     		b	.L317
 4321              	.L315:
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4322              		.loc 1 2080 7 is_stmt 1 view .LVU1350
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4323              		.loc 1 2080 26 is_stmt 0 view .LVU1351
 4324 020c 95F82570 		ldrb	r7, [r5, #37]	@ zero_extendqisi2
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4325              		.loc 1 2080 10 view .LVU1352
 4326 0210 012F     		cmp	r7, #1
 4327 0212 05D0     		beq	.L392
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4328              		.loc 1 2089 9 is_stmt 1 view .LVU1353
 4329 0214 CB68     		ldr	r3, [r1, #12]
 4330 0216 23F00073 		bic	r3, r3, #33554432
 4331 021a CB60     		str	r3, [r1, #12]
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 4332              		.loc 1 1795 21 is_stmt 0 view .LVU1354
 4333 021c 0027     		movs	r7, #0
 4334 021e 5BE7     		b	.L317
 4335              	.L392:
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4336              		.loc 1 2083 9 is_stmt 1 view .LVU1355
ARM GAS  /tmp/cc2hwav8.s 			page 270


 4337 0220 636D     		ldr	r3, [r4, #84]
 4338 0222 43F02003 		orr	r3, r3, #32
 4339 0226 6365     		str	r3, [r4, #84]
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4340              		.loc 1 2085 9 view .LVU1356
 4341              	.LVL376:
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4342              		.loc 1 2085 9 is_stmt 0 view .LVU1357
 4343 0228 56E7     		b	.L317
 4344              	.LVL377:
 4345              	.L390:
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif
 4346              		.loc 1 2105 7 is_stmt 1 view .LVU1358
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4347              		.loc 1 2107 7 view .LVU1359
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4348              		.loc 1 2110 7 view .LVU1360
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADC_CFGR2_JOVSE |
 4349              		.loc 1 2141 7 view .LVU1361
 4350 022a 2068     		ldr	r0, [r4]
 4351 022c 0269     		ldr	r2, [r0, #16]
 4352              	.LVL378:
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADC_CFGR2_JOVSE |
 4353              		.loc 1 2141 7 is_stmt 0 view .LVU1362
 4354 022e AA4B     		ldr	r3, .L400
 4355 0230 1340     		ands	r3, r3, r2
 4356 0232 6A6B     		ldr	r2, [r5, #52]
 4357 0234 511E     		subs	r1, r2, #1
 4358 0236 AA6B     		ldr	r2, [r5, #56]
 4359 0238 42EA0142 		orr	r2, r2, r1, lsl #16
 4360 023c 1343     		orrs	r3, r3, r2
 4361 023e 43F00203 		orr	r3, r3, #2
 4362 0242 0361     		str	r3, [r0, #16]
 4363 0244 52E7     		b	.L320
 4364              	.L321:
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4365              		.loc 1 2172 26 discriminator 2 view .LVU1363
 4366 0246 6A69     		ldr	r2, [r5, #20]
 4367 0248 D968     		ldr	r1, [r3, #12]
 4368 024a 8908     		lsrs	r1, r1, #2
 4369 024c 01F00401 		and	r1, r1, #4
 4370 0250 4900     		lsls	r1, r1, #1
 4371 0252 8A40     		lsls	r2, r2, r1
 4372 0254 5BE7     		b	.L322
 4373              	.LVL379:
 4374              	.L391:
 4375              		.loc 1 2191 9 discriminator 1 view .LVU1364
 4376 0256 4FF00046 		mov	r6, #-2147483648
 4377 025a 70E7     		b	.L324
 4378              	.LVL380:
 4379              	.L323:
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
ARM GAS  /tmp/cc2hwav8.s 			page 271


2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (hadc->Instance == ADC3)
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)
 4380              		.loc 1 2224 9 is_stmt 1 view .LVU1365
 4381              	.LBB422:
 4382              	.LBI422:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4383              		.loc 2 3454 26 view .LVU1366
 4384              	.LBB423:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4385              		.loc 2 3456 3 view .LVU1367
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4386              		.loc 2 3458 3 view .LVU1368
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4387              		.loc 2 3458 10 is_stmt 0 view .LVU1369
 4388 025c 1A6E     		ldr	r2, [r3, #96]
 4389              	.LVL381:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4390              		.loc 2 3458 10 view .LVU1370
 4391              	.LBE423:
 4392              	.LBE422:
 4393              	.LBB424:
 4394              	.LBI424:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4395              		.loc 2 3454 26 is_stmt 1 view .LVU1371
 4396              	.LBB425:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4397              		.loc 2 3456 3 view .LVU1372
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4398              		.loc 2 3458 3 view .LVU1373
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4399              		.loc 2 3458 10 is_stmt 0 view .LVU1374
 4400 025e 186E     		ldr	r0, [r3, #96]
ARM GAS  /tmp/cc2hwav8.s 			page 272


 4401              	.LVL382:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4402              		.loc 2 3458 10 view .LVU1375
 4403              	.LBE425:
 4404              	.LBE424:
 4405              		.loc 1 2224 13 discriminator 1 view .LVU1376
 4406 0260 C0F38460 		ubfx	r0, r0, #26, #5
 4407              		.loc 1 2224 105 discriminator 4 view .LVU1377
 4408 0264 2968     		ldr	r1, [r5]
 4409 0266 C1F31302 		ubfx	r2, r1, #0, #20
 4410 026a 002A     		cmp	r2, #0
 4411 026c 37D1     		bne	.L325
 4412              		.loc 1 2224 105 discriminator 5 view .LVU1378
 4413 026e C1F38462 		ubfx	r2, r1, #26, #5
 4414              	.L326:
 4415              		.loc 1 2224 12 discriminator 8 view .LVU1379
 4416 0272 9042     		cmp	r0, r2
 4417 0274 3BD0     		beq	.L393
 4418              	.L328:
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffset(hadc->Instance, LL_ADC_OFFSET_1, sConfigInjected->InjectedChannel, LL_AD
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)
 4419              		.loc 1 2228 9 is_stmt 1 view .LVU1380
 4420              		.loc 1 2228 13 is_stmt 0 view .LVU1381
 4421 0276 2068     		ldr	r0, [r4]
 4422              	.LVL383:
 4423              	.LBB426:
 4424              	.LBI426:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4425              		.loc 2 3454 26 is_stmt 1 view .LVU1382
 4426              	.LBB427:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4427              		.loc 2 3456 3 view .LVU1383
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4428              		.loc 2 3458 3 view .LVU1384
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4429              		.loc 2 3458 10 is_stmt 0 view .LVU1385
 4430 0278 436E     		ldr	r3, [r0, #100]
 4431              	.LVL384:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4432              		.loc 2 3458 10 view .LVU1386
 4433              	.LBE427:
 4434              	.LBE426:
 4435              	.LBB428:
 4436              	.LBI428:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4437              		.loc 2 3454 26 is_stmt 1 view .LVU1387
 4438              	.LBB429:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4439              		.loc 2 3456 3 view .LVU1388
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4440              		.loc 2 3458 3 view .LVU1389
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4441              		.loc 2 3458 10 is_stmt 0 view .LVU1390
 4442 027a 416E     		ldr	r1, [r0, #100]
 4443              	.LVL385:
ARM GAS  /tmp/cc2hwav8.s 			page 273


3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4444              		.loc 2 3458 10 view .LVU1391
 4445              	.LBE429:
 4446              	.LBE428:
 4447              		.loc 1 2228 13 discriminator 1 view .LVU1392
 4448 027c C1F38461 		ubfx	r1, r1, #26, #5
 4449              		.loc 1 2228 105 discriminator 4 view .LVU1393
 4450 0280 2A68     		ldr	r2, [r5]
 4451 0282 C2F31303 		ubfx	r3, r2, #0, #20
 4452 0286 002B     		cmp	r3, #0
 4453 0288 39D1     		bne	.L329
 4454              		.loc 1 2228 105 discriminator 5 view .LVU1394
 4455 028a C2F38463 		ubfx	r3, r2, #26, #5
 4456              	.L330:
 4457              		.loc 1 2228 12 discriminator 8 view .LVU1395
 4458 028e 9942     		cmp	r1, r3
 4459 0290 3DD0     		beq	.L394
 4460              	.L332:
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffset(hadc->Instance, LL_ADC_OFFSET_2, sConfigInjected->InjectedChannel, LL_AD
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)
 4461              		.loc 1 2232 9 is_stmt 1 view .LVU1396
 4462              		.loc 1 2232 13 is_stmt 0 view .LVU1397
 4463 0292 2368     		ldr	r3, [r4]
 4464              	.LVL386:
 4465              	.LBB430:
 4466              	.LBI430:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4467              		.loc 2 3454 26 is_stmt 1 view .LVU1398
 4468              	.LBB431:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4469              		.loc 2 3456 3 view .LVU1399
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4470              		.loc 2 3456 31 is_stmt 0 view .LVU1400
 4471 0294 03F16000 		add	r0, r3, #96
 4472              	.LVL387:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4473              		.loc 2 3458 3 is_stmt 1 view .LVU1401
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4474              		.loc 2 3458 10 is_stmt 0 view .LVU1402
 4475 0298 9A6E     		ldr	r2, [r3, #104]
 4476              	.LVL388:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4477              		.loc 2 3458 10 view .LVU1403
 4478              	.LBE431:
 4479              	.LBE430:
 4480              	.LBB432:
 4481              	.LBI432:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4482              		.loc 2 3454 26 is_stmt 1 view .LVU1404
 4483              	.LBB433:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4484              		.loc 2 3456 3 view .LVU1405
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4485              		.loc 2 3458 3 view .LVU1406
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 274


 4486              		.loc 2 3458 10 is_stmt 0 view .LVU1407
 4487 029a 996E     		ldr	r1, [r3, #104]
 4488              	.LVL389:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4489              		.loc 2 3458 10 view .LVU1408
 4490              	.LBE433:
 4491              	.LBE432:
 4492              		.loc 1 2232 13 discriminator 1 view .LVU1409
 4493 029c C1F38461 		ubfx	r1, r1, #26, #5
 4494              		.loc 1 2232 105 discriminator 4 view .LVU1410
 4495 02a0 2A68     		ldr	r2, [r5]
 4496 02a2 C2F31303 		ubfx	r3, r2, #0, #20
 4497 02a6 002B     		cmp	r3, #0
 4498 02a8 39D1     		bne	.L333
 4499              		.loc 1 2232 105 discriminator 5 view .LVU1411
 4500 02aa C2F38463 		ubfx	r3, r2, #26, #5
 4501              	.L334:
 4502              		.loc 1 2232 12 discriminator 8 view .LVU1412
 4503 02ae 9942     		cmp	r1, r3
 4504 02b0 3DD0     		beq	.L395
 4505              	.L336:
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffset(hadc->Instance, LL_ADC_OFFSET_4, sConfigInjected->InjectedChannel, LL_AD
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)
 4506              		.loc 1 2236 9 is_stmt 1 view .LVU1413
 4507              		.loc 1 2236 13 is_stmt 0 view .LVU1414
 4508 02b2 2068     		ldr	r0, [r4]
 4509              	.LVL390:
 4510              	.LBB434:
 4511              	.LBI434:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4512              		.loc 2 3454 26 is_stmt 1 view .LVU1415
 4513              	.LBB435:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4514              		.loc 2 3456 3 view .LVU1416
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4515              		.loc 2 3458 3 view .LVU1417
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4516              		.loc 2 3458 10 is_stmt 0 view .LVU1418
 4517 02b4 C36E     		ldr	r3, [r0, #108]
 4518              	.LVL391:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4519              		.loc 2 3458 10 view .LVU1419
 4520              	.LBE435:
 4521              	.LBE434:
 4522              	.LBB436:
 4523              	.LBI436:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4524              		.loc 2 3454 26 is_stmt 1 view .LVU1420
 4525              	.LBB437:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4526              		.loc 2 3456 3 view .LVU1421
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4527              		.loc 2 3458 3 view .LVU1422
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4528              		.loc 2 3458 10 is_stmt 0 view .LVU1423
ARM GAS  /tmp/cc2hwav8.s 			page 275


 4529 02b6 C16E     		ldr	r1, [r0, #108]
 4530              	.LVL392:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4531              		.loc 2 3458 10 view .LVU1424
 4532              	.LBE437:
 4533              	.LBE436:
 4534              		.loc 1 2236 13 discriminator 1 view .LVU1425
 4535 02b8 C1F38461 		ubfx	r1, r1, #26, #5
 4536              		.loc 1 2236 105 discriminator 4 view .LVU1426
 4537 02bc 2A68     		ldr	r2, [r5]
 4538 02be C2F31303 		ubfx	r3, r2, #0, #20
 4539 02c2 002B     		cmp	r3, #0
 4540 02c4 3BD1     		bne	.L337
 4541              		.loc 1 2236 105 discriminator 5 view .LVU1427
 4542 02c6 C2F38463 		ubfx	r3, r2, #26, #5
 4543              	.L338:
 4544              		.loc 1 2236 12 discriminator 8 view .LVU1428
 4545 02ca 9942     		cmp	r1, r3
 4546 02cc 40D1     		bne	.L313
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffset(hadc->Instance, LL_ADC_OFFSET_4, sConfigInjected->InjectedChannel, LL_AD
 4547              		.loc 1 2238 11 is_stmt 1 view .LVU1429
 4548              	.LVL393:
 4549              	.LBB438:
 4550              	.LBI438:
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4551              		.loc 2 3372 22 view .LVU1430
 4552              	.LBB439:
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 4553              		.loc 2 3374 3 view .LVU1431
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4554              		.loc 2 3385 5 view .LVU1432
 4555 02ce C36E     		ldr	r3, [r0, #108]
 4556 02d0 03F00043 		and	r3, r3, #-2147483648
 4557 02d4 02F0F842 		and	r2, r2, #2080374784
 4558              	.LVL394:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4559              		.loc 2 3385 5 is_stmt 0 view .LVU1433
 4560 02d8 1343     		orrs	r3, r3, r2
 4561 02da C366     		str	r3, [r0, #108]
 4562              	.LVL395:
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4563              		.loc 2 3389 1 view .LVU1434
 4564 02dc 38E0     		b	.L313
 4565              	.L325:
 4566              	.LVL396:
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4567              		.loc 2 3389 1 view .LVU1435
 4568              	.LBE439:
 4569              	.LBE438:
 4570              	.LBB440:
 4571              	.LBI440:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4572              		.loc 3 1048 31 is_stmt 1 view .LVU1436
 4573              	.LBB441:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4574              		.loc 3 1050 3 view .LVU1437
ARM GAS  /tmp/cc2hwav8.s 			page 276


1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4575              		.loc 3 1055 4 view .LVU1438
 4576              		.syntax unified
 4577              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4578 02de 91FAA1F2 		rbit r2, r1
 4579              	@ 0 "" 2
 4580              	.LVL397:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4581              		.loc 3 1068 3 view .LVU1439
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4582              		.loc 3 1068 3 is_stmt 0 view .LVU1440
 4583              		.thumb
 4584              		.syntax unified
 4585              	.LBE441:
 4586              	.LBE440:
 4587              	.LBB442:
 4588              	.LBI442:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4589              		.loc 3 1078 30 is_stmt 1 view .LVU1441
 4590              	.LBB443:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4591              		.loc 3 1089 3 view .LVU1442
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4592              		.loc 3 1089 6 is_stmt 0 view .LVU1443
 4593 02e2 12B1     		cbz	r2, .L376
 4594              		.loc 3 1093 3 is_stmt 1 view .LVU1444
 4595              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1445
 4596 02e4 B2FA82F2 		clz	r2, r2
 4597              	.LVL398:
 4598              		.loc 3 1093 10 view .LVU1446
 4599 02e8 C3E7     		b	.L326
 4600              	.LVL399:
 4601              	.L376:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4602              		.loc 3 1091 12 view .LVU1447
 4603 02ea 2022     		movs	r2, #32
 4604              	.LVL400:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4605              		.loc 3 1091 12 view .LVU1448
 4606 02ec C1E7     		b	.L326
 4607              	.L393:
 4608              	.LBE443:
 4609              	.LBE442:
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 4610              		.loc 1 2226 11 is_stmt 1 view .LVU1449
 4611              	.LVL401:
 4612              	.LBB444:
 4613              	.LBI444:
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4614              		.loc 2 3372 22 view .LVU1450
 4615              	.LBB445:
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 4616              		.loc 2 3374 3 view .LVU1451
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4617              		.loc 2 3385 5 view .LVU1452
 4618 02ee 1A6E     		ldr	r2, [r3, #96]
 4619 02f0 02F00042 		and	r2, r2, #-2147483648
ARM GAS  /tmp/cc2hwav8.s 			page 277


 4620 02f4 01F0F841 		and	r1, r1, #2080374784
 4621              	.LVL402:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4622              		.loc 2 3385 5 is_stmt 0 view .LVU1453
 4623 02f8 0A43     		orrs	r2, r2, r1
 4624 02fa 1A66     		str	r2, [r3, #96]
 4625              	.LVL403:
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4626              		.loc 2 3389 1 view .LVU1454
 4627 02fc BBE7     		b	.L328
 4628              	.L329:
 4629              	.LVL404:
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4630              		.loc 2 3389 1 view .LVU1455
 4631              	.LBE445:
 4632              	.LBE444:
 4633              	.LBB446:
 4634              	.LBI446:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4635              		.loc 3 1048 31 is_stmt 1 view .LVU1456
 4636              	.LBB447:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4637              		.loc 3 1050 3 view .LVU1457
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4638              		.loc 3 1055 4 view .LVU1458
 4639              		.syntax unified
 4640              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4641 02fe 92FAA2F3 		rbit r3, r2
 4642              	@ 0 "" 2
 4643              	.LVL405:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4644              		.loc 3 1068 3 view .LVU1459
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4645              		.loc 3 1068 3 is_stmt 0 view .LVU1460
 4646              		.thumb
 4647              		.syntax unified
 4648              	.LBE447:
 4649              	.LBE446:
 4650              	.LBB448:
 4651              	.LBI448:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4652              		.loc 3 1078 30 is_stmt 1 view .LVU1461
 4653              	.LBB449:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4654              		.loc 3 1089 3 view .LVU1462
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4655              		.loc 3 1089 6 is_stmt 0 view .LVU1463
 4656 0302 13B1     		cbz	r3, .L377
 4657              		.loc 3 1093 3 is_stmt 1 view .LVU1464
 4658              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1465
 4659 0304 B3FA83F3 		clz	r3, r3
 4660              	.LVL406:
 4661              		.loc 3 1093 10 view .LVU1466
 4662 0308 C1E7     		b	.L330
 4663              	.LVL407:
 4664              	.L377:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/cc2hwav8.s 			page 278


 4665              		.loc 3 1091 12 view .LVU1467
 4666 030a 2023     		movs	r3, #32
 4667              	.LVL408:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4668              		.loc 3 1091 12 view .LVU1468
 4669 030c BFE7     		b	.L330
 4670              	.L394:
 4671              	.LBE449:
 4672              	.LBE448:
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 4673              		.loc 1 2230 11 is_stmt 1 view .LVU1469
 4674              	.LVL409:
 4675              	.LBB450:
 4676              	.LBI450:
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4677              		.loc 2 3372 22 view .LVU1470
 4678              	.LBB451:
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 4679              		.loc 2 3374 3 view .LVU1471
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4680              		.loc 2 3385 5 view .LVU1472
 4681 030e 436E     		ldr	r3, [r0, #100]
 4682 0310 03F00043 		and	r3, r3, #-2147483648
 4683 0314 02F0F842 		and	r2, r2, #2080374784
 4684              	.LVL410:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4685              		.loc 2 3385 5 is_stmt 0 view .LVU1473
 4686 0318 1343     		orrs	r3, r3, r2
 4687 031a 4366     		str	r3, [r0, #100]
 4688              	.LVL411:
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4689              		.loc 2 3389 1 view .LVU1474
 4690 031c B9E7     		b	.L332
 4691              	.L333:
 4692              	.LVL412:
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4693              		.loc 2 3389 1 view .LVU1475
 4694              	.LBE451:
 4695              	.LBE450:
 4696              	.LBB452:
 4697              	.LBI452:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4698              		.loc 3 1048 31 is_stmt 1 view .LVU1476
 4699              	.LBB453:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4700              		.loc 3 1050 3 view .LVU1477
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4701              		.loc 3 1055 4 view .LVU1478
 4702              		.syntax unified
 4703              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4704 031e 92FAA2F3 		rbit r3, r2
 4705              	@ 0 "" 2
 4706              	.LVL413:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4707              		.loc 3 1068 3 view .LVU1479
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4708              		.loc 3 1068 3 is_stmt 0 view .LVU1480
ARM GAS  /tmp/cc2hwav8.s 			page 279


 4709              		.thumb
 4710              		.syntax unified
 4711              	.LBE453:
 4712              	.LBE452:
 4713              	.LBB454:
 4714              	.LBI454:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4715              		.loc 3 1078 30 is_stmt 1 view .LVU1481
 4716              	.LBB455:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4717              		.loc 3 1089 3 view .LVU1482
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4718              		.loc 3 1089 6 is_stmt 0 view .LVU1483
 4719 0322 13B1     		cbz	r3, .L378
 4720              		.loc 3 1093 3 is_stmt 1 view .LVU1484
 4721              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1485
 4722 0324 B3FA83F3 		clz	r3, r3
 4723              	.LVL414:
 4724              		.loc 3 1093 10 view .LVU1486
 4725 0328 C1E7     		b	.L334
 4726              	.LVL415:
 4727              	.L378:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4728              		.loc 3 1091 12 view .LVU1487
 4729 032a 2023     		movs	r3, #32
 4730              	.LVL416:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4731              		.loc 3 1091 12 view .LVU1488
 4732 032c BFE7     		b	.L334
 4733              	.L395:
 4734              	.LBE455:
 4735              	.LBE454:
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 4736              		.loc 1 2234 11 is_stmt 1 view .LVU1489
 4737              	.LVL417:
 4738              	.LBB456:
 4739              	.LBI456:
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4740              		.loc 2 3372 22 view .LVU1490
 4741              	.LBB457:
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 4742              		.loc 2 3374 3 view .LVU1491
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4743              		.loc 2 3385 5 view .LVU1492
 4744 032e C368     		ldr	r3, [r0, #12]
 4745 0330 03F00043 		and	r3, r3, #-2147483648
 4746 0334 02F0F842 		and	r2, r2, #2080374784
 4747              	.LVL418:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4748              		.loc 2 3385 5 is_stmt 0 view .LVU1493
 4749 0338 1343     		orrs	r3, r3, r2
 4750 033a C360     		str	r3, [r0, #12]
 4751              	.LVL419:
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4752              		.loc 2 3389 1 view .LVU1494
 4753 033c B9E7     		b	.L336
 4754              	.L337:
ARM GAS  /tmp/cc2hwav8.s 			page 280


 4755              	.LVL420:
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4756              		.loc 2 3389 1 view .LVU1495
 4757              	.LBE457:
 4758              	.LBE456:
 4759              	.LBB458:
 4760              	.LBI458:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4761              		.loc 3 1048 31 is_stmt 1 view .LVU1496
 4762              	.LBB459:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4763              		.loc 3 1050 3 view .LVU1497
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4764              		.loc 3 1055 4 view .LVU1498
 4765              		.syntax unified
 4766              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4767 033e 92FAA2F3 		rbit r3, r2
 4768              	@ 0 "" 2
 4769              	.LVL421:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4770              		.loc 3 1068 3 view .LVU1499
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4771              		.loc 3 1068 3 is_stmt 0 view .LVU1500
 4772              		.thumb
 4773              		.syntax unified
 4774              	.LBE459:
 4775              	.LBE458:
 4776              	.LBB460:
 4777              	.LBI460:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4778              		.loc 3 1078 30 is_stmt 1 view .LVU1501
 4779              	.LBB461:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4780              		.loc 3 1089 3 view .LVU1502
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4781              		.loc 3 1089 6 is_stmt 0 view .LVU1503
 4782 0342 13B1     		cbz	r3, .L379
 4783              		.loc 3 1093 3 is_stmt 1 view .LVU1504
 4784              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1505
 4785 0344 B3FA83F3 		clz	r3, r3
 4786              	.LVL422:
 4787              		.loc 3 1093 10 view .LVU1506
 4788 0348 BFE7     		b	.L338
 4789              	.LVL423:
 4790              	.L379:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4791              		.loc 3 1091 12 view .LVU1507
 4792 034a 2023     		movs	r3, #32
 4793              	.LVL424:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4794              		.loc 3 1091 12 view .LVU1508
 4795 034c BDE7     		b	.L338
 4796              	.LVL425:
 4797              	.L375:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4798              		.loc 3 1091 12 view .LVU1509
 4799              	.LBE461:
ARM GAS  /tmp/cc2hwav8.s 			page 281


 4800              	.LBE460:
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 4801              		.loc 1 1795 21 view .LVU1510
 4802 034e 0027     		movs	r7, #0
 4803              	.LVL426:
 4804              	.L313:
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 4805              		.loc 1 2249 3 is_stmt 1 view .LVU1511
 4806              		.loc 1 2249 7 is_stmt 0 view .LVU1512
 4807 0350 2168     		ldr	r1, [r4]
 4808              	.LVL427:
 4809              	.LBB462:
 4810              	.LBI462:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4811              		.loc 2 6920 26 is_stmt 1 view .LVU1513
 4812              	.LBB463:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4813              		.loc 2 6922 3 view .LVU1514
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4814              		.loc 2 6922 12 is_stmt 0 view .LVU1515
 4815 0352 8B68     		ldr	r3, [r1, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4816              		.loc 2 6922 68 view .LVU1516
 4817 0354 13F0010F 		tst	r3, #1
 4818 0358 19D1     		bne	.L340
 4819              	.LVL428:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4820              		.loc 2 6922 68 view .LVU1517
 4821              	.LBE463:
 4822              	.LBE462:
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set mode single-ended or differential input of the selected ADC channel */
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInjected->
 4823              		.loc 1 2252 5 is_stmt 1 view .LVU1518
 4824 035a 2B68     		ldr	r3, [r5]
 4825 035c E868     		ldr	r0, [r5, #12]
 4826              	.LVL429:
 4827              	.LBB464:
 4828              	.LBI464:
5548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4829              		.loc 2 5548 22 view .LVU1519
 4830              	.LBB465:
5570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 4831              		.loc 2 5570 3 view .LVU1520
 4832 035e D1F8C020 		ldr	r2, [r1, #192]
 4833 0362 C3F31306 		ubfx	r6, r3, #0, #20
 4834 0366 22EA0602 		bic	r2, r2, r6
ARM GAS  /tmp/cc2hwav8.s 			page 282


 4835 036a 00F01806 		and	r6, r0, #24
 4836 036e 5B48     		ldr	r0, .L400+4
 4837              	.LVL430:
5570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 4838              		.loc 2 5570 3 is_stmt 0 view .LVU1521
 4839 0370 F040     		lsrs	r0, r0, r6
 4840 0372 0340     		ands	r3, r3, r0
 4841              	.LVL431:
5570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 4842              		.loc 2 5570 3 view .LVU1522
 4843 0374 C3F31303 		ubfx	r3, r3, #0, #20
 4844 0378 1343     		orrs	r3, r3, r2
 4845 037a C1F8C030 		str	r3, [r1, #192]
 4846              	.LVL432:
5570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 4847              		.loc 2 5570 3 view .LVU1523
 4848              	.LBE465:
 4849              	.LBE464:
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Configuration of differential mode */
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSingleDiff == ADC_DIFFERENTIAL_ENDED)
 4850              		.loc 1 2256 5 is_stmt 1 view .LVU1524
 4851              		.loc 1 2256 24 is_stmt 0 view .LVU1525
 4852 037e EA68     		ldr	r2, [r5, #12]
 4853              		.loc 1 2256 8 view .LVU1526
 4854 0380 574B     		ldr	r3, .L400+8
 4855 0382 9A42     		cmp	r2, r3
 4856 0384 09D0     		beq	.L396
 4857              	.L341:
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor   */
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* internal measurement paths enable: If internal channel selected,       */
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* enable dedicated internal buffers and path.                            */
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: these internal measurement paths can be disabled using           */
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* HAL_ADC_DeInit().                                                      */
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfigInjected->InjectedChannel))
 4858              		.loc 1 2268 5 is_stmt 1 view .LVU1527
 4859              		.loc 1 2268 9 is_stmt 0 view .LVU1528
 4860 0386 2A68     		ldr	r2, [r5]
 4861              		.loc 1 2268 8 view .LVU1529
 4862 0388 002A     		cmp	r2, #0
 4863 038a C0F2BC80 		blt	.L397
 4864              	.LVL433:
 4865              	.L340:
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Configuration of common ADC parameters (continuation)                */
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Software is allowed to change common parameters only when all ADCs   */
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* of the common group are disabled.                                    */
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
ARM GAS  /tmp/cc2hwav8.s 			page 283


2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* If the requested internal measurement path has already been enabled, */
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* bypass the configuration processing.                                 */
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_c
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_IN
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             /* Delay for temperature sensor stabilization time */
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             /* Wait loop initialization and execution */
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             /* Note: Variable divided by 2 to compensate partially              */
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             /*       CPU processing cycles, scaling in us split to not          */
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             /*       exceed 32 bits register capacity and handle low frequency. */
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (1000
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             {
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****               wait_loop_index--;
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             }
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_ch
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_IN
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           if (ADC_VREFINT_INSTANCE(hadc))
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_IN
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* nothing to do */
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If the requested internal measurement path has already been enabled  */
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* and other ADC of the common group are enabled, internal              */
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* measurement paths cannot be enabled.                                 */
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 4866              		.loc 1 2331 3 is_stmt 1 view .LVU1530
ARM GAS  /tmp/cc2hwav8.s 			page 284


 4867              		.loc 1 2331 3 view .LVU1531
 4868 038e 0023     		movs	r3, #0
 4869 0390 84F85030 		strb	r3, [r4, #80]
 4870              		.loc 1 2331 3 view .LVU1532
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 4871              		.loc 1 2334 3 view .LVU1533
 4872              	.LVL434:
 4873              	.L298:
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 4874              		.loc 1 2335 1 is_stmt 0 view .LVU1534
 4875 0394 3846     		mov	r0, r7
 4876 0396 03B0     		add	sp, sp, #12
 4877              	.LCFI41:
 4878              		.cfi_remember_state
 4879              		.cfi_def_cfa_offset 20
 4880              		@ sp needed
 4881 0398 F0BD     		pop	{r4, r5, r6, r7, pc}
 4882              	.LVL435:
 4883              	.L396:
 4884              	.LCFI42:
 4885              		.cfi_restore_state
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4886              		.loc 1 2259 7 is_stmt 1 view .LVU1535
 4887 039a 2068     		ldr	r0, [r4]
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4888              		.loc 1 2259 64 is_stmt 0 view .LVU1536
 4889 039c 2B68     		ldr	r3, [r5]
 4890 039e C3F31306 		ubfx	r6, r3, #0, #20
 4891 03a2 3EBB     		cbnz	r6, .L342
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4892              		.loc 1 2259 64 discriminator 1 view .LVU1537
 4893 03a4 9A0E     		lsrs	r2, r3, #26
 4894 03a6 0132     		adds	r2, r2, #1
 4895 03a8 02F01F02 		and	r2, r2, #31
 4896 03ac 092A     		cmp	r2, #9
 4897 03ae 8CBF     		ite	hi
 4898 03b0 0022     		movhi	r2, #0
 4899 03b2 0122     		movls	r2, #1
 4900              	.L343:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4901              		.loc 1 2259 7 discriminator 4 view .LVU1538
 4902 03b4 002A     		cmp	r2, #0
 4903 03b6 55D0     		beq	.L345
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4904              		.loc 1 2259 64 discriminator 5 view .LVU1539
 4905 03b8 5EBB     		cbnz	r6, .L346
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4906              		.loc 1 2259 64 discriminator 7 view .LVU1540
 4907 03ba 990E     		lsrs	r1, r3, #26
 4908 03bc 0131     		adds	r1, r1, #1
 4909 03be 8906     		lsls	r1, r1, #26
 4910 03c0 01F0F841 		and	r1, r1, #2080374784
 4911              	.L347:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4912              		.loc 1 2259 64 discriminator 10 view .LVU1541
ARM GAS  /tmp/cc2hwav8.s 			page 285


 4913 03c4 8EBB     		cbnz	r6, .L349
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4914              		.loc 1 2259 64 discriminator 11 view .LVU1542
 4915 03c6 4FEA936C 		lsr	ip, r3, #26
 4916 03ca 0CF1010C 		add	ip, ip, #1
 4917 03ce 0CF01F0C 		and	ip, ip, #31
 4918 03d2 0122     		movs	r2, #1
 4919 03d4 02FA0CF2 		lsl	r2, r2, ip
 4920              	.L350:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4921              		.loc 1 2259 64 discriminator 14 view .LVU1543
 4922 03d8 1143     		orrs	r1, r1, r2
 4923 03da AEBB     		cbnz	r6, .L352
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4924              		.loc 1 2259 64 discriminator 15 view .LVU1544
 4925 03dc 9B0E     		lsrs	r3, r3, #26
 4926 03de 0133     		adds	r3, r3, #1
 4927 03e0 03F01F03 		and	r3, r3, #31
 4928 03e4 03EB4303 		add	r3, r3, r3, lsl #1
 4929 03e8 1B05     		lsls	r3, r3, #20
 4930              	.L353:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4931              		.loc 1 2259 7 discriminator 18 view .LVU1545
 4932 03ea 1943     		orrs	r1, r1, r3
 4933              	.L355:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4934              		.loc 1 2259 7 discriminator 32 view .LVU1546
 4935 03ec AA68     		ldr	r2, [r5, #8]
 4936 03ee FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
 4937              	.LVL436:
 4938 03f2 C8E7     		b	.L341
 4939              	.L342:
 4940              	.LVL437:
 4941              	.LBB466:
 4942              	.LBI466:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4943              		.loc 3 1048 31 is_stmt 1 view .LVU1547
 4944              	.LBB467:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4945              		.loc 3 1050 3 view .LVU1548
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4946              		.loc 3 1055 4 view .LVU1549
 4947              		.syntax unified
 4948              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4949 03f4 93FAA3F2 		rbit r2, r3
 4950              	@ 0 "" 2
 4951              	.LVL438:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4952              		.loc 3 1068 3 view .LVU1550
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4953              		.loc 3 1068 3 is_stmt 0 view .LVU1551
 4954              		.thumb
 4955              		.syntax unified
 4956              	.LBE467:
 4957              	.LBE466:
 4958              	.LBB468:
 4959              	.LBI468:
ARM GAS  /tmp/cc2hwav8.s 			page 286


1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4960              		.loc 3 1078 30 is_stmt 1 view .LVU1552
 4961              	.LBB469:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4962              		.loc 3 1089 3 view .LVU1553
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4963              		.loc 3 1089 6 is_stmt 0 view .LVU1554
 4964 03f8 4AB1     		cbz	r2, .L380
 4965              		.loc 3 1093 3 is_stmt 1 view .LVU1555
 4966              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1556
 4967 03fa B2FA82F2 		clz	r2, r2
 4968              	.LVL439:
 4969              	.L344:
 4970              		.loc 3 1093 10 discriminator 1 view .LVU1557
 4971              	.LBE469:
 4972              	.LBE468:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4973              		.loc 1 2259 64 discriminator 2 view .LVU1558
 4974 03fe 0132     		adds	r2, r2, #1
 4975 0400 02F01F02 		and	r2, r2, #31
 4976 0404 092A     		cmp	r2, #9
 4977 0406 8CBF     		ite	hi
 4978 0408 0022     		movhi	r2, #0
 4979 040a 0122     		movls	r2, #1
 4980 040c D2E7     		b	.L343
 4981              	.LVL440:
 4982              	.L380:
 4983              	.LBB471:
 4984              	.LBB470:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4985              		.loc 3 1091 12 view .LVU1559
 4986 040e 2022     		movs	r2, #32
 4987              	.LVL441:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4988              		.loc 3 1091 12 view .LVU1560
 4989 0410 F5E7     		b	.L344
 4990              	.LVL442:
 4991              	.L346:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4992              		.loc 3 1091 12 view .LVU1561
 4993              	.LBE470:
 4994              	.LBE471:
 4995              	.LBB472:
 4996              	.LBI472:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4997              		.loc 3 1048 31 is_stmt 1 view .LVU1562
 4998              	.LBB473:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4999              		.loc 3 1050 3 view .LVU1563
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5000              		.loc 3 1055 4 view .LVU1564
 5001              		.syntax unified
 5002              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5003 0412 93FAA3F1 		rbit r1, r3
 5004              	@ 0 "" 2
 5005              	.LVL443:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 287


 5006              		.loc 3 1068 3 view .LVU1565
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5007              		.loc 3 1068 3 is_stmt 0 view .LVU1566
 5008              		.thumb
 5009              		.syntax unified
 5010              	.LBE473:
 5011              	.LBE472:
 5012              	.LBB474:
 5013              	.LBI474:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5014              		.loc 3 1078 30 is_stmt 1 view .LVU1567
 5015              	.LBB475:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5016              		.loc 3 1089 3 view .LVU1568
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5017              		.loc 3 1089 6 is_stmt 0 view .LVU1569
 5018 0416 31B1     		cbz	r1, .L381
 5019              		.loc 3 1093 3 is_stmt 1 view .LVU1570
 5020              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1571
 5021 0418 B1FA81F1 		clz	r1, r1
 5022              	.LVL444:
 5023              	.L348:
 5024              		.loc 3 1093 10 discriminator 1 view .LVU1572
 5025              	.LBE475:
 5026              	.LBE474:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5027              		.loc 1 2259 64 discriminator 2 view .LVU1573
 5028 041c 0131     		adds	r1, r1, #1
 5029 041e 8906     		lsls	r1, r1, #26
 5030 0420 01F0F841 		and	r1, r1, #2080374784
 5031 0424 CEE7     		b	.L347
 5032              	.LVL445:
 5033              	.L381:
 5034              	.LBB477:
 5035              	.LBB476:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5036              		.loc 3 1091 12 view .LVU1574
 5037 0426 2021     		movs	r1, #32
 5038              	.LVL446:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5039              		.loc 3 1091 12 view .LVU1575
 5040 0428 F8E7     		b	.L348
 5041              	.LVL447:
 5042              	.L349:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5043              		.loc 3 1091 12 view .LVU1576
 5044              	.LBE476:
 5045              	.LBE477:
 5046              	.LBB478:
 5047              	.LBI478:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5048              		.loc 3 1048 31 is_stmt 1 view .LVU1577
 5049              	.LBB479:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5050              		.loc 3 1050 3 view .LVU1578
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5051              		.loc 3 1055 4 view .LVU1579
ARM GAS  /tmp/cc2hwav8.s 			page 288


 5052              		.syntax unified
 5053              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5054 042a 93FAA3F2 		rbit r2, r3
 5055              	@ 0 "" 2
 5056              	.LVL448:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5057              		.loc 3 1068 3 view .LVU1580
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5058              		.loc 3 1068 3 is_stmt 0 view .LVU1581
 5059              		.thumb
 5060              		.syntax unified
 5061              	.LBE479:
 5062              	.LBE478:
 5063              	.LBB480:
 5064              	.LBI480:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5065              		.loc 3 1078 30 is_stmt 1 view .LVU1582
 5066              	.LBB481:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5067              		.loc 3 1089 3 view .LVU1583
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5068              		.loc 3 1089 6 is_stmt 0 view .LVU1584
 5069 042e 4AB1     		cbz	r2, .L382
 5070              		.loc 3 1093 3 is_stmt 1 view .LVU1585
 5071              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1586
 5072 0430 B2FA82F2 		clz	r2, r2
 5073              	.LVL449:
 5074              	.L351:
 5075              		.loc 3 1093 10 discriminator 1 view .LVU1587
 5076              	.LBE481:
 5077              	.LBE480:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5078              		.loc 1 2259 64 discriminator 2 view .LVU1588
 5079 0434 0132     		adds	r2, r2, #1
 5080 0436 02F01F02 		and	r2, r2, #31
 5081 043a 4FF0010C 		mov	ip, #1
 5082 043e 0CFA02F2 		lsl	r2, ip, r2
 5083 0442 C9E7     		b	.L350
 5084              	.LVL450:
 5085              	.L382:
 5086              	.LBB483:
 5087              	.LBB482:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5088              		.loc 3 1091 12 view .LVU1589
 5089 0444 2022     		movs	r2, #32
 5090              	.LVL451:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5091              		.loc 3 1091 12 view .LVU1590
 5092 0446 F5E7     		b	.L351
 5093              	.LVL452:
 5094              	.L352:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5095              		.loc 3 1091 12 view .LVU1591
 5096              	.LBE482:
 5097              	.LBE483:
 5098              	.LBB484:
 5099              	.LBI484:
ARM GAS  /tmp/cc2hwav8.s 			page 289


1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5100              		.loc 3 1048 31 is_stmt 1 view .LVU1592
 5101              	.LBB485:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5102              		.loc 3 1050 3 view .LVU1593
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5103              		.loc 3 1055 4 view .LVU1594
 5104              		.syntax unified
 5105              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5106 0448 93FAA3F3 		rbit r3, r3
 5107              	@ 0 "" 2
 5108              	.LVL453:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5109              		.loc 3 1068 3 view .LVU1595
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5110              		.loc 3 1068 3 is_stmt 0 view .LVU1596
 5111              		.thumb
 5112              		.syntax unified
 5113              	.LBE485:
 5114              	.LBE484:
 5115              	.LBB486:
 5116              	.LBI486:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5117              		.loc 3 1078 30 is_stmt 1 view .LVU1597
 5118              	.LBB487:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5119              		.loc 3 1089 3 view .LVU1598
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5120              		.loc 3 1089 6 is_stmt 0 view .LVU1599
 5121 044c 43B1     		cbz	r3, .L383
 5122              		.loc 3 1093 3 is_stmt 1 view .LVU1600
 5123              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1601
 5124 044e B3FA83F3 		clz	r3, r3
 5125              	.LVL454:
 5126              	.L354:
 5127              		.loc 3 1093 10 discriminator 1 view .LVU1602
 5128              	.LBE487:
 5129              	.LBE486:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5130              		.loc 1 2259 64 discriminator 2 view .LVU1603
 5131 0452 0133     		adds	r3, r3, #1
 5132 0454 03F01F03 		and	r3, r3, #31
 5133 0458 03EB4303 		add	r3, r3, r3, lsl #1
 5134 045c 1B05     		lsls	r3, r3, #20
 5135 045e C4E7     		b	.L353
 5136              	.LVL455:
 5137              	.L383:
 5138              	.LBB489:
 5139              	.LBB488:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5140              		.loc 3 1091 12 view .LVU1604
 5141 0460 2023     		movs	r3, #32
 5142              	.LVL456:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5143              		.loc 3 1091 12 view .LVU1605
 5144 0462 F6E7     		b	.L354
 5145              	.LVL457:
ARM GAS  /tmp/cc2hwav8.s 			page 290


 5146              	.L345:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5147              		.loc 3 1091 12 view .LVU1606
 5148              	.LBE488:
 5149              	.LBE489:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5150              		.loc 1 2259 64 discriminator 6 view .LVU1607
 5151 0464 E6B9     		cbnz	r6, .L356
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5152              		.loc 1 2259 64 discriminator 20 view .LVU1608
 5153 0466 990E     		lsrs	r1, r3, #26
 5154 0468 0131     		adds	r1, r1, #1
 5155 046a 8906     		lsls	r1, r1, #26
 5156 046c 01F0F841 		and	r1, r1, #2080374784
 5157              	.L357:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5158              		.loc 1 2259 64 discriminator 23 view .LVU1609
 5159 0470 16BB     		cbnz	r6, .L359
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5160              		.loc 1 2259 64 discriminator 24 view .LVU1610
 5161 0472 4FEA936C 		lsr	ip, r3, #26
 5162 0476 0CF1010C 		add	ip, ip, #1
 5163 047a 0CF01F0C 		and	ip, ip, #31
 5164 047e 0122     		movs	r2, #1
 5165 0480 02FA0CF2 		lsl	r2, r2, ip
 5166              	.L360:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5167              		.loc 1 2259 64 discriminator 27 view .LVU1611
 5168 0484 1143     		orrs	r1, r1, r2
 5169 0486 6EBB     		cbnz	r6, .L362
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5170              		.loc 1 2259 64 discriminator 28 view .LVU1612
 5171 0488 9B0E     		lsrs	r3, r3, #26
 5172 048a 0133     		adds	r3, r3, #1
 5173 048c 03F01F03 		and	r3, r3, #31
 5174 0490 03EB4303 		add	r3, r3, r3, lsl #1
 5175 0494 1E3B     		subs	r3, r3, #30
 5176 0496 1B05     		lsls	r3, r3, #20
 5177 0498 43F00073 		orr	r3, r3, #33554432
 5178              	.L363:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5179              		.loc 1 2259 7 discriminator 31 view .LVU1613
 5180 049c 1943     		orrs	r1, r1, r3
 5181 049e A5E7     		b	.L355
 5182              	.L356:
 5183              	.LVL458:
 5184              	.LBB490:
 5185              	.LBI490:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5186              		.loc 3 1048 31 is_stmt 1 view .LVU1614
 5187              	.LBB491:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5188              		.loc 3 1050 3 view .LVU1615
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5189              		.loc 3 1055 4 view .LVU1616
 5190              		.syntax unified
 5191              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cc2hwav8.s 			page 291


 5192 04a0 93FAA3F1 		rbit r1, r3
 5193              	@ 0 "" 2
 5194              	.LVL459:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5195              		.loc 3 1068 3 view .LVU1617
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5196              		.loc 3 1068 3 is_stmt 0 view .LVU1618
 5197              		.thumb
 5198              		.syntax unified
 5199              	.LBE491:
 5200              	.LBE490:
 5201              	.LBB492:
 5202              	.LBI492:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5203              		.loc 3 1078 30 is_stmt 1 view .LVU1619
 5204              	.LBB493:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5205              		.loc 3 1089 3 view .LVU1620
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5206              		.loc 3 1089 6 is_stmt 0 view .LVU1621
 5207 04a4 31B1     		cbz	r1, .L384
 5208              		.loc 3 1093 3 is_stmt 1 view .LVU1622
 5209              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1623
 5210 04a6 B1FA81F1 		clz	r1, r1
 5211              	.LVL460:
 5212              	.L358:
 5213              		.loc 3 1093 10 discriminator 1 view .LVU1624
 5214              	.LBE493:
 5215              	.LBE492:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5216              		.loc 1 2259 64 discriminator 2 view .LVU1625
 5217 04aa 0131     		adds	r1, r1, #1
 5218 04ac 8906     		lsls	r1, r1, #26
 5219 04ae 01F0F841 		and	r1, r1, #2080374784
 5220 04b2 DDE7     		b	.L357
 5221              	.LVL461:
 5222              	.L384:
 5223              	.LBB495:
 5224              	.LBB494:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5225              		.loc 3 1091 12 view .LVU1626
 5226 04b4 2021     		movs	r1, #32
 5227              	.LVL462:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5228              		.loc 3 1091 12 view .LVU1627
 5229 04b6 F8E7     		b	.L358
 5230              	.LVL463:
 5231              	.L359:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5232              		.loc 3 1091 12 view .LVU1628
 5233              	.LBE494:
 5234              	.LBE495:
 5235              	.LBB496:
 5236              	.LBI496:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5237              		.loc 3 1048 31 is_stmt 1 view .LVU1629
 5238              	.LBB497:
ARM GAS  /tmp/cc2hwav8.s 			page 292


1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5239              		.loc 3 1050 3 view .LVU1630
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5240              		.loc 3 1055 4 view .LVU1631
 5241              		.syntax unified
 5242              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5243 04b8 93FAA3F2 		rbit r2, r3
 5244              	@ 0 "" 2
 5245              	.LVL464:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5246              		.loc 3 1068 3 view .LVU1632
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5247              		.loc 3 1068 3 is_stmt 0 view .LVU1633
 5248              		.thumb
 5249              		.syntax unified
 5250              	.LBE497:
 5251              	.LBE496:
 5252              	.LBB498:
 5253              	.LBI498:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5254              		.loc 3 1078 30 is_stmt 1 view .LVU1634
 5255              	.LBB499:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5256              		.loc 3 1089 3 view .LVU1635
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5257              		.loc 3 1089 6 is_stmt 0 view .LVU1636
 5258 04bc 4AB1     		cbz	r2, .L385
 5259              		.loc 3 1093 3 is_stmt 1 view .LVU1637
 5260              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1638
 5261 04be B2FA82F2 		clz	r2, r2
 5262              	.LVL465:
 5263              	.L361:
 5264              		.loc 3 1093 10 discriminator 1 view .LVU1639
 5265              	.LBE499:
 5266              	.LBE498:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5267              		.loc 1 2259 64 discriminator 2 view .LVU1640
 5268 04c2 0132     		adds	r2, r2, #1
 5269 04c4 02F01F02 		and	r2, r2, #31
 5270 04c8 4FF0010C 		mov	ip, #1
 5271 04cc 0CFA02F2 		lsl	r2, ip, r2
 5272 04d0 D8E7     		b	.L360
 5273              	.LVL466:
 5274              	.L385:
 5275              	.LBB501:
 5276              	.LBB500:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5277              		.loc 3 1091 12 view .LVU1641
 5278 04d2 2022     		movs	r2, #32
 5279              	.LVL467:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5280              		.loc 3 1091 12 view .LVU1642
 5281 04d4 F5E7     		b	.L361
 5282              	.L401:
 5283 04d6 00BF     		.align	2
 5284              	.L400:
 5285 04d8 1DFE00FC 		.word	-67043811
ARM GAS  /tmp/cc2hwav8.s 			page 293


 5286 04dc FFFF0F00 		.word	1048575
 5287 04e0 0000FF47 		.word	1207894016
 5288              	.LVL468:
 5289              	.L362:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5290              		.loc 3 1091 12 view .LVU1643
 5291              	.LBE500:
 5292              	.LBE501:
 5293              	.LBB502:
 5294              	.LBI502:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5295              		.loc 3 1048 31 is_stmt 1 view .LVU1644
 5296              	.LBB503:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5297              		.loc 3 1050 3 view .LVU1645
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5298              		.loc 3 1055 4 view .LVU1646
 5299              		.syntax unified
 5300              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5301 04e4 93FAA3F3 		rbit r3, r3
 5302              	@ 0 "" 2
 5303              	.LVL469:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5304              		.loc 3 1068 3 view .LVU1647
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5305              		.loc 3 1068 3 is_stmt 0 view .LVU1648
 5306              		.thumb
 5307              		.syntax unified
 5308              	.LBE503:
 5309              	.LBE502:
 5310              	.LBB504:
 5311              	.LBI504:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5312              		.loc 3 1078 30 is_stmt 1 view .LVU1649
 5313              	.LBB505:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5314              		.loc 3 1089 3 view .LVU1650
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5315              		.loc 3 1089 6 is_stmt 0 view .LVU1651
 5316 04e8 5BB1     		cbz	r3, .L386
 5317              		.loc 3 1093 3 is_stmt 1 view .LVU1652
 5318              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1653
 5319 04ea B3FA83F3 		clz	r3, r3
 5320              	.LVL470:
 5321              	.L364:
 5322              		.loc 3 1093 10 discriminator 1 view .LVU1654
 5323              	.LBE505:
 5324              	.LBE504:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5325              		.loc 1 2259 64 discriminator 2 view .LVU1655
 5326 04ee 0133     		adds	r3, r3, #1
 5327 04f0 03F01F03 		and	r3, r3, #31
 5328 04f4 03EB4303 		add	r3, r3, r3, lsl #1
 5329 04f8 1E3B     		subs	r3, r3, #30
 5330 04fa 1B05     		lsls	r3, r3, #20
 5331 04fc 43F00073 		orr	r3, r3, #33554432
 5332 0500 CCE7     		b	.L363
ARM GAS  /tmp/cc2hwav8.s 			page 294


 5333              	.LVL471:
 5334              	.L386:
 5335              	.LBB507:
 5336              	.LBB506:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5337              		.loc 3 1091 12 view .LVU1656
 5338 0502 2023     		movs	r3, #32
 5339              	.LVL472:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5340              		.loc 3 1091 12 view .LVU1657
 5341 0504 F3E7     		b	.L364
 5342              	.LVL473:
 5343              	.L397:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5344              		.loc 3 1091 12 view .LVU1658
 5345              	.LBE506:
 5346              	.LBE507:
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 5347              		.loc 1 2273 7 is_stmt 1 view .LVU1659
 5348              	.LBB508:
 5349              	.LBI508:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5350              		.loc 2 6920 26 view .LVU1660
 5351              	.LBB509:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5352              		.loc 2 6922 3 view .LVU1661
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5353              		.loc 2 6922 12 is_stmt 0 view .LVU1662
 5354 0506 344B     		ldr	r3, .L402
 5355 0508 9968     		ldr	r1, [r3, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5356              		.loc 2 6922 68 view .LVU1663
 5357 050a 11F00101 		ands	r1, r1, #1
 5358 050e 00D0     		beq	.L365
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5359              		.loc 2 6922 68 discriminator 1 view .LVU1664
 5360 0510 0121     		movs	r1, #1
 5361              	.L365:
 5362              	.LVL474:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5363              		.loc 2 6922 68 discriminator 1 view .LVU1665
 5364              	.LBE509:
 5365              	.LBE508:
 5366              	.LBB510:
 5367              	.LBI510:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5368              		.loc 2 6920 26 is_stmt 1 view .LVU1666
 5369              	.LBB511:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5370              		.loc 2 6922 3 view .LVU1667
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5371              		.loc 2 6922 12 is_stmt 0 view .LVU1668
 5372 0512 324B     		ldr	r3, .L402+4
 5373 0514 9B68     		ldr	r3, [r3, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5374              		.loc 2 6922 68 view .LVU1669
 5375 0516 13F00103 		ands	r3, r3, #1
ARM GAS  /tmp/cc2hwav8.s 			page 295


 5376 051a 00D0     		beq	.L366
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5377              		.loc 2 6922 68 discriminator 1 view .LVU1670
 5378 051c 0123     		movs	r3, #1
 5379              	.L366:
 5380              	.LVL475:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5381              		.loc 2 6922 68 discriminator 1 view .LVU1671
 5382              	.LBE511:
 5383              	.LBE510:
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 5384              		.loc 1 2273 10 discriminator 2 view .LVU1672
 5385 051e 0B43     		orrs	r3, r3, r1
 5386 0520 52D1     		bne	.L367
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 5387              		.loc 1 2275 9 is_stmt 1 view .LVU1673
 5388              	.LVL476:
 5389              	.LBB512:
 5390              	.LBI512:
2746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5391              		.loc 2 2746 26 view .LVU1674
 5392              	.LBB513:
2748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5393              		.loc 2 2748 3 view .LVU1675
2748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5394              		.loc 2 2748 21 is_stmt 0 view .LVU1676
 5395 0522 2F4B     		ldr	r3, .L402+8
 5396 0524 9B68     		ldr	r3, [r3, #8]
2748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5397              		.loc 2 2748 10 view .LVU1677
 5398 0526 03F0E070 		and	r0, r3, #29360128
 5399              	.LVL477:
2748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5400              		.loc 2 2748 10 view .LVU1678
 5401              	.LBE513:
 5402              	.LBE512:
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5403              		.loc 1 2279 9 is_stmt 1 view .LVU1679
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5404              		.loc 1 2279 12 is_stmt 0 view .LVU1680
 5405 052a 2E49     		ldr	r1, .L402+12
 5406 052c 8A42     		cmp	r2, r1
 5407 052e 18D0     		beq	.L398
 5408              	.L368:
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5409              		.loc 1 2297 14 is_stmt 1 view .LVU1681
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5410              		.loc 1 2297 17 is_stmt 0 view .LVU1682
 5411 0530 2D49     		ldr	r1, .L402+16
 5412 0532 8A42     		cmp	r2, r1
 5413 0534 37D0     		beq	.L399
 5414              	.L371:
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5415              		.loc 1 2304 14 is_stmt 1 view .LVU1683
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5416              		.loc 1 2304 17 is_stmt 0 view .LVU1684
 5417 0536 2D49     		ldr	r1, .L402+20
ARM GAS  /tmp/cc2hwav8.s 			page 296


 5418 0538 8A42     		cmp	r2, r1
 5419 053a 7FF428AF 		bne	.L340
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5420              		.loc 1 2304 76 discriminator 1 view .LVU1685
 5421 053e 13F4800F 		tst	r3, #4194304
 5422 0542 7FF424AF 		bne	.L340
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 5423              		.loc 1 2306 11 is_stmt 1 view .LVU1686
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 5424              		.loc 1 2306 15 is_stmt 0 view .LVU1687
 5425 0546 2268     		ldr	r2, [r4]
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 5426              		.loc 1 2306 14 view .LVU1688
 5427 0548 244B     		ldr	r3, .L402+4
 5428 054a 9A42     		cmp	r2, r3
 5429 054c 7FF41FAF 		bne	.L340
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
 5430              		.loc 1 2308 13 is_stmt 1 view .LVU1689
 5431 0550 40F48003 		orr	r3, r0, #4194304
 5432              	.LVL478:
 5433              	.LBB514:
 5434              	.LBI514:
2724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5435              		.loc 2 2724 22 view .LVU1690
 5436              	.LBB515:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5437              		.loc 2 2726 3 view .LVU1691
 5438 0554 2249     		ldr	r1, .L402+8
 5439 0556 8A68     		ldr	r2, [r1, #8]
 5440 0558 22F0E072 		bic	r2, r2, #29360128
 5441 055c 1343     		orrs	r3, r3, r2
 5442              	.LVL479:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5443              		.loc 2 2726 3 is_stmt 0 view .LVU1692
 5444 055e 8B60     		str	r3, [r1, #8]
 5445              	.LVL480:
2727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5446              		.loc 2 2727 1 view .LVU1693
 5447 0560 15E7     		b	.L340
 5448              	.L398:
2727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5449              		.loc 2 2727 1 view .LVU1694
 5450              	.LBE515:
 5451              	.LBE514:
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5452              		.loc 1 2279 74 discriminator 1 view .LVU1695
 5453 0562 13F4000F 		tst	r3, #8388608
 5454 0566 E3D1     		bne	.L368
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 5455              		.loc 1 2281 11 is_stmt 1 view .LVU1696
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 5456              		.loc 1 2281 15 is_stmt 0 view .LVU1697
 5457 0568 2268     		ldr	r2, [r4]
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 5458              		.loc 1 2281 14 view .LVU1698
 5459 056a 1C4B     		ldr	r3, .L402+4
 5460 056c 9A42     		cmp	r2, r3
ARM GAS  /tmp/cc2hwav8.s 			page 297


 5461 056e 7FF40EAF 		bne	.L340
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 5462              		.loc 1 2283 13 is_stmt 1 view .LVU1699
 5463 0572 40F40003 		orr	r3, r0, #8388608
 5464              	.LVL481:
 5465              	.LBB516:
 5466              	.LBI516:
2724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5467              		.loc 2 2724 22 view .LVU1700
 5468              	.LBB517:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5469              		.loc 2 2726 3 view .LVU1701
 5470 0576 1A49     		ldr	r1, .L402+8
 5471 0578 8A68     		ldr	r2, [r1, #8]
 5472 057a 22F0E072 		bic	r2, r2, #29360128
 5473 057e 1343     		orrs	r3, r3, r2
 5474              	.LVL482:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5475              		.loc 2 2726 3 is_stmt 0 view .LVU1702
 5476 0580 8B60     		str	r3, [r1, #8]
 5477              	.LVL483:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5478              		.loc 2 2726 3 view .LVU1703
 5479              	.LBE517:
 5480              	.LBE516:
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
 5481              		.loc 1 2290 13 is_stmt 1 view .LVU1704
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
 5482              		.loc 1 2290 93 is_stmt 0 view .LVU1705
 5483 0582 1B4B     		ldr	r3, .L402+24
 5484 0584 1B68     		ldr	r3, [r3]
 5485 0586 9B09     		lsrs	r3, r3, #6
 5486 0588 1A4A     		ldr	r2, .L402+28
 5487 058a A2FB0323 		umull	r2, r3, r2, r3
 5488 058e 9B09     		lsrs	r3, r3, #6
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
 5489              		.loc 1 2290 113 view .LVU1706
 5490 0590 0133     		adds	r3, r3, #1
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
 5491              		.loc 1 2290 73 view .LVU1707
 5492 0592 5B00     		lsls	r3, r3, #1
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
 5493              		.loc 1 2290 29 view .LVU1708
 5494 0594 0193     		str	r3, [sp, #4]
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             {
 5495              		.loc 1 2291 13 is_stmt 1 view .LVU1709
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             {
 5496              		.loc 1 2291 19 is_stmt 0 view .LVU1710
 5497 0596 02E0     		b	.L369
 5498              	.L370:
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             }
 5499              		.loc 1 2293 15 is_stmt 1 view .LVU1711
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             }
 5500              		.loc 1 2293 30 is_stmt 0 view .LVU1712
 5501 0598 019B     		ldr	r3, [sp, #4]
 5502 059a 013B     		subs	r3, r3, #1
 5503 059c 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc2hwav8.s 			page 298


 5504              	.L369:
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             {
 5505              		.loc 1 2291 36 is_stmt 1 view .LVU1713
 5506 059e 019B     		ldr	r3, [sp, #4]
 5507 05a0 002B     		cmp	r3, #0
 5508 05a2 F9D1     		bne	.L370
 5509 05a4 F3E6     		b	.L340
 5510              	.L399:
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5511              		.loc 1 2297 73 is_stmt 0 discriminator 1 view .LVU1714
 5512 05a6 13F0807F 		tst	r3, #16777216
 5513 05aa C4D1     		bne	.L371
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 5514              		.loc 1 2299 11 is_stmt 1 view .LVU1715
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 5515              		.loc 1 2299 15 is_stmt 0 view .LVU1716
 5516 05ac 2268     		ldr	r2, [r4]
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 5517              		.loc 1 2299 14 view .LVU1717
 5518 05ae 0B4B     		ldr	r3, .L402+4
 5519 05b0 9A42     		cmp	r2, r3
 5520 05b2 7FF4ECAE 		bne	.L340
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
 5521              		.loc 1 2301 13 is_stmt 1 view .LVU1718
 5522 05b6 40F08073 		orr	r3, r0, #16777216
 5523              	.LVL484:
 5524              	.LBB518:
 5525              	.LBI518:
2724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5526              		.loc 2 2724 22 view .LVU1719
 5527              	.LBB519:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5528              		.loc 2 2726 3 view .LVU1720
 5529 05ba 0949     		ldr	r1, .L402+8
 5530 05bc 8A68     		ldr	r2, [r1, #8]
 5531 05be 22F0E072 		bic	r2, r2, #29360128
 5532 05c2 1343     		orrs	r3, r3, r2
 5533              	.LVL485:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5534              		.loc 2 2726 3 is_stmt 0 view .LVU1721
 5535 05c4 8B60     		str	r3, [r1, #8]
 5536              	.LVL486:
2727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5537              		.loc 2 2727 1 view .LVU1722
 5538 05c6 E2E6     		b	.L340
 5539              	.LVL487:
 5540              	.L367:
2727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5541              		.loc 2 2727 1 view .LVU1723
 5542              	.LBE519:
 5543              	.LBE518:
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 5544              		.loc 1 2322 9 is_stmt 1 view .LVU1724
 5545 05c8 636D     		ldr	r3, [r4, #84]
 5546 05ca 43F02003 		orr	r3, r3, #32
 5547 05ce 6365     		str	r3, [r4, #84]
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
ARM GAS  /tmp/cc2hwav8.s 			page 299


 5548              		.loc 1 2324 9 view .LVU1725
 5549              	.LVL488:
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 5550              		.loc 1 2324 24 is_stmt 0 view .LVU1726
 5551 05d0 0127     		movs	r7, #1
 5552 05d2 DCE6     		b	.L340
 5553              	.LVL489:
 5554              	.L372:
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 5555              		.loc 1 1881 3 discriminator 1 view .LVU1727
 5556 05d4 0227     		movs	r7, #2
 5557 05d6 DDE6     		b	.L298
 5558              	.L403:
 5559              		.align	2
 5560              	.L402:
 5561 05d8 00200240 		.word	1073881088
 5562 05dc 00210240 		.word	1073881344
 5563 05e0 00230240 		.word	1073881856
 5564 05e4 000084CB 		.word	-880541696
 5565 05e8 0040C0BA 		.word	-1161805824
 5566 05ec 0000B8CF 		.word	-810024960
 5567 05f0 00000000 		.word	SystemCoreClock
 5568 05f4 632D3E05 		.word	87960931
 5569              		.cfi_endproc
 5570              	.LFE359:
 5572              		.section	.text.HAL_ADCEx_MultiModeConfigChannel,"ax",%progbits
 5573              		.align	1
 5574              		.global	HAL_ADCEx_MultiModeConfigChannel
 5575              		.syntax unified
 5576              		.thumb
 5577              		.thumb_func
 5579              	HAL_ADCEx_MultiModeConfigChannel:
 5580              	.LVL490:
 5581              	.LFB360:
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without resetting
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         the ADCs.
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   To move back configuration from multimode to single mode, ADC must
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc Master ADC handle
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param multimode Structure of ADC multimode configuration
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, ADC_MultiModeTypeDef *m
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 5582              		.loc 1 2354 1 is_stmt 1 view -0
 5583              		.cfi_startproc
 5584              		@ args = 0, pretend = 0, frame = 104
 5585              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc2hwav8.s 			page 300


 5586              		@ link register save eliminated.
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5587              		.loc 1 2355 3 view .LVU1729
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5588              		.loc 1 2356 3 view .LVU1730
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef  tmphadcSlave;
 5589              		.loc 1 2357 3 view .LVU1731
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
 5590              		.loc 1 2358 3 view .LVU1732
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 5591              		.loc 1 2361 3 view .LVU1733
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE(multimode->Mode));
 5592              		.loc 1 2362 3 view .LVU1734
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (multimode->Mode != ADC_MODE_INDEPENDENT)
 5593              		.loc 1 2363 3 view .LVU1735
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_DUAL_DATA_MODE(multimode->DualModeData));
 5594              		.loc 1 2365 5 view .LVU1736
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
 5595              		.loc 1 2366 5 view .LVU1737
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 5596              		.loc 1 2370 3 view .LVU1738
 5597              		.loc 1 2370 3 view .LVU1739
 5598 0000 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 5599 0004 012A     		cmp	r2, #1
 5600 0006 75D0     		beq	.L417
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5601              		.loc 1 2354 1 is_stmt 0 view .LVU1740
 5602 0008 10B4     		push	{r4}
 5603              	.LCFI43:
 5604              		.cfi_def_cfa_offset 4
 5605              		.cfi_offset 4, -4
 5606 000a 9BB0     		sub	sp, sp, #108
 5607              	.LCFI44:
 5608              		.cfi_def_cfa_offset 112
 5609 000c 0346     		mov	r3, r0
 5610              		.loc 1 2370 3 is_stmt 1 discriminator 2 view .LVU1741
 5611 000e 0122     		movs	r2, #1
 5612 0010 80F85020 		strb	r2, [r0, #80]
 5613              		.loc 1 2370 3 discriminator 2 view .LVU1742
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmphadcSlave.State = HAL_ADC_STATE_RESET;
 5614              		.loc 1 2372 3 view .LVU1743
 5615              		.loc 1 2372 22 is_stmt 0 view .LVU1744
 5616 0014 0022     		movs	r2, #0
 5617 0016 1692     		str	r2, [sp, #88]
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 5618              		.loc 1 2373 3 is_stmt 1 view .LVU1745
 5619              		.loc 1 2373 26 is_stmt 0 view .LVU1746
 5620 0018 1792     		str	r2, [sp, #92]
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
ARM GAS  /tmp/cc2hwav8.s 			page 301


 5621              		.loc 1 2375 3 is_stmt 1 view .LVU1747
 5622 001a 0068     		ldr	r0, [r0]
 5623              	.LVL491:
 5624              		.loc 1 2375 3 is_stmt 0 view .LVU1748
 5625 001c 364A     		ldr	r2, .L426
 5626 001e 9042     		cmp	r0, r2
 5627 0020 31D0     		beq	.L424
 5628              		.loc 1 2375 3 discriminator 2 view .LVU1749
 5629 0022 0022     		movs	r2, #0
 5630 0024 0192     		str	r2, [sp, #4]
 5631              	.L407:
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmphadcSlave.Instance == NULL)
 5632              		.loc 1 2377 3 is_stmt 1 view .LVU1750
 5633              		.loc 1 2377 19 is_stmt 0 view .LVU1751
 5634 0026 019A     		ldr	r2, [sp, #4]
 5635              		.loc 1 2377 6 view .LVU1752
 5636 0028 002A     		cmp	r2, #0
 5637 002a 30D0     		beq	.L425
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process unlocked */
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_ERROR;
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Multimode DATA Format configuration                                   */
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 5638              		.loc 1 2392 3 is_stmt 1 view .LVU1753
 5639              	.LVL492:
 5640              	.LBB520:
 5641              	.LBI520:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5642              		.loc 2 7052 26 view .LVU1754
 5643              	.LBB521:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5644              		.loc 2 7054 3 view .LVU1755
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5645              		.loc 2 7054 12 is_stmt 0 view .LVU1756
 5646 002c 9268     		ldr	r2, [r2, #8]
 5647              	.LVL493:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5648              		.loc 2 7054 74 view .LVU1757
 5649 002e 12F00402 		ands	r2, r2, #4
 5650 0032 00D0     		beq	.L409
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5651              		.loc 2 7054 74 discriminator 1 view .LVU1758
 5652 0034 0122     		movs	r2, #1
 5653              	.L409:
 5654              	.LVL494:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 302


 5655              		.loc 2 7054 74 discriminator 1 view .LVU1759
 5656              	.LBE521:
 5657              	.LBE520:
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 5658              		.loc 1 2393 3 is_stmt 1 view .LVU1760
 5659              	.LBB522:
 5660              	.LBI522:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5661              		.loc 2 7052 26 view .LVU1761
 5662              	.LBB523:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5663              		.loc 2 7054 3 view .LVU1762
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5664              		.loc 2 7054 12 is_stmt 0 view .LVU1763
 5665 0036 8068     		ldr	r0, [r0, #8]
 5666              	.LVL495:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5667              		.loc 2 7054 74 view .LVU1764
 5668 0038 10F0040F 		tst	r0, #4
 5669 003c 4AD1     		bne	.L410
 5670              	.LVL496:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5671              		.loc 2 7054 74 view .LVU1765
 5672              	.LBE523:
 5673              	.LBE522:
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmphadcSlave_conversion_on_going == 0UL))
 5674              		.loc 1 2394 7 view .LVU1766
 5675 003e 002A     		cmp	r2, #0
 5676 0040 48D1     		bne	.L410
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Pointer to the common control register */
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 5677              		.loc 1 2397 5 is_stmt 1 view .LVU1767
 5678              	.LVL497:
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If multimode is selected, configure all multimode parameters.          */
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Otherwise, reset multimode parameters (can be used in case of          */
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* transition from multimode to independent mode).                        */
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (multimode->Mode != ADC_MODE_INDEPENDENT)
 5679              		.loc 1 2402 5 view .LVU1768
 5680              		.loc 1 2402 18 is_stmt 0 view .LVU1769
 5681 0042 0A68     		ldr	r2, [r1]
 5682              	.LVL498:
 5683              		.loc 1 2402 8 view .LVU1770
 5684 0044 62B3     		cbz	r2, .L411
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_DAMDF, multimode->DualModeData);
 5685              		.loc 1 2404 7 is_stmt 1 view .LVU1771
 5686 0046 2D48     		ldr	r0, .L426+4
 5687 0048 8268     		ldr	r2, [r0, #8]
 5688 004a 22F44042 		bic	r2, r2, #49152
 5689 004e 4C68     		ldr	r4, [r1, #4]
 5690 0050 2243     		orrs	r2, r2, r4
 5691 0052 8260     		str	r2, [r0, #8]
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:              */
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                            */
ARM GAS  /tmp/cc2hwav8.s 			page 303


2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode delay                                                     */
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    Note: Delay range depends on selected resolution:                   */
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 9 clock cycles for 16 bits                              */
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 9 clock cycles for 14 bits,                             */
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 8 clock cycles for 12 bits                              */
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 6 clock cycles for 10 and 8 bits                        */
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    If a higher delay is selected, it will be clipped to maximum delay  */
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    range                                                               */
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 5692              		.loc 1 2417 7 view .LVU1772
 5693              	.LVL499:
 5694              	.LBB524:
 5695              	.LBI524:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5696              		.loc 2 6920 26 view .LVU1773
 5697              	.LBB525:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5698              		.loc 2 6922 3 view .LVU1774
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5699              		.loc 2 6922 12 is_stmt 0 view .LVU1775
 5700 0054 284A     		ldr	r2, .L426
 5701 0056 9068     		ldr	r0, [r2, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5702              		.loc 2 6922 68 view .LVU1776
 5703 0058 10F00100 		ands	r0, r0, #1
 5704 005c 00D0     		beq	.L412
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5705              		.loc 2 6922 68 discriminator 1 view .LVU1777
 5706 005e 0120     		movs	r0, #1
 5707              	.L412:
 5708              	.LVL500:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5709              		.loc 2 6922 68 discriminator 1 view .LVU1778
 5710              	.LBE525:
 5711              	.LBE524:
 5712              	.LBB526:
 5713              	.LBI526:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5714              		.loc 2 6920 26 is_stmt 1 view .LVU1779
 5715              	.LBB527:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5716              		.loc 2 6922 3 view .LVU1780
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5717              		.loc 2 6922 12 is_stmt 0 view .LVU1781
 5718 0060 274A     		ldr	r2, .L426+8
 5719 0062 9268     		ldr	r2, [r2, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5720              		.loc 2 6922 68 view .LVU1782
 5721 0064 12F00102 		ands	r2, r2, #1
 5722 0068 00D0     		beq	.L413
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5723              		.loc 2 6922 68 discriminator 1 view .LVU1783
 5724 006a 0122     		movs	r2, #1
 5725              	.L413:
 5726              	.LVL501:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/cc2hwav8.s 			page 304


 5727              		.loc 2 6922 68 discriminator 1 view .LVU1784
 5728              	.LBE527:
 5729              	.LBE526:
 5730              		.loc 1 2417 10 discriminator 2 view .LVU1785
 5731 006c 0243     		orrs	r2, r2, r0
 5732 006e 3DD1     		bne	.L418
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(tmpADC_Common->CCR,
 5733              		.loc 1 2419 9 is_stmt 1 view .LVU1786
 5734 0070 224C     		ldr	r4, .L426+4
 5735 0072 A068     		ldr	r0, [r4, #8]
 5736 0074 234A     		ldr	r2, .L426+12
 5737 0076 0240     		ands	r2, r2, r0
 5738 0078 0868     		ldr	r0, [r1]
 5739 007a 8968     		ldr	r1, [r1, #8]
 5740              	.LVL502:
 5741              		.loc 1 2419 9 is_stmt 0 view .LVU1787
 5742 007c 0143     		orrs	r1, r1, r0
 5743 007e 0A43     		orrs	r2, r2, r1
 5744 0080 A260     		str	r2, [r4, #8]
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5745              		.loc 1 2355 21 view .LVU1788
 5746 0082 0020     		movs	r0, #0
 5747 0084 2BE0     		b	.L414
 5748              	.LVL503:
 5749              	.L424:
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 5750              		.loc 1 2375 3 discriminator 1 view .LVU1789
 5751 0086 02F58072 		add	r2, r2, #256
 5752 008a 0192     		str	r2, [sp, #4]
 5753 008c CBE7     		b	.L407
 5754              	.L425:
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 5755              		.loc 1 2380 5 is_stmt 1 view .LVU1790
 5756 008e 5A6D     		ldr	r2, [r3, #84]
 5757 0090 42F02002 		orr	r2, r2, #32
 5758 0094 5A65     		str	r2, [r3, #84]
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 5759              		.loc 1 2383 5 view .LVU1791
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 5760              		.loc 1 2383 5 view .LVU1792
 5761 0096 0022     		movs	r2, #0
 5762 0098 83F85020 		strb	r2, [r3, #80]
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 5763              		.loc 1 2383 5 view .LVU1793
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 5764              		.loc 1 2385 5 view .LVU1794
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 5765              		.loc 1 2385 12 is_stmt 0 view .LVU1795
 5766 009c 0120     		movs	r0, #1
 5767 009e 21E0     		b	.L405
 5768              	.LVL504:
 5769              	.L411:
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CCR_DUAL |
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CCR_DELAY,
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    multimode->Mode |
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    multimode->TwoSamplingDelay
ARM GAS  /tmp/cc2hwav8.s 			page 305


2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   );
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else /* ADC_MODE_INDEPENDENT */
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DAMDF);
 5770              		.loc 1 2429 7 is_stmt 1 view .LVU1796
 5771 00a0 1649     		ldr	r1, .L426+4
 5772              	.LVL505:
 5773              		.loc 1 2429 7 is_stmt 0 view .LVU1797
 5774 00a2 8A68     		ldr	r2, [r1, #8]
 5775 00a4 22F44042 		bic	r2, r2, #49152
 5776 00a8 8A60     		str	r2, [r1, #8]
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 5777              		.loc 1 2434 7 is_stmt 1 view .LVU1798
 5778              	.LVL506:
 5779              	.LBB528:
 5780              	.LBI528:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5781              		.loc 2 6920 26 view .LVU1799
 5782              	.LBB529:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5783              		.loc 2 6922 3 view .LVU1800
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5784              		.loc 2 6922 12 is_stmt 0 view .LVU1801
 5785 00aa 134A     		ldr	r2, .L426
 5786 00ac 9168     		ldr	r1, [r2, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5787              		.loc 2 6922 68 view .LVU1802
 5788 00ae 11F00101 		ands	r1, r1, #1
 5789 00b2 00D0     		beq	.L415
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5790              		.loc 2 6922 68 discriminator 1 view .LVU1803
 5791 00b4 0121     		movs	r1, #1
 5792              	.L415:
 5793              	.LVL507:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5794              		.loc 2 6922 68 discriminator 1 view .LVU1804
 5795              	.LBE529:
 5796              	.LBE528:
 5797              	.LBB530:
 5798              	.LBI530:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5799              		.loc 2 6920 26 is_stmt 1 view .LVU1805
 5800              	.LBB531:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5801              		.loc 2 6922 3 view .LVU1806
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5802              		.loc 2 6922 12 is_stmt 0 view .LVU1807
 5803 00b6 124A     		ldr	r2, .L426+8
 5804 00b8 9268     		ldr	r2, [r2, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5805              		.loc 2 6922 68 view .LVU1808
ARM GAS  /tmp/cc2hwav8.s 			page 306


 5806 00ba 12F00102 		ands	r2, r2, #1
 5807 00be 00D0     		beq	.L416
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5808              		.loc 2 6922 68 discriminator 1 view .LVU1809
 5809 00c0 0122     		movs	r2, #1
 5810              	.L416:
 5811              	.LVL508:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5812              		.loc 2 6922 68 discriminator 1 view .LVU1810
 5813              	.LBE531:
 5814              	.LBE530:
 5815              		.loc 1 2434 10 discriminator 2 view .LVU1811
 5816 00c2 0A43     		orrs	r2, r2, r1
 5817 00c4 14D1     		bne	.L419
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
 5818              		.loc 1 2436 9 is_stmt 1 view .LVU1812
 5819 00c6 0D49     		ldr	r1, .L426+4
 5820 00c8 8868     		ldr	r0, [r1, #8]
 5821 00ca 0E4A     		ldr	r2, .L426+12
 5822 00cc 0240     		ands	r2, r2, r0
 5823 00ce 8A60     		str	r2, [r1, #8]
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5824              		.loc 1 2355 21 is_stmt 0 view .LVU1813
 5825 00d0 0020     		movs	r0, #0
 5826 00d2 04E0     		b	.L414
 5827              	.LVL509:
 5828              	.L410:
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 5829              		.loc 1 2445 5 is_stmt 1 view .LVU1814
 5830 00d4 5A6D     		ldr	r2, [r3, #84]
 5831              	.LVL510:
 5832              		.loc 1 2445 5 is_stmt 0 view .LVU1815
 5833 00d6 42F02002 		orr	r2, r2, #32
 5834 00da 5A65     		str	r2, [r3, #84]
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 5835              		.loc 1 2447 5 is_stmt 1 view .LVU1816
 5836              	.LVL511:
 5837              		.loc 1 2447 20 is_stmt 0 view .LVU1817
 5838 00dc 0120     		movs	r0, #1
 5839              	.LVL512:
 5840              	.L414:
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 5841              		.loc 1 2451 3 is_stmt 1 view .LVU1818
 5842              		.loc 1 2451 3 view .LVU1819
ARM GAS  /tmp/cc2hwav8.s 			page 307


 5843 00de 0022     		movs	r2, #0
 5844 00e0 83F85020 		strb	r2, [r3, #80]
 5845              		.loc 1 2451 3 view .LVU1820
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 5846              		.loc 1 2454 3 view .LVU1821
 5847              	.LVL513:
 5848              	.L405:
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 5849              		.loc 1 2455 1 is_stmt 0 view .LVU1822
 5850 00e4 1BB0     		add	sp, sp, #108
 5851              	.LCFI45:
 5852              		.cfi_remember_state
 5853              		.cfi_def_cfa_offset 4
 5854              		@ sp needed
 5855 00e6 5DF8044B 		ldr	r4, [sp], #4
 5856              	.LCFI46:
 5857              		.cfi_restore 4
 5858              		.cfi_def_cfa_offset 0
 5859 00ea 7047     		bx	lr
 5860              	.LVL514:
 5861              	.L418:
 5862              	.LCFI47:
 5863              		.cfi_restore_state
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5864              		.loc 1 2355 21 view .LVU1823
 5865 00ec 0020     		movs	r0, #0
 5866 00ee F6E7     		b	.L414
 5867              	.LVL515:
 5868              	.L419:
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5869              		.loc 1 2355 21 view .LVU1824
 5870 00f0 0020     		movs	r0, #0
 5871 00f2 F4E7     		b	.L414
 5872              	.LVL516:
 5873              	.L417:
 5874              	.LCFI48:
 5875              		.cfi_def_cfa_offset 0
 5876              		.cfi_restore 4
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 5877              		.loc 1 2370 3 discriminator 1 view .LVU1825
 5878 00f4 0220     		movs	r0, #2
 5879              	.LVL517:
 5880              		.loc 1 2455 1 view .LVU1826
 5881 00f6 7047     		bx	lr
 5882              	.L427:
 5883              		.align	2
 5884              	.L426:
 5885 00f8 00200240 		.word	1073881088
 5886 00fc 00230240 		.word	1073881856
 5887 0100 00210240 		.word	1073881344
 5888 0104 E0F0FFFF 		.word	-3872
 5889              		.cfi_endproc
 5890              	.LFE360:
 5892              		.section	.text.HAL_ADCEx_EnableInjectedQueue,"ax",%progbits
 5893              		.align	1
ARM GAS  /tmp/cc2hwav8.s 			page 308


 5894              		.global	HAL_ADCEx_EnableInjectedQueue
 5895              		.syntax unified
 5896              		.thumb
 5897              		.thumb_func
 5899              	HAL_ADCEx_EnableInjectedQueue:
 5900              	.LVL518:
 5901              	.LFB361:
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable Injected Queue
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This function resets CFGR register JQDIS bit in order to enable the
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversion is ongoing.
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnableInjectedQueue(ADC_HandleTypeDef *hadc)
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 5902              		.loc 1 2467 1 is_stmt 1 view -0
 5903              		.cfi_startproc
 5904              		@ args = 0, pretend = 0, frame = 0
 5905              		@ frame_needed = 0, uses_anonymous_args = 0
 5906              		@ link register save eliminated.
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 5907              		.loc 1 2468 3 view .LVU1828
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 5908              		.loc 1 2469 3 view .LVU1829
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 5909              		.loc 1 2470 3 view .LVU1830
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 5910              		.loc 1 2473 3 view .LVU1831
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 5911              		.loc 1 2475 3 view .LVU1832
 5912              		.loc 1 2475 44 is_stmt 0 view .LVU1833
 5913 0000 0168     		ldr	r1, [r0]
 5914              	.LVL519:
 5915              	.LBB532:
 5916              	.LBI532:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5917              		.loc 2 7052 26 is_stmt 1 view .LVU1834
 5918              	.LBB533:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5919              		.loc 2 7054 3 view .LVU1835
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5920              		.loc 2 7054 12 is_stmt 0 view .LVU1836
 5921 0002 8A68     		ldr	r2, [r1, #8]
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5922              		.loc 2 7054 74 view .LVU1837
 5923 0004 12F00402 		ands	r2, r2, #4
 5924 0008 00D0     		beq	.L429
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5925              		.loc 2 7054 74 discriminator 1 view .LVU1838
 5926 000a 0122     		movs	r2, #1
ARM GAS  /tmp/cc2hwav8.s 			page 309


 5927              	.L429:
 5928              	.LVL520:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5929              		.loc 2 7054 74 discriminator 1 view .LVU1839
 5930              	.LBE533:
 5931              	.LBE532:
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 5932              		.loc 1 2476 3 is_stmt 1 view .LVU1840
 5933              	.LBB534:
 5934              	.LBI534:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5935              		.loc 2 7247 26 view .LVU1841
 5936              	.LBB535:
 5937              		.loc 2 7249 3 view .LVU1842
 5938              		.loc 2 7249 12 is_stmt 0 view .LVU1843
 5939 000c 8B68     		ldr	r3, [r1, #8]
 5940              		.loc 2 7249 76 view .LVU1844
 5941 000e 13F00803 		ands	r3, r3, #8
 5942 0012 00D0     		beq	.L430
 5943              		.loc 2 7249 76 discriminator 1 view .LVU1845
 5944 0014 0123     		movs	r3, #1
 5945              	.L430:
 5946              	.LVL521:
 5947              		.loc 2 7249 76 discriminator 1 view .LVU1846
 5948              	.LBE535:
 5949              	.LBE534:
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 5950              		.loc 1 2479 3 is_stmt 1 view .LVU1847
 5951              		.loc 1 2479 6 is_stmt 0 view .LVU1848
 5952 0016 1343     		orrs	r3, r3, r2
 5953              	.LVL522:
 5954              		.loc 1 2479 6 view .LVU1849
 5955 0018 09D1     		bne	.L432
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      )
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 5956              		.loc 1 2483 5 is_stmt 1 view .LVU1850
 5957 001a CB68     		ldr	r3, [r1, #12]
 5958 001c 23F00043 		bic	r3, r3, #-2147483648
 5959 0020 CB60     		str	r3, [r1, #12]
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update state, clear previous result related to injected queue overflow */
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 5960              		.loc 1 2486 5 view .LVU1851
 5961 0022 436D     		ldr	r3, [r0, #84]
 5962 0024 23F48043 		bic	r3, r3, #16384
 5963 0028 4365     		str	r3, [r0, #84]
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 5964              		.loc 1 2488 5 view .LVU1852
 5965              	.LVL523:
 5966              		.loc 1 2488 20 is_stmt 0 view .LVU1853
 5967 002a 0020     		movs	r0, #0
 5968              	.LVL524:
ARM GAS  /tmp/cc2hwav8.s 			page 310


 5969              		.loc 1 2488 20 view .LVU1854
 5970 002c 7047     		bx	lr
 5971              	.LVL525:
 5972              	.L432:
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 5973              		.loc 1 2492 20 view .LVU1855
 5974 002e 0120     		movs	r0, #1
 5975              	.LVL526:
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 5976              		.loc 1 2495 3 is_stmt 1 view .LVU1856
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 5977              		.loc 1 2496 1 is_stmt 0 view .LVU1857
 5978 0030 7047     		bx	lr
 5979              		.cfi_endproc
 5980              	.LFE361:
 5982              		.section	.text.HAL_ADCEx_DisableInjectedQueue,"ax",%progbits
 5983              		.align	1
 5984              		.global	HAL_ADCEx_DisableInjectedQueue
 5985              		.syntax unified
 5986              		.thumb
 5987              		.thumb_func
 5989              	HAL_ADCEx_DisableInjectedQueue:
 5990              	.LVL527:
 5991              	.LFB362:
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Disable Injected Queue
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This function sets CFGR register JQDIS bit in order to disable the
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversion is ongoing.
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableInjectedQueue(ADC_HandleTypeDef *hadc)
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 5992              		.loc 1 2508 1 is_stmt 1 view -0
 5993              		.cfi_startproc
 5994              		@ args = 0, pretend = 0, frame = 0
 5995              		@ frame_needed = 0, uses_anonymous_args = 0
 5996              		@ link register save eliminated.
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 5997              		.loc 1 2509 3 view .LVU1859
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 5998              		.loc 1 2510 3 view .LVU1860
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 5999              		.loc 1 2511 3 view .LVU1861
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 6000              		.loc 1 2514 3 view .LVU1862
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc2hwav8.s 			page 311


2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 6001              		.loc 1 2516 3 view .LVU1863
 6002              		.loc 1 2516 44 is_stmt 0 view .LVU1864
 6003 0000 0168     		ldr	r1, [r0]
 6004              	.LVL528:
 6005              	.LBB536:
 6006              	.LBI536:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6007              		.loc 2 7052 26 is_stmt 1 view .LVU1865
 6008              	.LBB537:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6009              		.loc 2 7054 3 view .LVU1866
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6010              		.loc 2 7054 12 is_stmt 0 view .LVU1867
 6011 0002 8A68     		ldr	r2, [r1, #8]
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6012              		.loc 2 7054 74 view .LVU1868
 6013 0004 12F00402 		ands	r2, r2, #4
 6014 0008 00D0     		beq	.L434
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6015              		.loc 2 7054 74 discriminator 1 view .LVU1869
 6016 000a 0122     		movs	r2, #1
 6017              	.L434:
 6018              	.LVL529:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6019              		.loc 2 7054 74 discriminator 1 view .LVU1870
 6020              	.LBE537:
 6021              	.LBE536:
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 6022              		.loc 1 2517 3 is_stmt 1 view .LVU1871
 6023              	.LBB538:
 6024              	.LBI538:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6025              		.loc 2 7247 26 view .LVU1872
 6026              	.LBB539:
 6027              		.loc 2 7249 3 view .LVU1873
 6028              		.loc 2 7249 12 is_stmt 0 view .LVU1874
 6029 000c 8B68     		ldr	r3, [r1, #8]
 6030              		.loc 2 7249 76 view .LVU1875
 6031 000e 13F00803 		ands	r3, r3, #8
 6032 0012 00D0     		beq	.L435
 6033              		.loc 2 7249 76 discriminator 1 view .LVU1876
 6034 0014 0123     		movs	r3, #1
 6035              	.L435:
 6036              	.LVL530:
 6037              		.loc 2 7249 76 discriminator 1 view .LVU1877
 6038              	.LBE539:
 6039              	.LBE538:
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 6040              		.loc 1 2520 3 is_stmt 1 view .LVU1878
 6041              		.loc 1 2520 6 is_stmt 0 view .LVU1879
 6042 0016 1343     		orrs	r3, r3, r2
 6043              	.LVL531:
 6044              		.loc 1 2520 6 view .LVU1880
 6045 0018 07D1     		bne	.L437
ARM GAS  /tmp/cc2hwav8.s 			page 312


2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      )
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_INJ_SetQueueMode(hadc->Instance, LL_ADC_INJ_QUEUE_DISABLE);
 6046              		.loc 1 2524 5 is_stmt 1 view .LVU1881
 6047              	.LVL532:
 6048              	.LBB540:
 6049              	.LBI540:
5056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6050              		.loc 2 5056 22 view .LVU1882
 6051              	.LBB541:
5058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6052              		.loc 2 5058 3 view .LVU1883
 6053 001a CA68     		ldr	r2, [r1, #12]
 6054              	.LVL533:
5058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6055              		.loc 2 5058 3 is_stmt 0 view .LVU1884
 6056 001c 044B     		ldr	r3, .L438
 6057 001e 1340     		ands	r3, r3, r2
 6058 0020 43F00043 		orr	r3, r3, #-2147483648
 6059 0024 CB60     		str	r3, [r1, #12]
 6060              	.LVL534:
5058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6061              		.loc 2 5058 3 view .LVU1885
 6062              	.LBE541:
 6063              	.LBE540:
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 6064              		.loc 1 2525 5 is_stmt 1 view .LVU1886
 6065              		.loc 1 2525 20 is_stmt 0 view .LVU1887
 6066 0026 0020     		movs	r0, #0
 6067              	.LVL535:
 6068              		.loc 1 2525 20 view .LVU1888
 6069 0028 7047     		bx	lr
 6070              	.LVL536:
 6071              	.L437:
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 6072              		.loc 1 2529 20 view .LVU1889
 6073 002a 0120     		movs	r0, #1
 6074              	.LVL537:
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 6075              		.loc 1 2532 3 is_stmt 1 view .LVU1890
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 6076              		.loc 1 2533 1 is_stmt 0 view .LVU1891
 6077 002c 7047     		bx	lr
 6078              	.L439:
 6079 002e 00BF     		.align	2
 6080              	.L438:
 6081 0030 FFFFDF7F 		.word	2145386495
 6082              		.cfi_endproc
 6083              	.LFE362:
 6085              		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 6086              		.align	1
ARM GAS  /tmp/cc2hwav8.s 			page 313


 6087              		.global	HAL_ADCEx_DisableVoltageRegulator
 6088              		.syntax unified
 6089              		.thumb
 6090              		.thumb_func
 6092              	HAL_ADCEx_DisableVoltageRegulator:
 6093              	.LVL538:
 6094              	.LFB363:
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef *hadc)
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 6095              		.loc 1 2545 1 is_stmt 1 view -0
 6096              		.cfi_startproc
 6097              		@ args = 0, pretend = 0, frame = 0
 6098              		@ frame_needed = 0, uses_anonymous_args = 0
 6099              		@ link register save eliminated.
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 6100              		.loc 1 2546 3 view .LVU1893
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 6101              		.loc 1 2549 3 view .LVU1894
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 6102              		.loc 1 2552 3 view .LVU1895
 6103              		.loc 1 2552 7 is_stmt 0 view .LVU1896
 6104 0000 0368     		ldr	r3, [r0]
 6105              	.LVL539:
 6106              	.LBB542:
 6107              	.LBI542:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6108              		.loc 2 6920 26 is_stmt 1 view .LVU1897
 6109              	.LBB543:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6110              		.loc 2 6922 3 view .LVU1898
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6111              		.loc 2 6922 12 is_stmt 0 view .LVU1899
 6112 0002 9A68     		ldr	r2, [r3, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6113              		.loc 2 6922 68 view .LVU1900
 6114 0004 12F0010F 		tst	r2, #1
 6115 0008 05D1     		bne	.L442
 6116              	.LVL540:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6117              		.loc 2 6922 68 view .LVU1901
 6118              	.LBE543:
 6119              	.LBE542:
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/cc2hwav8.s 			page 314


2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 6120              		.loc 1 2554 5 is_stmt 1 view .LVU1902
 6121              	.LBB544:
 6122              	.LBI544:
6849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6123              		.loc 2 6849 22 view .LVU1903
 6124              	.LBB545:
6851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6125              		.loc 2 6851 3 view .LVU1904
 6126 000a 9968     		ldr	r1, [r3, #8]
 6127 000c 034A     		ldr	r2, .L443
 6128 000e 0A40     		ands	r2, r2, r1
 6129 0010 9A60     		str	r2, [r3, #8]
 6130              	.LVL541:
6851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6131              		.loc 2 6851 3 is_stmt 0 view .LVU1905
 6132              	.LBE545:
 6133              	.LBE544:
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 6134              		.loc 1 2555 5 is_stmt 1 view .LVU1906
 6135              		.loc 1 2555 20 is_stmt 0 view .LVU1907
 6136 0012 0020     		movs	r0, #0
 6137              	.LVL542:
 6138              		.loc 1 2555 20 view .LVU1908
 6139 0014 7047     		bx	lr
 6140              	.LVL543:
 6141              	.L442:
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 6142              		.loc 1 2559 20 view .LVU1909
 6143 0016 0120     		movs	r0, #1
 6144              	.LVL544:
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 6145              		.loc 1 2562 3 is_stmt 1 view .LVU1910
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 6146              		.loc 1 2563 1 is_stmt 0 view .LVU1911
 6147 0018 7047     		bx	lr
 6148              	.L444:
 6149 001a 00BF     		.align	2
 6150              	.L443:
 6151 001c C0FFFF6F 		.word	1879048128
 6152              		.cfi_endproc
 6153              	.LFE363:
 6155              		.section	.text.HAL_ADCEx_EnterADCDeepPowerDownMode,"ax",%progbits
 6156              		.align	1
 6157              		.global	HAL_ADCEx_EnterADCDeepPowerDownMode
 6158              		.syntax unified
 6159              		.thumb
 6160              		.thumb_func
 6162              	HAL_ADCEx_EnterADCDeepPowerDownMode:
 6163              	.LVL545:
 6164              	.LFB364:
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc2hwav8.s 			page 315


2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enter ADC deep-power-down mode
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This mode is achieved in setting DEEPPWD bit and allows to save power
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         in reducing leakage currents. It is particularly interesting before
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         entering stop modes.
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Setting DEEPPWD automatically clears ADVREGEN bit and disables the
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC voltage regulator. This means that this API encompasses
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_DisableVoltageRegulator(). Additionally, the internal
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         calibration is lost.
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   To exit the ADC deep-power-down mode, the user is expected to
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API as well as to relaunch a calibration
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         with HAL_ADCEx_Calibration_Start() API or to re-apply a previously
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         saved calibration factor.
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnterADCDeepPowerDownMode(ADC_HandleTypeDef *hadc)
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 6165              		.loc 1 2582 1 is_stmt 1 view -0
 6166              		.cfi_startproc
 6167              		@ args = 0, pretend = 0, frame = 0
 6168              		@ frame_needed = 0, uses_anonymous_args = 0
 6169              		@ link register save eliminated.
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 6170              		.loc 1 2583 3 view .LVU1913
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 6171              		.loc 1 2586 3 view .LVU1914
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 6172              		.loc 1 2589 3 view .LVU1915
 6173              		.loc 1 2589 7 is_stmt 0 view .LVU1916
 6174 0000 0368     		ldr	r3, [r0]
 6175              	.LVL546:
 6176              	.LBB546:
 6177              	.LBI546:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6178              		.loc 2 6920 26 is_stmt 1 view .LVU1917
 6179              	.LBB547:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6180              		.loc 2 6922 3 view .LVU1918
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6181              		.loc 2 6922 12 is_stmt 0 view .LVU1919
 6182 0002 9A68     		ldr	r2, [r3, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6183              		.loc 2 6922 68 view .LVU1920
 6184 0004 12F0010F 		tst	r2, #1
 6185 0008 07D1     		bne	.L447
 6186              	.LVL547:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6187              		.loc 2 6922 68 view .LVU1921
 6188              	.LBE547:
 6189              	.LBE546:
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_EnableDeepPowerDown(hadc->Instance);
ARM GAS  /tmp/cc2hwav8.s 			page 316


 6190              		.loc 1 2591 5 is_stmt 1 view .LVU1922
 6191              	.LBB548:
 6192              	.LBI548:
6774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6193              		.loc 2 6774 22 view .LVU1923
 6194              	.LBB549:
6779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6195              		.loc 2 6779 3 view .LVU1924
 6196 000a 9968     		ldr	r1, [r3, #8]
 6197 000c 044A     		ldr	r2, .L448
 6198 000e 0A40     		ands	r2, r2, r1
 6199 0010 42F00052 		orr	r2, r2, #536870912
 6200 0014 9A60     		str	r2, [r3, #8]
 6201              	.LVL548:
6779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6202              		.loc 2 6779 3 is_stmt 0 view .LVU1925
 6203              	.LBE549:
 6204              	.LBE548:
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 6205              		.loc 1 2592 5 is_stmt 1 view .LVU1926
 6206              		.loc 1 2592 20 is_stmt 0 view .LVU1927
 6207 0016 0020     		movs	r0, #0
 6208              	.LVL549:
 6209              		.loc 1 2592 20 view .LVU1928
 6210 0018 7047     		bx	lr
 6211              	.LVL550:
 6212              	.L447:
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 6213              		.loc 1 2596 20 view .LVU1929
 6214 001a 0120     		movs	r0, #1
 6215              	.LVL551:
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 6216              		.loc 1 2599 3 is_stmt 1 view .LVU1930
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 6217              		.loc 1 2600 1 is_stmt 0 view .LVU1931
 6218 001c 7047     		bx	lr
 6219              	.L449:
 6220 001e 00BF     		.align	2
 6221              	.L448:
 6222 0020 C0FFFF5F 		.word	1610612672
 6223              		.cfi_endproc
 6224              	.LFE364:
 6226              		.text
 6227              	.Letext0:
 6228              		.file 4 "/home/p7810456/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/arm-none-eabi/include/mac
 6229              		.file 5 "/home/p7810456/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys
 6230              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7a3xx.h"
 6231              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 6232              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 6233              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 6234              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 6235              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
ARM GAS  /tmp/cc2hwav8.s 			page 317


 6236              		.file 12 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 6237              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/cc2hwav8.s 			page 318


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_adc_ex.c
     /tmp/cc2hwav8.s:20     .text.LL_ADC_SetCalibrationOffsetFactor:00000000 $t
     /tmp/cc2hwav8.s:25     .text.LL_ADC_SetCalibrationOffsetFactor:00000000 LL_ADC_SetCalibrationOffsetFactor
     /tmp/cc2hwav8.s:53     .text.LL_ADC_SetCalibrationLinearFactor:00000000 $t
     /tmp/cc2hwav8.s:58     .text.LL_ADC_SetCalibrationLinearFactor:00000000 LL_ADC_SetCalibrationLinearFactor
     /tmp/cc2hwav8.s:102    .text.LL_ADC_SetCalibrationLinearFactor:00000028 $d
     /tmp/cc2hwav8.s:107    .text.LL_ADC_GetCalibrationLinearFactor:00000000 $t
     /tmp/cc2hwav8.s:112    .text.LL_ADC_GetCalibrationLinearFactor:00000000 LL_ADC_GetCalibrationLinearFactor
     /tmp/cc2hwav8.s:155    .text.LL_ADC_GetCalibrationLinearFactor:00000020 $d
     /tmp/cc2hwav8.s:160    .text.LL_ADC_SetChannelSamplingTime:00000000 $t
     /tmp/cc2hwav8.s:165    .text.LL_ADC_SetChannelSamplingTime:00000000 LL_ADC_SetChannelSamplingTime
     /tmp/cc2hwav8.s:210    .text.HAL_ADCEx_Calibration_Start:00000000 $t
     /tmp/cc2hwav8.s:216    .text.HAL_ADCEx_Calibration_Start:00000000 HAL_ADCEx_Calibration_Start
     /tmp/cc2hwav8.s:384    .text.HAL_ADCEx_Calibration_Start:0000009c $d
     /tmp/cc2hwav8.s:391    .text.HAL_ADCEx_Calibration_GetValue:00000000 $t
     /tmp/cc2hwav8.s:397    .text.HAL_ADCEx_Calibration_GetValue:00000000 HAL_ADCEx_Calibration_GetValue
     /tmp/cc2hwav8.s:438    .text.HAL_ADCEx_LinearCalibration_GetValue:00000000 $t
     /tmp/cc2hwav8.s:444    .text.HAL_ADCEx_LinearCalibration_GetValue:00000000 HAL_ADCEx_LinearCalibration_GetValue
     /tmp/cc2hwav8.s:603    .text.HAL_ADCEx_LinearCalibration_GetValue:0000007c $d
     /tmp/cc2hwav8.s:608    .text.HAL_ADCEx_Calibration_SetValue:00000000 $t
     /tmp/cc2hwav8.s:614    .text.HAL_ADCEx_Calibration_SetValue:00000000 HAL_ADCEx_Calibration_SetValue
     /tmp/cc2hwav8.s:750    .text.HAL_ADCEx_LinearCalibration_SetValue:00000000 $t
     /tmp/cc2hwav8.s:756    .text.HAL_ADCEx_LinearCalibration_SetValue:00000000 HAL_ADCEx_LinearCalibration_SetValue
     /tmp/cc2hwav8.s:1038   .text.HAL_ADCEx_LinearCalibration_SetValue:00000110 $d
     /tmp/cc2hwav8.s:1045   .text.HAL_ADCEx_LinearCalibration_FactorLoad:00000000 $t
     /tmp/cc2hwav8.s:1051   .text.HAL_ADCEx_LinearCalibration_FactorLoad:00000000 HAL_ADCEx_LinearCalibration_FactorLoad
     /tmp/cc2hwav8.s:1141   .text.HAL_ADCEx_LinearCalibration_FactorLoad:00000054 $d
     /tmp/cc2hwav8.s:1147   .text.HAL_ADCEx_InjectedStart:00000000 $t
     /tmp/cc2hwav8.s:1153   .text.HAL_ADCEx_InjectedStart:00000000 HAL_ADCEx_InjectedStart
     /tmp/cc2hwav8.s:1400   .text.HAL_ADCEx_InjectedStart:000000e8 $d
     /tmp/cc2hwav8.s:1408   .text.HAL_ADCEx_InjectedStop:00000000 $t
     /tmp/cc2hwav8.s:1414   .text.HAL_ADCEx_InjectedStop:00000000 HAL_ADCEx_InjectedStop
     /tmp/cc2hwav8.s:1513   .text.HAL_ADCEx_InjectedStop:00000050 $d
     /tmp/cc2hwav8.s:1518   .text.HAL_ADCEx_InjectedPollForConversion:00000000 $t
     /tmp/cc2hwav8.s:1524   .text.HAL_ADCEx_InjectedPollForConversion:00000000 HAL_ADCEx_InjectedPollForConversion
     /tmp/cc2hwav8.s:1815   .text.HAL_ADCEx_InjectedPollForConversion:000000fc $d
     /tmp/cc2hwav8.s:1821   .text.HAL_ADCEx_InjectedStart_IT:00000000 $t
     /tmp/cc2hwav8.s:1827   .text.HAL_ADCEx_InjectedStart_IT:00000000 HAL_ADCEx_InjectedStart_IT
     /tmp/cc2hwav8.s:2118   .text.HAL_ADCEx_InjectedStart_IT:0000012c $d
     /tmp/cc2hwav8.s:2126   .text.HAL_ADCEx_InjectedStop_IT:00000000 $t
     /tmp/cc2hwav8.s:2132   .text.HAL_ADCEx_InjectedStop_IT:00000000 HAL_ADCEx_InjectedStop_IT
     /tmp/cc2hwav8.s:2236   .text.HAL_ADCEx_InjectedStop_IT:0000005c $d
     /tmp/cc2hwav8.s:2241   .text.HAL_ADCEx_MultiModeStart_DMA:00000000 $t
     /tmp/cc2hwav8.s:2247   .text.HAL_ADCEx_MultiModeStart_DMA:00000000 HAL_ADCEx_MultiModeStart_DMA
     /tmp/cc2hwav8.s:2471   .text.HAL_ADCEx_MultiModeStart_DMA:000000cc $d
     /tmp/cc2hwav8.s:2481   .text.HAL_ADCEx_MultiModeStop_DMA:00000000 $t
     /tmp/cc2hwav8.s:2487   .text.HAL_ADCEx_MultiModeStop_DMA:00000000 HAL_ADCEx_MultiModeStop_DMA
     /tmp/cc2hwav8.s:2817   .text.HAL_ADCEx_MultiModeStop_DMA:00000110 $d
     /tmp/cc2hwav8.s:2823   .text.HAL_ADCEx_MultiModeGetValue:00000000 $t
     /tmp/cc2hwav8.s:2829   .text.HAL_ADCEx_MultiModeGetValue:00000000 HAL_ADCEx_MultiModeGetValue
     /tmp/cc2hwav8.s:2851   .text.HAL_ADCEx_MultiModeGetValue:00000008 $d
     /tmp/cc2hwav8.s:2856   .text.HAL_ADCEx_InjectedGetValue:00000000 $t
     /tmp/cc2hwav8.s:2862   .text.HAL_ADCEx_InjectedGetValue:00000000 HAL_ADCEx_InjectedGetValue
     /tmp/cc2hwav8.s:2927   .text.HAL_ADCEx_InjectedConvCpltCallback:00000000 $t
     /tmp/cc2hwav8.s:2933   .text.HAL_ADCEx_InjectedConvCpltCallback:00000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/cc2hwav8.s:2948   .text.HAL_ADCEx_InjectedQueueOverflowCallback:00000000 $t
ARM GAS  /tmp/cc2hwav8.s 			page 319


     /tmp/cc2hwav8.s:2954   .text.HAL_ADCEx_InjectedQueueOverflowCallback:00000000 HAL_ADCEx_InjectedQueueOverflowCallback
     /tmp/cc2hwav8.s:2969   .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 $t
     /tmp/cc2hwav8.s:2975   .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 HAL_ADCEx_LevelOutOfWindow2Callback
     /tmp/cc2hwav8.s:2990   .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 $t
     /tmp/cc2hwav8.s:2996   .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 HAL_ADCEx_LevelOutOfWindow3Callback
     /tmp/cc2hwav8.s:3011   .text.HAL_ADCEx_EndOfSamplingCallback:00000000 $t
     /tmp/cc2hwav8.s:3017   .text.HAL_ADCEx_EndOfSamplingCallback:00000000 HAL_ADCEx_EndOfSamplingCallback
     /tmp/cc2hwav8.s:3032   .text.HAL_ADCEx_RegularStop:00000000 $t
     /tmp/cc2hwav8.s:3038   .text.HAL_ADCEx_RegularStop:00000000 HAL_ADCEx_RegularStop
     /tmp/cc2hwav8.s:3140   .text.HAL_ADCEx_RegularStop:00000058 $d
     /tmp/cc2hwav8.s:3145   .text.HAL_ADCEx_RegularStop_IT:00000000 $t
     /tmp/cc2hwav8.s:3151   .text.HAL_ADCEx_RegularStop_IT:00000000 HAL_ADCEx_RegularStop_IT
     /tmp/cc2hwav8.s:3258   .text.HAL_ADCEx_RegularStop_IT:00000060 $d
     /tmp/cc2hwav8.s:3263   .text.HAL_ADCEx_RegularStop_DMA:00000000 $t
     /tmp/cc2hwav8.s:3269   .text.HAL_ADCEx_RegularStop_DMA:00000000 HAL_ADCEx_RegularStop_DMA
     /tmp/cc2hwav8.s:3417   .text.HAL_ADCEx_RegularStop_DMA:00000090 $d
     /tmp/cc2hwav8.s:3422   .text.HAL_ADCEx_RegularMultiModeStop_DMA:00000000 $t
     /tmp/cc2hwav8.s:3428   .text.HAL_ADCEx_RegularMultiModeStop_DMA:00000000 HAL_ADCEx_RegularMultiModeStop_DMA
     /tmp/cc2hwav8.s:3787   .text.HAL_ADCEx_RegularMultiModeStop_DMA:00000118 $d
     /tmp/cc2hwav8.s:3793   .text.HAL_ADCEx_InjectedConfigChannel:00000000 $t
     /tmp/cc2hwav8.s:3799   .text.HAL_ADCEx_InjectedConfigChannel:00000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/cc2hwav8.s:5285   .text.HAL_ADCEx_InjectedConfigChannel:000004d8 $d
     /tmp/cc2hwav8.s:5301   .text.HAL_ADCEx_InjectedConfigChannel:000004e4 $t
     /tmp/cc2hwav8.s:5561   .text.HAL_ADCEx_InjectedConfigChannel:000005d8 $d
     /tmp/cc2hwav8.s:5573   .text.HAL_ADCEx_MultiModeConfigChannel:00000000 $t
     /tmp/cc2hwav8.s:5579   .text.HAL_ADCEx_MultiModeConfigChannel:00000000 HAL_ADCEx_MultiModeConfigChannel
     /tmp/cc2hwav8.s:5885   .text.HAL_ADCEx_MultiModeConfigChannel:000000f8 $d
     /tmp/cc2hwav8.s:5893   .text.HAL_ADCEx_EnableInjectedQueue:00000000 $t
     /tmp/cc2hwav8.s:5899   .text.HAL_ADCEx_EnableInjectedQueue:00000000 HAL_ADCEx_EnableInjectedQueue
     /tmp/cc2hwav8.s:5983   .text.HAL_ADCEx_DisableInjectedQueue:00000000 $t
     /tmp/cc2hwav8.s:5989   .text.HAL_ADCEx_DisableInjectedQueue:00000000 HAL_ADCEx_DisableInjectedQueue
     /tmp/cc2hwav8.s:6081   .text.HAL_ADCEx_DisableInjectedQueue:00000030 $d
     /tmp/cc2hwav8.s:6086   .text.HAL_ADCEx_DisableVoltageRegulator:00000000 $t
     /tmp/cc2hwav8.s:6092   .text.HAL_ADCEx_DisableVoltageRegulator:00000000 HAL_ADCEx_DisableVoltageRegulator
     /tmp/cc2hwav8.s:6151   .text.HAL_ADCEx_DisableVoltageRegulator:0000001c $d
     /tmp/cc2hwav8.s:6156   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:00000000 $t
     /tmp/cc2hwav8.s:6162   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:00000000 HAL_ADCEx_EnterADCDeepPowerDownMode
     /tmp/cc2hwav8.s:6222   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:00000020 $d

UNDEFINED SYMBOLS
ADC_Disable
ADC_Enable
SystemCoreClock
ADC_ConversionStop
HAL_GetTick
HAL_DMA_Start_IT
ADC_DMAConvCplt
ADC_DMAHalfConvCplt
ADC_DMAError
HAL_DMA_Abort
